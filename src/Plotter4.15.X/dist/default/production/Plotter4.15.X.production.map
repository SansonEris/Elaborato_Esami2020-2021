Microchip MPLAB XC8 Compiler V1.36 ()

Linker command line:

-W-3 --edf=/opt/microchip/xc8/v1.36/dat/en_msgs.txt -cs \
  -h+dist/default/production/Plotter4.15.X.production.sym \
  --cmf=dist/default/production/Plotter4.15.X.production.cmf -z -Q16F887 \
  -o/tmp/xcXhYOAIQ -Mdist/default/production/Plotter4.15.X.production.map \
  -E1 -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k /tmp/xcXvb2LSW.obj \
  dist/default/production/Plotter4.15.X.production.obj 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xcXvb2LSW.obj
                end_init                              0        0        3        0       0
                config                             2007     2007        2     400E       0
dist/default/production/Plotter4.15.X.production.obj
                cinit                               7CD      7CD       33      F9A       0
                text31                              B67      B67        9     16CE       0
                text30                              B70      B70        B     16E0       0
                text29                                B        B       15       16       0
                text28                              BD2      BD2       21     17A4       0
                text27                              171      171       89      2E2       0
                text26                              BAA      BAA       14     1754       0
                text25                              C14      C14       22     1828       0
                text24                               20       20       70       40       0
                text23                               90       90       70      120       0
                text22                              ED9      ED9       5B     1DB2       0
                text21                              BF3      BF3       21     17E6       0
                text20                              B7B      B7B        B     16F6       0
                text19                              CD1      CD1       33     19A2       0
                text18                              C36      C36       23     186C       0
                text17                              F95      F95       6B     1F2A       0
                text16                              F34      F34       61     1E68       0
                text15                              DA6      DA6       43     1B4C       0
                text14                              B97      B97       13     172E       0
                text13                              DE9      DE9       50     1BD2       0
                text12                              BBE      BBE       14     177C       0
                text11                              D04      D04       36     1A08       0
                text10                              1FA      1FA       FF      3F4       0
                text9                               E39      E39       50     1C72       0
                text8                               D3A      D3A       36     1A74       0
                text7                               2F9      2F9       FF      5F2       0
                text6                               E89      E89       50     1D12       0
                text5                               D70      D70       36     1AE0       0
                text4                               3F8      3F8       FF      7F0       0
                text3                               CA7      CA7       2A     194E       0
                text2                               C59      C59       26     18B2       0
                text1                               100      100       71      200       0
                maintext                            4F7      4F7      2D6      9EE       0
                cstackBANK0                          4C       4C       20       20       1
                cstackCOMMON                         70       70        D       70       1
                inittext                            B86      B86       11     170C       0
                clrtext                               3        3        8        0       0
                dataBANK1                            A0       A0       28       A0       1
                bssBANK1                             C8       C8       10       A0       1
                dataBANK0                            6C       6C        3       20       1
                bssBANK0                             20       20       2C       20       1
                dataCOMMON                           7D       7D        1       70       1
                strings                             800      800       5A     1000       0
                nvBANK1                              D8       D8        9       A0       1
                nvBANK0                              6F       6F        1       20       1
                idataBANK1                          C7F      C7F       28     18FE       0
                idataBANK0                          B64      B64        3     16C8       0
                idataCOMMON                         B63      B63        1     16C6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7CD      7CD       33         0
                text31                              B67      B67        9         0
                text30                              B70      B70        B         0
                text29                                B        B       15         0
                text28                              BD2      BD2       21         0
                text27                              171      171       89         0
                text26                              BAA      BAA       14         0
                text25                              C14      C14       22         0
                text24                               20       20       70         0
                text23                               90       90       70         0
                text22                              ED9      ED9       5B         0
                text21                              BF3      BF3       21         0
                text20                              B7B      B7B        B         0
                text19                              CD1      CD1       33         0
                text18                              C36      C36       23         0
                text17                              F95      F95       6B         0
                text16                              F34      F34       61         0
                text15                              DA6      DA6       43         0
                text14                              B97      B97       13         0
                text13                              DE9      DE9       50         0
                text12                              BBE      BBE       14         0
                text11                              D04      D04       36         0
                text10                              1FA      1FA       FF         0
                text9                               E39      E39       50         0
                text8                               D3A      D3A       36         0
                text7                               2F9      2F9       FF         0
                text6                               E89      E89       50         0
                text5                               D70      D70       36         0
                text4                               3F8      3F8       FF         0
                text3                               CA7      CA7       2A         0
                text2                               C59      C59       26         0
                text1                               100      100       71         0
                maintext                            4F7      4F7      2D6         0
                inittext                            B86      B86       11         0
                clrtext                               3        3        8         0
                idataBANK1                          C7F      C7F       28         0
                idataBANK0                          B64      B64        3         0
                idataCOMMON                         B63      B63        1         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             800      800       5A         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1
                dataCOMMON                           7D       7D        1         1

        CLASS   BANK0          
                cstackBANK0                          4C       4C       20         1
                dataBANK0                            6C       6C        3         1
                bssBANK0                             20       20       2C         1
                nvBANK0                              6F       6F        1         1

        CLASS   BANK1          
                dataBANK1                            A0       A0       28         1
                bssBANK1                             C8       C8       10         1
                nvBANK1                              D8       D8        9         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  00000B  00000B         0       0  CODE        2
                text29                         00000B  000015  000020        16       0  CODE        2
                bssBANK0                       000020  000050  000070        20       1  BANK0       1
                text24                         000020  000070  000090        40       0  CODE        2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                dataBANK1                      0000A0  000041  0000E1        A0       1  BANK1       1
                text23                         000090  000070  000100       120       0  CODE        2
                text1                          000100  000071  000171       200       0  CODE        2
                text27                         000171  000089  0001FA       2E2       0  CODE        2
                text10                         0001FA  0000FF  0002F9       3F4       0  CODE        2
                text7                          0002F9  0000FF  0003F8       5F2       0  CODE        2
                text4                          0003F8  0000FF  0004F7       7F0       0  CODE        2
                maintext                       0004F7  0002D6  0007CD       9EE       0  CODE        2
                cinit                          0007CD  000033  000800       F9A       0  CODE        2
                strings                        000800  00005A  00085A      1000       0  STRING      2
                idataCOMMON                    000B63  000001  000B64      16C6       0  CODE        2
                idataBANK0                     000B64  000003  000B67      16C8       0  CODE        2
                text31                         000B67  000009  000B70      16CE       0  CODE        2
                text30                         000B70  00000B  000B7B      16E0       0  CODE        2
                text20                         000B7B  00000B  000B86      16F6       0  CODE        2
                inittext                       000B86  000011  000B97      170C       0  CODE        2
                text14                         000B97  000013  000BAA      172E       0  CODE        2
                text26                         000BAA  000014  000BBE      1754       0  CODE        2
                text12                         000BBE  000014  000BD2      177C       0  CODE        2
                text28                         000BD2  000021  000BF3      17A4       0  CODE        2
                text21                         000BF3  000021  000C14      17E6       0  CODE        2
                text25                         000C14  000022  000C36      1828       0  CODE        2
                text18                         000C36  000023  000C59      186C       0  CODE        2
                text2                          000C59  000026  000C7F      18B2       0  CODE        2
                idataBANK1                     000C7F  000028  000CA7      18FE       0  CODE        2
                text3                          000CA7  00002A  000CD1      194E       0  CODE        2
                text19                         000CD1  000033  000D04      19A2       0  CODE        2
                text11                         000D04  000036  000D3A      1A08       0  CODE        2
                text8                          000D3A  000036  000D70      1A74       0  CODE        2
                text5                          000D70  000036  000DA6      1AE0       0  CODE        2
                text15                         000DA6  000043  000DE9      1B4C       0  CODE        2
                text13                         000DE9  000050  000E39      1BD2       0  CODE        2
                text9                          000E39  000050  000E89      1C72       0  CODE        2
                text6                          000E89  000050  000ED9      1D12       0  CODE        2
                text22                         000ED9  00005B  000F34      1DB2       0  CODE        2
                text16                         000F34  000061  000F95      1E68       0  CODE        2
                text17                         000F95  00006B  001000      1F2A       0  CODE        2
                config                         002007  000002  002009      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            00E1-00EF              F           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             085A-0B62            309           2
                         1000-1FFF            800
        CONST            085A-0B62            100           2
                         1000-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            085A-0B62            100           2
                         1000-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              00E1-00EF              F           1
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          085A-0B62            309           2
                         1000-1FFF           1000
        STRING           085A-0B62            100           2
                         1000-1FFF            100

                                  Symbol Table

?___awdiv                                 cstackCOMMON 0076
?___wmul                                  cstackCOMMON 0070
?_activeMotor                             cstackCOMMON 0070
?_equivVal                                cstackBANK0  0055
?_limitz                                  cstackCOMMON 0070
?_maxStep                                 cstackCOMMON 0070
?_motorXInit                              cstackCOMMON 0078
?_motorYInit                              cstackCOMMON 0078
?_motorZInit                              cstackCOMMON 0078
?_strcmp                                  cstackCOMMON 0070
?_strlen                                  cstackCOMMON 0070
?_toint                                   cstackCOMMON 0078
UART_RxString@ch                          cstackCOMMON 0074
UART_RxString@len                         cstackCOMMON 0073
UART_RxString@stringa                     cstackCOMMON 0072
UART_TxChar@ch                            cstackCOMMON 0070
UART_TxInt@cent                           cstackCOMMON 007C
UART_TxInt@dec                            cstackCOMMON 007B
UART_TxInt@sig                            cstackCOMMON 0079
UART_TxInt@uni                            cstackCOMMON 007A
UART_TxInt@val                            cstackCOMMON 0076
UART_TxString@str                         cstackCOMMON 0071
_ANSEL                                    (abs)        0188
_ANSELH                                   (abs)        0189
_BAUDCTLbits                              (abs)        0187
_CREN                                     (abs)        00C4
_MStepX                                   nvBANK1      00D8
_MStepY                                   nvBANK1      00DA
_MStepZ                                   nvBANK1      00DC
_OERR                                     (abs)        00C1
_PORTA                                    (abs)        0005
_PORTAbits                                (abs)        0005
_PORTB                                    (abs)        0006
_PORTBbits                                (abs)        0006
_PORTC                                    (abs)        0007
_PORTCbits                                (abs)        0007
_PORTD                                    (abs)        0008
_PORTDbits                                (abs)        0008
_PORTE                                    (abs)        0009
_PORTEbits                                (abs)        0009
_RCIF                                     (abs)        0065
_RCREG                                    (abs)        001A
_RCSTAbits                                (abs)        0018
_SPBRG                                    (abs)        0099
_SPBRGH                                   (abs)        009A
_TRISA                                    (abs)        0085
_TRISB                                    (abs)        0086
_TRISC                                    (abs)        0087
_TRISD                                    (abs)        0088
_TRISE                                    (abs)        0089
_TXIF                                     (abs)        0064
_TXREG                                    (abs)        0019
_TXSTAbits                                (abs)        0098
_UART_GotoNewLine                         text30       0B70
_UART_Init                                text29       000B
_UART_RxChar                              text20       0B7B
_UART_RxString                            text19       0CD1
_UART_TxChar                              text31       0B67
_UART_TxInt                               text27       0171
_UART_TxString                            text18       0C36
__CFG_BOR4V$BOR40V                        (abs)        0000
__CFG_BOREN$OFF                           (abs)        0000
__CFG_CP$OFF                              (abs)        0000
__CFG_CPD$OFF                             (abs)        0000
__CFG_FCMEN$OFF                           (abs)        0000
__CFG_FOSC$XT                             (abs)        0000
__CFG_IESO$OFF                            (abs)        0000
__CFG_LVP$OFF                             (abs)        0000
__CFG_MCLRE$ON                            (abs)        0000
__CFG_PWRTE$OFF                           (abs)        0000
__CFG_WDTE$OFF                            (abs)        0000
__CFG_WRT$OFF                             (abs)        0000
__Habs1                                   abs1         0000
__Hbank0                                  bank0        0000
__Hbank1                                  bank1        0000
__Hbank2                                  bank2        0000
__Hbank3                                  bank3        0000
__HbssBANK0                               bssBANK0     0000
__HbssBANK1                               bssBANK1     0000
__Hcinit                                  cinit        0800
__Hclrtext                                clrtext      0000
__Hcode                                   code         0000
__Hcommon                                 common       0000
__Hconfig                                 config       2009
__HcstackBANK0                            cstackBANK0  0000
__HcstackCOMMON                           cstackCOMMON 0000
__HdataBANK0                              dataBANK0    0000
__HdataBANK1                              dataBANK1    0000
__HdataCOMMON                             dataCOMMON   0000
__Heeprom_data                            eeprom_data  0000
__Hend_init                               end_init     0003
__Hfunctab                                functab      0000
__HidataBANK0                             idataBANK0   0000
__HidataBANK1                             idataBANK1   0000
__HidataCOMMON                            idataCOMMON  0000
__Hidloc                                  idloc        0000
__Hinit                                   init         0000
__Hinittext                               inittext     0000
__Hintentry                               intentry     0000
__Hmaintext                               maintext     0000
__HnvBANK0                                nvBANK0      0000
__HnvBANK1                                nvBANK1      0000
__Hpowerup                                powerup      0000
__Hram                                    ram          0000
__Hreset_vec                              reset_vec    0000
__Hsfr0                                   sfr0         0000
__Hsfr1                                   sfr1         0000
__Hsfr2                                   sfr2         0000
__Hsfr3                                   sfr3         0000
__Hspace_0                                (abs)        2009
__Hspace_1                                (abs)        00E1
__Hspace_2                                (abs)        0000
__Hspace_3                                (abs)        0000
__Hstack                                  stack        0000
__Hstrings                                strings      0000
__Htext                                   text         0000
__Labs1                                   abs1         0000
__Lbank0                                  bank0        0000
__Lbank1                                  bank1        0000
__Lbank2                                  bank2        0000
__Lbank3                                  bank3        0000
__LbssBANK0                               bssBANK0     0000
__LbssBANK1                               bssBANK1     0000
__Lcinit                                  cinit        07CD
__Lclrtext                                clrtext      0000
__Lcode                                   code         0000
__Lcommon                                 common       0000
__Lconfig                                 config       2007
__LcstackBANK0                            cstackBANK0  0000
__LcstackCOMMON                           cstackCOMMON 0000
__LdataBANK0                              dataBANK0    0000
__LdataBANK1                              dataBANK1    0000
__LdataCOMMON                             dataCOMMON   0000
__Leeprom_data                            eeprom_data  0000
__Lend_init                               end_init     0000
__Lfunctab                                functab      0000
__LidataBANK0                             idataBANK0   0000
__LidataBANK1                             idataBANK1   0000
__LidataCOMMON                            idataCOMMON  0000
__Lidloc                                  idloc        0000
__Linit                                   init         0000
__Linittext                               inittext     0000
__Lintentry                               intentry     0000
__Lmaintext                               maintext     0000
__LnvBANK0                                nvBANK0      0000
__LnvBANK1                                nvBANK1      0000
__Lpowerup                                powerup      0000
__Lram                                    ram          0000
__Lreset_vec                              reset_vec    0000
__Lsfr0                                   sfr0         0000
__Lsfr1                                   sfr1         0000
__Lsfr2                                   sfr2         0000
__Lsfr3                                   sfr3         0000
__Lspace_0                                (abs)        0000
__Lspace_1                                (abs)        0000
__Lspace_2                                (abs)        0000
__Lspace_3                                (abs)        0000
__Lstack                                  stack        0000
__Lstrings                                strings      0000
__Ltext                                   text         0000
__S0                                      (abs)        2009
__S1                                      (abs)        00E1
__S2                                      (abs)        0000
__S3                                      (abs)        0000
___awdiv                                  text22       0ED9
___awdiv@counter                          cstackBANK0  004C
___awdiv@dividend                         cstackCOMMON 0078
___awdiv@divisor                          cstackCOMMON 0076
___awdiv@quotient                         cstackBANK0  004E
___awdiv@sign                             cstackBANK0  004D
___int_sp                                 stack        0000
___latbits                                (abs)        0002
___sp                                     stack        0000
___wmul                                   text28       0BD2
___wmul@multiplicand                      cstackCOMMON 0072
___wmul@multiplier                        cstackCOMMON 0070
___wmul@product                           cstackCOMMON 0074
__end_of_UART_GotoNewLine                 text30       0B7B
__end_of_UART_Init                        text29       0020
__end_of_UART_RxChar                      text20       0B86
__end_of_UART_RxString                    text19       0D04
__end_of_UART_TxChar                      text31       0B70
__end_of_UART_TxInt                       text27       01FA
__end_of_UART_TxString                    text18       0C59
__end_of___awdiv                          text22       0F34
__end_of___wmul                           text28       0BF3
__end_of__initialization                  cinit        07FC
__end_of__stringtab                       strings      0810
__end_of_activeMotor                      text26       0BBE
__end_of_constSpeed                       text25       0C36
__end_of_contStepX                        text24       0090
__end_of_contStepY                        text23       0100
__end_of_equivVal                         text21       0C14
__end_of_getCanvasDim                     text17       1000
__end_of_getCoords                        text16       0F95
__end_of_limitz                           text14       0BAA
__end_of_main                             maintext     07CD
__end_of_maxStep                          text15       0DE9
__end_of_modM1                            text13       0E39
__end_of_modM2                            text9        0E89
__end_of_modM3                            text6        0ED9
__end_of_motorXInit                       text10       02F9
__end_of_motorYInit                       text7        03F8
__end_of_motorZInit                       text4        04F7
__end_of_ms_delay                         text12       0BD2
__end_of_stepMotorX                       text11       0D3A
__end_of_stepMotorY                       text8        0D70
__end_of_stepMotorZ                       text5        0DA6
__end_of_strcmp                           text3        0CD1
__end_of_strlen                           text2        0C7F
__end_of_toint                            text1        0171
__initialization                          cinit        07CD
__pbssBANK0                               bssBANK0     0020
__pbssBANK1                               bssBANK1     00C8
__pcstackBANK0                            cstackBANK0  004C
__pcstackCOMMON                           cstackCOMMON 0070
__pdataBANK0                              dataBANK0    006C
__pdataBANK1                              dataBANK1    00A0
__pdataCOMMON                             dataCOMMON   007D
__pidataBANK0                             idataBANK0   0B64
__pidataBANK1                             idataBANK1   0C7F
__pidataCOMMON                            idataCOMMON  0B63
__pmaintext                               maintext     04F7
__pnvBANK0                                nvBANK0      006F
__pnvBANK1                                nvBANK1      00D8
__pstrings                                strings      0800
__ptext1                                  text1        0100
__ptext10                                 text10       01FA
__ptext11                                 text11       0D04
__ptext12                                 text12       0BBE
__ptext13                                 text13       0DE9
__ptext14                                 text14       0B97
__ptext15                                 text15       0DA6
__ptext16                                 text16       0F34
__ptext17                                 text17       0F95
__ptext18                                 text18       0C36
__ptext19                                 text19       0CD1
__ptext2                                  text2        0C59
__ptext20                                 text20       0B7B
__ptext21                                 text21       0BF3
__ptext22                                 text22       0ED9
__ptext23                                 text23       0090
__ptext24                                 text24       0020
__ptext25                                 text25       0C14
__ptext26                                 text26       0BAA
__ptext27                                 text27       0171
__ptext28                                 text28       0BD2
__ptext29                                 text29       000B
__ptext3                                  text3        0CA7
__ptext30                                 text30       0B70
__ptext31                                 text31       0B67
__ptext4                                  text4        03F8
__ptext5                                  text5        0D70
__ptext6                                  text6        0E89
__ptext7                                  text7        02F9
__ptext8                                  text8        0D3A
__ptext9                                  text9        0E39
__size_of_UART_GotoNewLine                (abs)        0000
__size_of_UART_Init                       (abs)        0000
__size_of_UART_RxChar                     (abs)        0000
__size_of_UART_RxString                   (abs)        0000
__size_of_UART_TxChar                     (abs)        0000
__size_of_UART_TxInt                      (abs)        0000
__size_of_UART_TxString                   (abs)        0000
__size_of___awdiv                         (abs)        0000
__size_of___wmul                          (abs)        0000
__size_of_activeMotor                     (abs)        0000
__size_of_constSpeed                      (abs)        0000
__size_of_contStepX                       (abs)        0000
__size_of_contStepY                       (abs)        0000
__size_of_equivVal                        (abs)        0000
__size_of_getCanvasDim                    (abs)        0000
__size_of_getCoords                       (abs)        0000
__size_of_limitz                          (abs)        0000
__size_of_main                            (abs)        0000
__size_of_maxStep                         (abs)        0000
__size_of_modM1                           (abs)        0000
__size_of_modM2                           (abs)        0000
__size_of_modM3                           (abs)        0000
__size_of_motorXInit                      (abs)        0000
__size_of_motorYInit                      (abs)        0000
__size_of_motorZInit                      (abs)        0000
__size_of_ms_delay                        (abs)        0000
__size_of_stepMotorX                      (abs)        0000
__size_of_stepMotorY                      (abs)        0000
__size_of_stepMotorZ                      (abs)        0000
__size_of_strcmp                          (abs)        0000
__size_of_strlen                          (abs)        0000
__size_of_toint                           (abs)        0000
__stringbase                              strings      080F
__stringtab                               strings      0800
_activeMotor                              text26       0BAA
_canvas                                   bssBANK1     00D1
_canvasX                                  dataBANK0    006C
_canvasY                                  dataBANK1    00C5
_canvasx                                  bssBANK0     002F
_canvasy                                  bssBANK0     0031
_constSpeed                               text25       0C14
_contStepX                                text24       0020
_contStepY                                text23       0090
_coords                                   bssBANK1     00C8
_defaultDirx                              nvBANK1      00DE
_defaultDiry                              nvBANK1      00DF
_defaultDirz                              nvBANK0      006F
_end                                      nvBANK1      00E0
_equivVal                                 text21       0BF3
_getCanvasDim                             text17       0F95
_getCoords                                text16       0F34
_limitX0                                  bssBANK0     0045
_limitX1                                  bssBANK0     0046
_limitY0                                  bssBANK0     0047
_limitY1                                  bssBANK0     0048
_limitZ0                                  bssBANK0     0049
_limitZ1                                  bssBANK0     004A
_limitz                                   text14       0B97
_main                                     maintext     04F7
_maxStep                                  text15       0DA6
_maxStep$394                              cstackCOMMON 0077
_maxStep$395                              cstackCOMMON 0079
_modM1                                    text13       0DE9
_modM2                                    text9        0E39
_modM3                                    text6        0E89
_motorX                                   bssBANK0     0020
_motorXInit                               text10       01FA
_motorY                                   bssBANK0     0025
_motorYInit                               text7        02F9
_motorZ                                   bssBANK0     002A
_motorZInit                               text4        03F8
_ms_delay                                 text12       0BBE
_stepMotorX                               text11       0D04
_stepMotorY                               text8        0D3A
_stepMotorZ                               text5        0D70
_stepX                                    dataBANK1    00B0
_stepXprec                                bssBANK0     0033
_stepY                                    dataBANK1    00B7
_stepYprec                                bssBANK0     0035
_stepZ                                    dataBANK1    00BE
_stepZprec                                bssBANK0     0037
_steps                                    dataCOMMON   007D
_stepx                                    bssBANK0     0039
_stepxTodo                                bssBANK0     003B
_stepy                                    bssBANK0     003D
_stepyTodo                                bssBANK0     003F
_stepz                                    bssBANK0     0041
_stepzTodo                                bssBANK0     0043
_strcmp                                   text3        0CA7
_strlen                                   text2        0C59
_toint                                    text1        0100
activeMotor@i                             cstackCOMMON 0070
activeMotor@step                          cstackCOMMON 0072
btemp                                     (abs)        007E
clear_ram0                                clrtext      0003
constSpeed@activeX                        cstackCOMMON 0070
constSpeed@activeY                        cstackCOMMON 0072
constSpeed@activeZ                        cstackCOMMON 0074
constSpeed@nMotor                         cstackCOMMON 0077
end_of_initialization                     cinit        07FC
equivVal@Mcanvas                          cstackBANK0  0055
equivVal@Mstep                            cstackBANK0  0057
equivVal@canvas                           cstackBANK0  0059
getCanvasDim@canvas                       cstackCOMMON 0077
getCanvasDim@j                            cstackCOMMON 0078
getCoords@coords                          cstackCOMMON 0078
getCoords@i                               cstackCOMMON 0079
init_fetch0                               inittext     0B86
init_ram0                                 inittext     0B8A
intlevel0                                 functab      0000
intlevel1                                 functab      0000
intlevel2                                 functab      0000
intlevel3                                 functab      0000
intlevel4                                 functab      0000
intlevel5                                 functab      0000
ltemp                                     (abs)        007E
ltemp0                                    (abs)        007E
ltemp1                                    (abs)        0082
ltemp2                                    (abs)        0086
ltemp3                                    (abs)        0080
main@activeX                              cstackBANK0  0066
main@activeY                              cstackBANK0  0068
main@activeZ                              cstackBANK0  0060
main@i                                    cstackBANK0  006A
main@i_523                                cstackBANK0  0062
main@i_525                                cstackBANK0  0064
main@largest                              cstackBANK0  005E
maxStep@l                                 cstackCOMMON 007B
maxStep@stepx                             cstackCOMMON 0070
maxStep@stepy                             cstackCOMMON 0072
maxStep@stepz                             cstackCOMMON 0074
modConversionFormNumberToMultiplier@F1996 dataBANK1    00A0
modM1@m                                   cstackCOMMON 0070
modM2@m                                   cstackCOMMON 0070
modM3@m                                   cstackCOMMON 0070
motorXInit@i                              cstackBANK0  004C
motorXInit@j                              cstackBANK0  004E
motorXInit@j_561                          cstackBANK0  0052
motorXInit@k                              cstackBANK0  0050
motorXInit@m                              cstackBANK0  0054
motorXInit@status                         cstackBANK0  0056
motorYInit@i                              cstackBANK0  004C
motorYInit@j                              cstackBANK0  004E
motorYInit@j_568                          cstackBANK0  0052
motorYInit@k                              cstackBANK0  0050
motorYInit@m                              cstackBANK0  0054
motorYInit@status                         cstackBANK0  0056
motorZInit@i                              cstackBANK0  004C
motorZInit@j                              cstackBANK0  004E
motorZInit@j_575                          cstackBANK0  0052
motorZInit@k                              cstackBANK0  0050
motorZInit@m                              cstackBANK0  0054
motorZInit@status                         cstackBANK0  0056
ms_delay@i                                cstackCOMMON 0073
ms_delay@val                              cstackCOMMON 0072
reset_vec                                 reset_vec    0000
stackhi                                   (abs)        0000
stacklo                                   (abs)        0000
start                                     init         0000
start_initialization                      cinit        07CD
stepMotorX@dir                            cstackCOMMON 0077
stepMotorX@mod                            cstackCOMMON 0075
stepMotorX@speed                          cstackCOMMON 0074
stepMotorY@dir                            cstackCOMMON 0077
stepMotorY@mod                            cstackCOMMON 0075
stepMotorY@speed                          cstackCOMMON 0074
stepMotorZ@dir                            cstackCOMMON 0077
stepMotorZ@mod                            cstackCOMMON 0075
stepMotorZ@speed                          cstackCOMMON 0074
strcmp@r                                  cstackCOMMON 0074
strcmp@s1                                 cstackCOMMON 0075
strcmp@s2                                 cstackCOMMON 0070
strlen@cp                                 cstackCOMMON 0077
strlen@s                                  cstackCOMMON 0076
toint@c                                   cstackBANK0  0054
toint@flag                                cstackBANK0  004E
toint@i                                   cstackBANK0  0052
toint@r                                   cstackBANK0  004C
toint@value                               cstackBANK0  0050
ttemp                                     (abs)        007E
ttemp0                                    (abs)        007E
ttemp1                                    (abs)        0081
ttemp2                                    (abs)        0084
ttemp3                                    (abs)        0087
ttemp4                                    (abs)        007F
wtemp                                     (abs)        007E
wtemp0                                    (abs)        007E
wtemp1                                    (abs)        0080
wtemp2                                    (abs)        0082
wtemp3                                    (abs)        0084
wtemp4                                    (abs)        0086
wtemp5                                    (abs)        0088
wtemp6                                    (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 85 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   24[BANK0 ] int 
  i               2   22[BANK0 ] int 
  i               2   30[BANK0 ] int 
  activeY         2   28[BANK0 ] int 
  activeX         2   26[BANK0 ] int 
  activeZ         2   20[BANK0 ] int 
  largest         2   18[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      14       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_UART_GotoNewLine
		_UART_Init
		_UART_RxString
		_UART_TxInt
		_UART_TxString
		_activeMotor
		_constSpeed
		_contStepX
		_contStepY
		_equivVal
		_getCanvasDim
		_getCoords
		_maxStep
		_motorXInit
		_motorYInit
		_motorZInit
		_stepMotorX
		_stepMotorY
		_stepMotorZ
		_strcmp
		_toint
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _toint *****************
 Defined at:
		line 276 in file "main.c"
 Parameters:    Size  Location     Type
  c               1    wreg     PTR unsigned char 
		 -> stepZ(7), stepY(7), stepX(7), canvasY(3), 
		 -> canvasX(3), 
 Auto vars:     Size  Location     Type
  c               1    8[BANK0 ] PTR unsigned char 
		 -> stepZ(7), stepY(7), stepX(7), canvasY(3), 
		 -> canvasX(3), 
  i               2    6[BANK0 ] int 
  value           2    4[BANK0 ] int 
  flag            2    2[BANK0 ] int 
  r               2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    8[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       9       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       9       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___wmul
		_strlen
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 4 in file "/opt/microchip/xc8/v1.36/sources/common/strlen.c"
 Parameters:    Size  Location     Type
  s               1    wreg     PTR const unsigned char 
		 -> stepZ(7), stepY(7), stepX(7), canvasY(3), 
		 -> canvasX(3), 
 Auto vars:     Size  Location     Type
  s               1    6[COMMON] PTR const unsigned char 
		 -> stepZ(7), stepY(7), stepX(7), canvasY(3), 
		 -> canvasX(3), 
  cp              1    7[COMMON] PTR const unsigned char 
		 -> stepZ(7), stepY(7), stepX(7), canvasY(3), 
		 -> canvasX(3), 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_toint
 This function uses a non-reentrant model


 *************** function _strcmp *****************
 Defined at:
		line 33 in file "/opt/microchip/xc8/v1.36/sources/common/strcmp.c"
 Parameters:    Size  Location     Type
  s1              1    wreg     PTR const unsigned char 
		 -> coords(9), 
  s2              1    0[COMMON] PTR const unsigned char 
		 -> STR_3(4), STR_2(3), 
 Auto vars:     Size  Location     Type
  s1              1    5[COMMON] PTR const unsigned char 
		 -> coords(9), 
  r               1    4[COMMON] char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _motorZInit *****************
 Defined at:
		line 458 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               2    6[BANK0 ] int 
  k               2    4[BANK0 ] int 
  j               2    2[BANK0 ] int 
  i               2    0[BANK0 ] int 
  status          2   10[BANK0 ] int 
  m               2    8[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    8[COMMON] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0      12       0       0       0
      Temps:          3       0       0       0       0
      Totals:         5      12       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_limitz
		_stepMotorZ
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stepMotorZ *****************
 Defined at:
		line 202 in file "stepMotor.h"
 Parameters:    Size  Location     Type
  dir             1    wreg     unsigned char 
  speed           1    4[COMMON] unsigned char 
  mod             2    5[COMMON] int 
 Auto vars:     Size  Location     Type
  dir             1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_modM3
		_ms_delay
 This function is called by:
		_main
		_motorZInit
		_reset
 This function uses a non-reentrant model


 *************** function _modM3 *****************
 Defined at:
		line 95 in file "motor_mode.h"
 Parameters:    Size  Location     Type
  m               2    0[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stepMotorZ
 This function uses a non-reentrant model


 *************** function _motorYInit *****************
 Defined at:
		line 416 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               2    6[BANK0 ] int 
  k               2    4[BANK0 ] int 
  j               2    2[BANK0 ] int 
  i               2    0[BANK0 ] int 
  status          2   10[BANK0 ] int 
  m               2    8[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    8[COMMON] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0      12       0       0       0
      Temps:          3       0       0       0       0
      Totals:         5      12       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_limitz
		_stepMotorY
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stepMotorY *****************
 Defined at:
		line 181 in file "stepMotor.h"
 Parameters:    Size  Location     Type
  dir             1    wreg     unsigned char 
  speed           1    4[COMMON] unsigned char 
  mod             2    5[COMMON] int 
 Auto vars:     Size  Location     Type
  dir             1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_modM2
		_ms_delay
 This function is called by:
		_main
		_motorYInit
		_reset
 This function uses a non-reentrant model


 *************** function _modM2 *****************
 Defined at:
		line 47 in file "motor_mode.h"
 Parameters:    Size  Location     Type
  m               2    0[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stepMotorY
 This function uses a non-reentrant model


 *************** function _motorXInit *****************
 Defined at:
		line 374 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  j               2    6[BANK0 ] int 
  k               2    4[BANK0 ] int 
  j               2    2[BANK0 ] int 
  i               2    0[BANK0 ] int 
  status          2   10[BANK0 ] int 
  m               2    8[BANK0 ] int 
 Return value:  Size  Location     Type
                  2    8[COMMON] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0      12       0       0       0
      Temps:          3       0       0       0       0
      Totals:         5      12       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_limitz
		_stepMotorX
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stepMotorX *****************
 Defined at:
		line 159 in file "stepMotor.h"
 Parameters:    Size  Location     Type
  dir             1    wreg     unsigned char 
  speed           1    4[COMMON] unsigned char 
  mod             2    5[COMMON] int 
 Auto vars:     Size  Location     Type
  dir             1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         3       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_modM1
		_ms_delay
 This function is called by:
		_main
		_motorXInit
		_reset
 This function uses a non-reentrant model


 *************** function _ms_delay *****************
 Defined at:
		line 67 in file "stepMotor.h"
 Parameters:    Size  Location     Type
  val             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  val             1    2[COMMON] unsigned char 
  i               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stepMotorX
		_stepMotorY
		_stepMotorZ
		_full_drive
		_half_drive
		_microstep8
 This function uses a non-reentrant model


 *************** function _modM1 *****************
 Defined at:
		line 1 in file "motor_mode.h"
 Parameters:    Size  Location     Type
  m               2    0[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_stepMotorX
 This function uses a non-reentrant model


 *************** function _limitz *****************
 Defined at:
		line 263 in file "stepMotor.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_motorXInit
		_motorYInit
		_motorZInit
		_reset
 This function uses a non-reentrant model


 *************** function _maxStep *****************
 Defined at:
		line 231 in file "stepMotor.h"
 Parameters:    Size  Location     Type
  stepx           2    0[COMMON] int 
  stepy           2    2[COMMON] int 
  stepz           2    4[COMMON] int 
 Auto vars:     Size  Location     Type
  l               2   11[COMMON] int 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         6       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:        13       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getCoords *****************
 Defined at:
		line 250 in file "main.c"
 Parameters:    Size  Location     Type
  coords          1    wreg     PTR unsigned char 
		 -> coords(9), 
 Auto vars:     Size  Location     Type
  coords          1    8[COMMON] PTR unsigned char 
		 -> coords(9), 
  i               2    9[COMMON] int 
 Return value:  Size  Location     Type
                  2   72[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_UART_RxString
		_UART_TxString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _getCanvasDim *****************
 Defined at:
		line 231 in file "main.c"
 Parameters:    Size  Location     Type
  canvas          1    wreg     PTR unsigned char 
		 -> canvas(7), 
 Auto vars:     Size  Location     Type
  canvas          1    7[COMMON] PTR unsigned char 
		 -> canvas(7), 
  j               2    8[COMMON] int 
 Return value:  Size  Location     Type
                  2   66[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_UART_RxString
		_UART_TxString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UART_TxString *****************
 Defined at:
		line 41 in file "UART.h"
 Parameters:    Size  Location     Type
  str             2    1[COMMON] PTR const unsigned char 
		 -> STR_12(16), STR_11(4), STR_10(4), STR_9(6), 
		 -> STR_8(9), STR_7(9), STR_6(7), STR_5(7), 
		 -> STR_4(7), STR_1(6), coords(9), canvasY(3), 
		 -> canvasX(3), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_UART_TxChar
 This function is called by:
		_main
		_getCanvasDim
		_getCoords
 This function uses a non-reentrant model


 *************** function _UART_RxString *****************
 Defined at:
		line 64 in file "UART.h"
 Parameters:    Size  Location     Type
  stringa         1    wreg     PTR unsigned char 
		 -> coords(9), canvas(7), 
 Auto vars:     Size  Location     Type
  stringa         1    2[COMMON] PTR unsigned char 
		 -> coords(9), canvas(7), 
  ch              1    4[COMMON] unsigned char 
  len             1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_UART_RxChar
 This function is called by:
		_main
		_getCanvasDim
		_getCoords
 This function uses a non-reentrant model


 *************** function _UART_RxChar *****************
 Defined at:
		line 50 in file "UART.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_UART_RxString
 This function uses a non-reentrant model


 *************** function _equivVal *****************
 Defined at:
		line 266 in file "main.c"
 Parameters:    Size  Location     Type
  Mcanvas         2    9[BANK0 ] int 
  Mstep           2   11[BANK0 ] int 
  canvas          2   13[BANK0 ] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    9[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 6 in file "/opt/microchip/xc8/v1.36/sources/common/awdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    6[COMMON] int 
  dividend        2    8[COMMON] int 
 Auto vars:     Size  Location     Type
  quotient        2    2[BANK0 ] int 
  sign            1    1[BANK0 ] unsigned char 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[COMMON] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       4       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_equivVal
 This function uses a non-reentrant model


 *************** function _contStepY *****************
 Defined at:
		line 354 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _contStepX *****************
 Defined at:
		line 315 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _constSpeed *****************
 Defined at:
		line 301 in file "main.c"
 Parameters:    Size  Location     Type
  activeX         2    0[COMMON] int 
  activeY         2    2[COMMON] int 
  activeZ         2    4[COMMON] int 
 Auto vars:     Size  Location     Type
  nMotor          2    7[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         6       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         9       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _activeMotor *****************
 Defined at:
		line 237 in file "stepMotor.h"
 Parameters:    Size  Location     Type
  i               2    0[COMMON] int 
  step            2    2[COMMON] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UART_TxInt *****************
 Defined at:
		line 102 in file "UART.h"
 Parameters:    Size  Location     Type
  val             2    6[COMMON] int 
 Auto vars:     Size  Location     Type
  cent            1   12[COMMON] unsigned char 
  dec             1   11[COMMON] unsigned char 
  uni             1   10[COMMON] unsigned char 
  sig             1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_UART_TxChar
		___wmul
 This function is called by:
		_main
		_UART_TxFloat
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "/opt/microchip/xc8/v1.36/sources/common/Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[COMMON] unsigned int 
  multiplicand    2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[COMMON] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_UART_TxInt
		_equivVal
		_toint
		_UART_TxFloat
 This function uses a non-reentrant model


 *************** function _UART_Init *****************
 Defined at:
		line 4 in file "UART.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UART_GotoNewLine *****************
 Defined at:
		line 95 in file "UART.h"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_UART_TxChar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _UART_TxChar *****************
 Defined at:
		line 35 in file "UART.h"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  ch              1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_UART_TxString
		_UART_GotoNewLine
		_UART_TxInt
		_UART_TxDeci
		_UART_TxFloat
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
UART.h
		_UART_TxString 		CODE           	0C36	0000	36
		_UART_Init     		CODE           	000B	0000	22
		_UART_RxChar   		CODE           	0B7B	0000	12
		_UART_GotoNewLine		CODE           	0B70	0000	12
		_UART_RxString 		CODE           	0CD1	0000	52
		_UART_TxInt    		CODE           	0171	0000	138
		_UART_TxChar   		CODE           	0B67	0000	10

UART.h estimated size: 282

/opt/microchip/xc8/v1.36/sources/common/awdiv.c
		___awdiv       		CODE           	0ED9	0000	92

/opt/microchip/xc8/v1.36/sources/common/awdiv.c estimated size: 92

/opt/microchip/xc8/v1.36/sources/common/Umul16.c
		___wmul        		CODE           	0BD2	0000	34

/opt/microchip/xc8/v1.36/sources/common/Umul16.c estimated size: 34

motor_mode.h
		_modM2         		CODE           	0E39	0000	81
		_modM3         		CODE           	0E89	0000	81
		_modM1         		CODE           	0DE9	0000	81

motor_mode.h estimated size: 243

shared
		__stringtab    		STRING         	0800	0000	17
		__initialization		CODE           	07CD	0000	48

shared estimated size: 65

/opt/microchip/xc8/v1.36/sources/common/strlen.c
		_strlen        		CODE           	0C59	0000	39

/opt/microchip/xc8/v1.36/sources/common/strlen.c estimated size: 39

/opt/microchip/xc8/v1.36/sources/common/strcmp.c
		_strcmp        		CODE           	0CA7	0000	43

/opt/microchip/xc8/v1.36/sources/common/strcmp.c estimated size: 43

main.c
		_equivVal      		CODE           	0BF3	0000	34
		_motorXInit    		CODE           	01FA	0000	256
		_main          		CODE           	04F7	0000	727
		_motorYInit    		CODE           	02F9	0000	256
		_toint         		CODE           	0100	0000	114
		_constSpeed    		CODE           	0C14	0000	35
		_getCoords     		CODE           	0F34	0000	98
		_getCanvasDim  		CODE           	0F95	0000	108
		_contStepX     		CODE           	0020	0000	113
		_contStepY     		CODE           	0090	0000	113
		_motorZInit    		CODE           	03F8	0000	256

main.c estimated size: 2110

stepMotor.h
		_stepMotorX    		CODE           	0D04	0000	55
		_stepMotorY    		CODE           	0D3A	0000	55
		_stepMotorZ    		CODE           	0D70	0000	55
		_limitz        		CODE           	0B97	0000	20
		_activeMotor   		CODE           	0BAA	0000	21
		_maxStep       		CODE           	0DA6	0000	68
		_ms_delay      		CODE           	0BBE	0000	21

stepMotor.h estimated size: 295

