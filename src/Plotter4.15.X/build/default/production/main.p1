Version 3.2 HI-TECH Software Intermediate Code
"166 /opt/microchip/xc8/v1.36/include/pic16f887.h
[s S7 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S7 . RA0 RA1 RA2 RA3 RA4 RA5 RA6 RA7 ]
"165
[u S6 `S7 1 ]
[n S6 . . ]
"177
[v _PORTAbits `VS6 ~T0 @X0 0 e@5 ]
"288
[s S11 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S11 . RC0 RC1 RC2 RC3 RC4 RC5 RC6 RC7 ]
"287
[u S10 `S11 1 ]
[n S10 . . ]
"299
[v _PORTCbits `VS10 ~T0 @X0 0 e@7 ]
"410
[s S15 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S15 . RE0 RE1 RE2 RE3 ]
"409
[u S14 `S15 1 ]
[n S14 . . ]
"417
[v _PORTEbits `VS14 ~T0 @X0 0 e@9 ]
"349
[s S13 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S13 . RD0 RD1 RD2 RD3 RD4 RD5 RD6 RD7 ]
"348
[u S12 `S13 1 ]
[n S12 . . ]
"360
[v _PORTDbits `VS12 ~T0 @X0 0 e@8 ]
"227
[s S9 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S9 . RB0 RB1 RB2 RB3 RB4 RB5 RB6 RB7 ]
"226
[u S8 `S9 1 ]
[n S8 . . ]
"238
[v _PORTBbits `VS8 ~T0 @X0 0 e@6 ]
[v F1639 `(v ~T0 @X0 1 tf1`ul ]
"152 /opt/microchip/xc8/v1.36/include/pic.h
[v __delay `JF1639 ~T0 @X0 0 e ]
[p i __delay ]
"2586 /opt/microchip/xc8/v1.36/include/pic16f887.h
[v _SPBRG `Vuc ~T0 @X0 0 e@153 ]
"2647
[v _SPBRGH `Vuc ~T0 @X0 0 e@154 ]
"3269
[s S132 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S132 . ABDEN WUE . BRG16 SCKP . RCIDL ABDOVF ]
"3268
[u S131 `S132 1 ]
[n S131 . . ]
"3280
[v _BAUDCTLbits `VS131 ~T0 @X0 0 e@391 ]
"2507
[s S100 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S100 . TX9D TRMT BRGH SENDB SYNC TXEN TX9 CSRC ]
"2517
[s S101 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S101 . TXD8 . nTX8 ]
"2522
[s S102 :6 `uc 1 :1 `uc 1 ]
[n S102 . . TX8_9 ]
"2506
[u S99 `S100 1 `S101 1 `S102 1 ]
[n S99 . . . . ]
"2527
[v _TXSTAbits `VS99 ~T0 @X0 0 e@152 ]
"1017
[s S38 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S38 . RX9D OERR FERR ADDEN CREN SREN RX9 SPEN ]
"1027
[s S39 :1 `uc 1 :5 `uc 1 :1 `uc 1 ]
[n S39 . RCD8 . RC9 ]
"1032
[s S40 :6 `uc 1 :1 `uc 1 ]
[n S40 . . nRC8 ]
"1036
[s S41 :6 `uc 1 :1 `uc 1 ]
[n S41 . . RC8_9 ]
"1016
[u S37 `S38 1 `S39 1 `S40 1 `S41 1 ]
[n S37 . . . . . ]
"1041
[v _RCSTAbits `VS37 ~T0 @X0 0 e@24 ]
"4138
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"1105
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"3776
[v _OERR `Vb ~T0 @X0 0 e@193 ]
"3666
[v _CREN `Vb ~T0 @X0 0 e@196 ]
"3892
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"1111
[v _RCREG `Vuc ~T0 @X0 0 e@26 ]
"77 main.c
[s S272 `uc 1 `uc 1 `uc 1 `i 1 ]
[n S272 stepMotor dir speed mod stepsToDo ]
[p mainexit ]
"160 /opt/microchip/xc8/v1.36/include/pic16f887.h
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
"221
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
"282
[v _PORTC `Vuc ~T0 @X0 0 e@7 ]
"343
[v _PORTD `Vuc ~T0 @X0 0 e@8 ]
"404
[v _PORTE `Vuc ~T0 @X0 0 e@9 ]
"1379
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"1440
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
"1501
[v _TRISC `Vuc ~T0 @X0 0 e@135 ]
"1562
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"1623
[v _TRISE `Vuc ~T0 @X0 0 e@137 ]
"3314
[v _ANSEL `Vuc ~T0 @X0 0 e@392 ]
"3375
[v _ANSELH `Vuc ~T0 @X0 0 e@393 ]
"58 main.c
[v _getCanvasDim `(i ~T0 @X0 0 ef1`*uc ]
"61
[v _toint `(i ~T0 @X0 0 ef1`*uc ]
"43 /opt/microchip/xc8/v1.36/include/string.h
[v _strcmp `(i ~T0 @X0 0 ef2`*Cuc`*Cuc ]
"59 main.c
[v _getCoords `(i ~T0 @X0 0 ef1`*uc ]
"72
[v _equivVal `(i ~T0 @X0 0 ef3`i`i`i ]
"68
[v _contStepX `(v ~T0 @X0 0 ef ]
"69
[v _contStepY `(v ~T0 @X0 0 ef ]
"67
[v _constSpeed `(v ~T0 @X0 0 ef3`i`i`i ]
"54 /opt/microchip/xc8/v1.36/include/string.h
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"3 main.c
[p x FOSC=XT ]
"4
[p x WDTE=OFF ]
"5
[p x PWRTE=OFF ]
"6
[p x MCLRE=ON ]
"7
[p x CP=OFF ]
"8
[p x CPD=OFF ]
"9
[p x BOREN=OFF ]
"10
[p x IESO=OFF ]
"11
[p x FCMEN=OFF ]
"12
[p x LVP=OFF ]
"15
[p x BOR4V=BOR40V ]
"16
[p x WRT=OFF ]
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;pic16f887.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 /opt/microchip/xc8/v1.36/include/pic16f887.h
[; ;pic16f887.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f887.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f887.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f887.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f887.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f887.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f887.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f887.h: 72: typedef union {
[; ;pic16f887.h: 73: struct {
[; ;pic16f887.h: 74: unsigned C :1;
[; ;pic16f887.h: 75: unsigned DC :1;
[; ;pic16f887.h: 76: unsigned Z :1;
[; ;pic16f887.h: 77: unsigned nPD :1;
[; ;pic16f887.h: 78: unsigned nTO :1;
[; ;pic16f887.h: 79: unsigned RP :2;
[; ;pic16f887.h: 80: unsigned IRP :1;
[; ;pic16f887.h: 81: };
[; ;pic16f887.h: 82: struct {
[; ;pic16f887.h: 83: unsigned :5;
[; ;pic16f887.h: 84: unsigned RP0 :1;
[; ;pic16f887.h: 85: unsigned RP1 :1;
[; ;pic16f887.h: 86: };
[; ;pic16f887.h: 87: struct {
[; ;pic16f887.h: 88: unsigned CARRY :1;
[; ;pic16f887.h: 89: };
[; ;pic16f887.h: 90: struct {
[; ;pic16f887.h: 91: unsigned :2;
[; ;pic16f887.h: 92: unsigned ZERO :1;
[; ;pic16f887.h: 93: };
[; ;pic16f887.h: 94: } STATUSbits_t;
[; ;pic16f887.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f887.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f887.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f887.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f887.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f887.h: 165: typedef union {
[; ;pic16f887.h: 166: struct {
[; ;pic16f887.h: 167: unsigned RA0 :1;
[; ;pic16f887.h: 168: unsigned RA1 :1;
[; ;pic16f887.h: 169: unsigned RA2 :1;
[; ;pic16f887.h: 170: unsigned RA3 :1;
[; ;pic16f887.h: 171: unsigned RA4 :1;
[; ;pic16f887.h: 172: unsigned RA5 :1;
[; ;pic16f887.h: 173: unsigned RA6 :1;
[; ;pic16f887.h: 174: unsigned RA7 :1;
[; ;pic16f887.h: 175: };
[; ;pic16f887.h: 176: } PORTAbits_t;
[; ;pic16f887.h: 177: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f887.h: 221: extern volatile unsigned char PORTB @ 0x006;
"223
[; ;pic16f887.h: 223: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f887.h: 226: typedef union {
[; ;pic16f887.h: 227: struct {
[; ;pic16f887.h: 228: unsigned RB0 :1;
[; ;pic16f887.h: 229: unsigned RB1 :1;
[; ;pic16f887.h: 230: unsigned RB2 :1;
[; ;pic16f887.h: 231: unsigned RB3 :1;
[; ;pic16f887.h: 232: unsigned RB4 :1;
[; ;pic16f887.h: 233: unsigned RB5 :1;
[; ;pic16f887.h: 234: unsigned RB6 :1;
[; ;pic16f887.h: 235: unsigned RB7 :1;
[; ;pic16f887.h: 236: };
[; ;pic16f887.h: 237: } PORTBbits_t;
[; ;pic16f887.h: 238: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f887.h: 282: extern volatile unsigned char PORTC @ 0x007;
"284
[; ;pic16f887.h: 284: asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
[; ;pic16f887.h: 287: typedef union {
[; ;pic16f887.h: 288: struct {
[; ;pic16f887.h: 289: unsigned RC0 :1;
[; ;pic16f887.h: 290: unsigned RC1 :1;
[; ;pic16f887.h: 291: unsigned RC2 :1;
[; ;pic16f887.h: 292: unsigned RC3 :1;
[; ;pic16f887.h: 293: unsigned RC4 :1;
[; ;pic16f887.h: 294: unsigned RC5 :1;
[; ;pic16f887.h: 295: unsigned RC6 :1;
[; ;pic16f887.h: 296: unsigned RC7 :1;
[; ;pic16f887.h: 297: };
[; ;pic16f887.h: 298: } PORTCbits_t;
[; ;pic16f887.h: 299: extern volatile PORTCbits_t PORTCbits @ 0x007;
[; ;pic16f887.h: 343: extern volatile unsigned char PORTD @ 0x008;
"345
[; ;pic16f887.h: 345: asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
[; ;pic16f887.h: 348: typedef union {
[; ;pic16f887.h: 349: struct {
[; ;pic16f887.h: 350: unsigned RD0 :1;
[; ;pic16f887.h: 351: unsigned RD1 :1;
[; ;pic16f887.h: 352: unsigned RD2 :1;
[; ;pic16f887.h: 353: unsigned RD3 :1;
[; ;pic16f887.h: 354: unsigned RD4 :1;
[; ;pic16f887.h: 355: unsigned RD5 :1;
[; ;pic16f887.h: 356: unsigned RD6 :1;
[; ;pic16f887.h: 357: unsigned RD7 :1;
[; ;pic16f887.h: 358: };
[; ;pic16f887.h: 359: } PORTDbits_t;
[; ;pic16f887.h: 360: extern volatile PORTDbits_t PORTDbits @ 0x008;
[; ;pic16f887.h: 404: extern volatile unsigned char PORTE @ 0x009;
"406
[; ;pic16f887.h: 406: asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
[; ;pic16f887.h: 409: typedef union {
[; ;pic16f887.h: 410: struct {
[; ;pic16f887.h: 411: unsigned RE0 :1;
[; ;pic16f887.h: 412: unsigned RE1 :1;
[; ;pic16f887.h: 413: unsigned RE2 :1;
[; ;pic16f887.h: 414: unsigned RE3 :1;
[; ;pic16f887.h: 415: };
[; ;pic16f887.h: 416: } PORTEbits_t;
[; ;pic16f887.h: 417: extern volatile PORTEbits_t PORTEbits @ 0x009;
[; ;pic16f887.h: 441: extern volatile unsigned char PCLATH @ 0x00A;
"443
[; ;pic16f887.h: 443: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f887.h: 447: extern volatile unsigned char INTCON @ 0x00B;
"449
[; ;pic16f887.h: 449: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f887.h: 452: typedef union {
[; ;pic16f887.h: 453: struct {
[; ;pic16f887.h: 454: unsigned RBIF :1;
[; ;pic16f887.h: 455: unsigned INTF :1;
[; ;pic16f887.h: 456: unsigned T0IF :1;
[; ;pic16f887.h: 457: unsigned RBIE :1;
[; ;pic16f887.h: 458: unsigned INTE :1;
[; ;pic16f887.h: 459: unsigned T0IE :1;
[; ;pic16f887.h: 460: unsigned PEIE :1;
[; ;pic16f887.h: 461: unsigned GIE :1;
[; ;pic16f887.h: 462: };
[; ;pic16f887.h: 463: struct {
[; ;pic16f887.h: 464: unsigned :2;
[; ;pic16f887.h: 465: unsigned TMR0IF :1;
[; ;pic16f887.h: 466: unsigned :2;
[; ;pic16f887.h: 467: unsigned TMR0IE :1;
[; ;pic16f887.h: 468: };
[; ;pic16f887.h: 469: } INTCONbits_t;
[; ;pic16f887.h: 470: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f887.h: 524: extern volatile unsigned char PIR1 @ 0x00C;
"526
[; ;pic16f887.h: 526: asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
[; ;pic16f887.h: 529: typedef union {
[; ;pic16f887.h: 530: struct {
[; ;pic16f887.h: 531: unsigned TMR1IF :1;
[; ;pic16f887.h: 532: unsigned TMR2IF :1;
[; ;pic16f887.h: 533: unsigned CCP1IF :1;
[; ;pic16f887.h: 534: unsigned SSPIF :1;
[; ;pic16f887.h: 535: unsigned TXIF :1;
[; ;pic16f887.h: 536: unsigned RCIF :1;
[; ;pic16f887.h: 537: unsigned ADIF :1;
[; ;pic16f887.h: 538: };
[; ;pic16f887.h: 539: } PIR1bits_t;
[; ;pic16f887.h: 540: extern volatile PIR1bits_t PIR1bits @ 0x00C;
[; ;pic16f887.h: 579: extern volatile unsigned char PIR2 @ 0x00D;
"581
[; ;pic16f887.h: 581: asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
[; ;pic16f887.h: 584: typedef union {
[; ;pic16f887.h: 585: struct {
[; ;pic16f887.h: 586: unsigned CCP2IF :1;
[; ;pic16f887.h: 587: unsigned :1;
[; ;pic16f887.h: 588: unsigned ULPWUIF :1;
[; ;pic16f887.h: 589: unsigned BCLIF :1;
[; ;pic16f887.h: 590: unsigned EEIF :1;
[; ;pic16f887.h: 591: unsigned C1IF :1;
[; ;pic16f887.h: 592: unsigned C2IF :1;
[; ;pic16f887.h: 593: unsigned OSFIF :1;
[; ;pic16f887.h: 594: };
[; ;pic16f887.h: 595: } PIR2bits_t;
[; ;pic16f887.h: 596: extern volatile PIR2bits_t PIR2bits @ 0x00D;
[; ;pic16f887.h: 635: extern volatile unsigned short TMR1 @ 0x00E;
"637
[; ;pic16f887.h: 637: asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
[; ;pic16f887.h: 641: extern volatile unsigned char TMR1L @ 0x00E;
"643
[; ;pic16f887.h: 643: asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
[; ;pic16f887.h: 647: extern volatile unsigned char TMR1H @ 0x00F;
"649
[; ;pic16f887.h: 649: asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
[; ;pic16f887.h: 653: extern volatile unsigned char T1CON @ 0x010;
"655
[; ;pic16f887.h: 655: asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
[; ;pic16f887.h: 658: typedef union {
[; ;pic16f887.h: 659: struct {
[; ;pic16f887.h: 660: unsigned TMR1ON :1;
[; ;pic16f887.h: 661: unsigned TMR1CS :1;
[; ;pic16f887.h: 662: unsigned nT1SYNC :1;
[; ;pic16f887.h: 663: unsigned T1OSCEN :1;
[; ;pic16f887.h: 664: unsigned T1CKPS :2;
[; ;pic16f887.h: 665: unsigned TMR1GE :1;
[; ;pic16f887.h: 666: unsigned T1GINV :1;
[; ;pic16f887.h: 667: };
[; ;pic16f887.h: 668: struct {
[; ;pic16f887.h: 669: unsigned :2;
[; ;pic16f887.h: 670: unsigned T1INSYNC :1;
[; ;pic16f887.h: 671: unsigned :1;
[; ;pic16f887.h: 672: unsigned T1CKPS0 :1;
[; ;pic16f887.h: 673: unsigned T1CKPS1 :1;
[; ;pic16f887.h: 674: unsigned :1;
[; ;pic16f887.h: 675: unsigned T1GIV :1;
[; ;pic16f887.h: 676: };
[; ;pic16f887.h: 677: struct {
[; ;pic16f887.h: 678: unsigned :2;
[; ;pic16f887.h: 679: unsigned T1SYNC :1;
[; ;pic16f887.h: 680: };
[; ;pic16f887.h: 681: } T1CONbits_t;
[; ;pic16f887.h: 682: extern volatile T1CONbits_t T1CONbits @ 0x010;
[; ;pic16f887.h: 746: extern volatile unsigned char TMR2 @ 0x011;
"748
[; ;pic16f887.h: 748: asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
[; ;pic16f887.h: 752: extern volatile unsigned char T2CON @ 0x012;
"754
[; ;pic16f887.h: 754: asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
[; ;pic16f887.h: 757: typedef union {
[; ;pic16f887.h: 758: struct {
[; ;pic16f887.h: 759: unsigned T2CKPS :2;
[; ;pic16f887.h: 760: unsigned TMR2ON :1;
[; ;pic16f887.h: 761: unsigned TOUTPS :4;
[; ;pic16f887.h: 762: };
[; ;pic16f887.h: 763: struct {
[; ;pic16f887.h: 764: unsigned T2CKPS0 :1;
[; ;pic16f887.h: 765: unsigned T2CKPS1 :1;
[; ;pic16f887.h: 766: unsigned :1;
[; ;pic16f887.h: 767: unsigned TOUTPS0 :1;
[; ;pic16f887.h: 768: unsigned TOUTPS1 :1;
[; ;pic16f887.h: 769: unsigned TOUTPS2 :1;
[; ;pic16f887.h: 770: unsigned TOUTPS3 :1;
[; ;pic16f887.h: 771: };
[; ;pic16f887.h: 772: } T2CONbits_t;
[; ;pic16f887.h: 773: extern volatile T2CONbits_t T2CONbits @ 0x012;
[; ;pic16f887.h: 822: extern volatile unsigned char SSPBUF @ 0x013;
"824
[; ;pic16f887.h: 824: asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
[; ;pic16f887.h: 828: extern volatile unsigned char SSPCON @ 0x014;
"830
[; ;pic16f887.h: 830: asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
[; ;pic16f887.h: 833: typedef union {
[; ;pic16f887.h: 834: struct {
[; ;pic16f887.h: 835: unsigned SSPM :4;
[; ;pic16f887.h: 836: unsigned CKP :1;
[; ;pic16f887.h: 837: unsigned SSPEN :1;
[; ;pic16f887.h: 838: unsigned SSPOV :1;
[; ;pic16f887.h: 839: unsigned WCOL :1;
[; ;pic16f887.h: 840: };
[; ;pic16f887.h: 841: struct {
[; ;pic16f887.h: 842: unsigned SSPM0 :1;
[; ;pic16f887.h: 843: unsigned SSPM1 :1;
[; ;pic16f887.h: 844: unsigned SSPM2 :1;
[; ;pic16f887.h: 845: unsigned SSPM3 :1;
[; ;pic16f887.h: 846: };
[; ;pic16f887.h: 847: } SSPCONbits_t;
[; ;pic16f887.h: 848: extern volatile SSPCONbits_t SSPCONbits @ 0x014;
[; ;pic16f887.h: 897: extern volatile unsigned short CCPR1 @ 0x015;
"899
[; ;pic16f887.h: 899: asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
[; ;pic16f887.h: 903: extern volatile unsigned char CCPR1L @ 0x015;
"905
[; ;pic16f887.h: 905: asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
[; ;pic16f887.h: 909: extern volatile unsigned char CCPR1H @ 0x016;
"911
[; ;pic16f887.h: 911: asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
[; ;pic16f887.h: 915: extern volatile unsigned char CCP1CON @ 0x017;
"917
[; ;pic16f887.h: 917: asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
[; ;pic16f887.h: 920: typedef union {
[; ;pic16f887.h: 921: struct {
[; ;pic16f887.h: 922: unsigned CCP1M :4;
[; ;pic16f887.h: 923: unsigned DC1B :2;
[; ;pic16f887.h: 924: unsigned P1M :2;
[; ;pic16f887.h: 925: };
[; ;pic16f887.h: 926: struct {
[; ;pic16f887.h: 927: unsigned CCP1M0 :1;
[; ;pic16f887.h: 928: unsigned CCP1M1 :1;
[; ;pic16f887.h: 929: unsigned CCP1M2 :1;
[; ;pic16f887.h: 930: unsigned CCP1M3 :1;
[; ;pic16f887.h: 931: unsigned DC1B0 :1;
[; ;pic16f887.h: 932: unsigned DC1B1 :1;
[; ;pic16f887.h: 933: unsigned P1M0 :1;
[; ;pic16f887.h: 934: unsigned P1M1 :1;
[; ;pic16f887.h: 935: };
[; ;pic16f887.h: 936: struct {
[; ;pic16f887.h: 937: unsigned :4;
[; ;pic16f887.h: 938: unsigned CCP1Y :1;
[; ;pic16f887.h: 939: unsigned CCP1X :1;
[; ;pic16f887.h: 940: };
[; ;pic16f887.h: 941: } CCP1CONbits_t;
[; ;pic16f887.h: 942: extern volatile CCP1CONbits_t CCP1CONbits @ 0x017;
[; ;pic16f887.h: 1011: extern volatile unsigned char RCSTA @ 0x018;
"1013
[; ;pic16f887.h: 1013: asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
[; ;pic16f887.h: 1016: typedef union {
[; ;pic16f887.h: 1017: struct {
[; ;pic16f887.h: 1018: unsigned RX9D :1;
[; ;pic16f887.h: 1019: unsigned OERR :1;
[; ;pic16f887.h: 1020: unsigned FERR :1;
[; ;pic16f887.h: 1021: unsigned ADDEN :1;
[; ;pic16f887.h: 1022: unsigned CREN :1;
[; ;pic16f887.h: 1023: unsigned SREN :1;
[; ;pic16f887.h: 1024: unsigned RX9 :1;
[; ;pic16f887.h: 1025: unsigned SPEN :1;
[; ;pic16f887.h: 1026: };
[; ;pic16f887.h: 1027: struct {
[; ;pic16f887.h: 1028: unsigned RCD8 :1;
[; ;pic16f887.h: 1029: unsigned :5;
[; ;pic16f887.h: 1030: unsigned RC9 :1;
[; ;pic16f887.h: 1031: };
[; ;pic16f887.h: 1032: struct {
[; ;pic16f887.h: 1033: unsigned :6;
[; ;pic16f887.h: 1034: unsigned nRC8 :1;
[; ;pic16f887.h: 1035: };
[; ;pic16f887.h: 1036: struct {
[; ;pic16f887.h: 1037: unsigned :6;
[; ;pic16f887.h: 1038: unsigned RC8_9 :1;
[; ;pic16f887.h: 1039: };
[; ;pic16f887.h: 1040: } RCSTAbits_t;
[; ;pic16f887.h: 1041: extern volatile RCSTAbits_t RCSTAbits @ 0x018;
[; ;pic16f887.h: 1105: extern volatile unsigned char TXREG @ 0x019;
"1107
[; ;pic16f887.h: 1107: asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
[; ;pic16f887.h: 1111: extern volatile unsigned char RCREG @ 0x01A;
"1113
[; ;pic16f887.h: 1113: asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
[; ;pic16f887.h: 1117: extern volatile unsigned short CCPR2 @ 0x01B;
"1119
[; ;pic16f887.h: 1119: asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
[; ;pic16f887.h: 1123: extern volatile unsigned char CCPR2L @ 0x01B;
"1125
[; ;pic16f887.h: 1125: asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
[; ;pic16f887.h: 1129: extern volatile unsigned char CCPR2H @ 0x01C;
"1131
[; ;pic16f887.h: 1131: asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
[; ;pic16f887.h: 1135: extern volatile unsigned char CCP2CON @ 0x01D;
"1137
[; ;pic16f887.h: 1137: asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
[; ;pic16f887.h: 1140: typedef union {
[; ;pic16f887.h: 1141: struct {
[; ;pic16f887.h: 1142: unsigned CCP2M :4;
[; ;pic16f887.h: 1143: unsigned DC2B0 :1;
[; ;pic16f887.h: 1144: unsigned DC2B1 :1;
[; ;pic16f887.h: 1145: };
[; ;pic16f887.h: 1146: struct {
[; ;pic16f887.h: 1147: unsigned CCP2M0 :1;
[; ;pic16f887.h: 1148: unsigned CCP2M1 :1;
[; ;pic16f887.h: 1149: unsigned CCP2M2 :1;
[; ;pic16f887.h: 1150: unsigned CCP2M3 :1;
[; ;pic16f887.h: 1151: unsigned CCP2Y :1;
[; ;pic16f887.h: 1152: unsigned CCP2X :1;
[; ;pic16f887.h: 1153: };
[; ;pic16f887.h: 1154: } CCP2CONbits_t;
[; ;pic16f887.h: 1155: extern volatile CCP2CONbits_t CCP2CONbits @ 0x01D;
[; ;pic16f887.h: 1204: extern volatile unsigned char ADRESH @ 0x01E;
"1206
[; ;pic16f887.h: 1206: asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
[; ;pic16f887.h: 1210: extern volatile unsigned char ADCON0 @ 0x01F;
"1212
[; ;pic16f887.h: 1212: asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
[; ;pic16f887.h: 1215: typedef union {
[; ;pic16f887.h: 1216: struct {
[; ;pic16f887.h: 1217: unsigned ADON :1;
[; ;pic16f887.h: 1218: unsigned GO_nDONE :1;
[; ;pic16f887.h: 1219: unsigned CHS :4;
[; ;pic16f887.h: 1220: unsigned ADCS :2;
[; ;pic16f887.h: 1221: };
[; ;pic16f887.h: 1222: struct {
[; ;pic16f887.h: 1223: unsigned :1;
[; ;pic16f887.h: 1224: unsigned GO :1;
[; ;pic16f887.h: 1225: unsigned CHS0 :1;
[; ;pic16f887.h: 1226: unsigned CHS1 :1;
[; ;pic16f887.h: 1227: unsigned CHS2 :1;
[; ;pic16f887.h: 1228: unsigned CHS3 :1;
[; ;pic16f887.h: 1229: unsigned ADCS0 :1;
[; ;pic16f887.h: 1230: unsigned ADCS1 :1;
[; ;pic16f887.h: 1231: };
[; ;pic16f887.h: 1232: struct {
[; ;pic16f887.h: 1233: unsigned :1;
[; ;pic16f887.h: 1234: unsigned nDONE :1;
[; ;pic16f887.h: 1235: };
[; ;pic16f887.h: 1236: struct {
[; ;pic16f887.h: 1237: unsigned :1;
[; ;pic16f887.h: 1238: unsigned GO_DONE :1;
[; ;pic16f887.h: 1239: };
[; ;pic16f887.h: 1240: } ADCON0bits_t;
[; ;pic16f887.h: 1241: extern volatile ADCON0bits_t ADCON0bits @ 0x01F;
[; ;pic16f887.h: 1310: extern volatile unsigned char OPTION_REG @ 0x081;
"1312
[; ;pic16f887.h: 1312: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f887.h: 1315: typedef union {
[; ;pic16f887.h: 1316: struct {
[; ;pic16f887.h: 1317: unsigned PS :3;
[; ;pic16f887.h: 1318: unsigned PSA :1;
[; ;pic16f887.h: 1319: unsigned T0SE :1;
[; ;pic16f887.h: 1320: unsigned T0CS :1;
[; ;pic16f887.h: 1321: unsigned INTEDG :1;
[; ;pic16f887.h: 1322: unsigned nRBPU :1;
[; ;pic16f887.h: 1323: };
[; ;pic16f887.h: 1324: struct {
[; ;pic16f887.h: 1325: unsigned PS0 :1;
[; ;pic16f887.h: 1326: unsigned PS1 :1;
[; ;pic16f887.h: 1327: unsigned PS2 :1;
[; ;pic16f887.h: 1328: };
[; ;pic16f887.h: 1329: } OPTION_REGbits_t;
[; ;pic16f887.h: 1330: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f887.h: 1379: extern volatile unsigned char TRISA @ 0x085;
"1381
[; ;pic16f887.h: 1381: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f887.h: 1384: typedef union {
[; ;pic16f887.h: 1385: struct {
[; ;pic16f887.h: 1386: unsigned TRISA0 :1;
[; ;pic16f887.h: 1387: unsigned TRISA1 :1;
[; ;pic16f887.h: 1388: unsigned TRISA2 :1;
[; ;pic16f887.h: 1389: unsigned TRISA3 :1;
[; ;pic16f887.h: 1390: unsigned TRISA4 :1;
[; ;pic16f887.h: 1391: unsigned TRISA5 :1;
[; ;pic16f887.h: 1392: unsigned TRISA6 :1;
[; ;pic16f887.h: 1393: unsigned TRISA7 :1;
[; ;pic16f887.h: 1394: };
[; ;pic16f887.h: 1395: } TRISAbits_t;
[; ;pic16f887.h: 1396: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f887.h: 1440: extern volatile unsigned char TRISB @ 0x086;
"1442
[; ;pic16f887.h: 1442: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f887.h: 1445: typedef union {
[; ;pic16f887.h: 1446: struct {
[; ;pic16f887.h: 1447: unsigned TRISB0 :1;
[; ;pic16f887.h: 1448: unsigned TRISB1 :1;
[; ;pic16f887.h: 1449: unsigned TRISB2 :1;
[; ;pic16f887.h: 1450: unsigned TRISB3 :1;
[; ;pic16f887.h: 1451: unsigned TRISB4 :1;
[; ;pic16f887.h: 1452: unsigned TRISB5 :1;
[; ;pic16f887.h: 1453: unsigned TRISB6 :1;
[; ;pic16f887.h: 1454: unsigned TRISB7 :1;
[; ;pic16f887.h: 1455: };
[; ;pic16f887.h: 1456: } TRISBbits_t;
[; ;pic16f887.h: 1457: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f887.h: 1501: extern volatile unsigned char TRISC @ 0x087;
"1503
[; ;pic16f887.h: 1503: asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
[; ;pic16f887.h: 1506: typedef union {
[; ;pic16f887.h: 1507: struct {
[; ;pic16f887.h: 1508: unsigned TRISC0 :1;
[; ;pic16f887.h: 1509: unsigned TRISC1 :1;
[; ;pic16f887.h: 1510: unsigned TRISC2 :1;
[; ;pic16f887.h: 1511: unsigned TRISC3 :1;
[; ;pic16f887.h: 1512: unsigned TRISC4 :1;
[; ;pic16f887.h: 1513: unsigned TRISC5 :1;
[; ;pic16f887.h: 1514: unsigned TRISC6 :1;
[; ;pic16f887.h: 1515: unsigned TRISC7 :1;
[; ;pic16f887.h: 1516: };
[; ;pic16f887.h: 1517: } TRISCbits_t;
[; ;pic16f887.h: 1518: extern volatile TRISCbits_t TRISCbits @ 0x087;
[; ;pic16f887.h: 1562: extern volatile unsigned char TRISD @ 0x088;
"1564
[; ;pic16f887.h: 1564: asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
[; ;pic16f887.h: 1567: typedef union {
[; ;pic16f887.h: 1568: struct {
[; ;pic16f887.h: 1569: unsigned TRISD0 :1;
[; ;pic16f887.h: 1570: unsigned TRISD1 :1;
[; ;pic16f887.h: 1571: unsigned TRISD2 :1;
[; ;pic16f887.h: 1572: unsigned TRISD3 :1;
[; ;pic16f887.h: 1573: unsigned TRISD4 :1;
[; ;pic16f887.h: 1574: unsigned TRISD5 :1;
[; ;pic16f887.h: 1575: unsigned TRISD6 :1;
[; ;pic16f887.h: 1576: unsigned TRISD7 :1;
[; ;pic16f887.h: 1577: };
[; ;pic16f887.h: 1578: } TRISDbits_t;
[; ;pic16f887.h: 1579: extern volatile TRISDbits_t TRISDbits @ 0x088;
[; ;pic16f887.h: 1623: extern volatile unsigned char TRISE @ 0x089;
"1625
[; ;pic16f887.h: 1625: asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
[; ;pic16f887.h: 1628: typedef union {
[; ;pic16f887.h: 1629: struct {
[; ;pic16f887.h: 1630: unsigned TRISE0 :1;
[; ;pic16f887.h: 1631: unsigned TRISE1 :1;
[; ;pic16f887.h: 1632: unsigned TRISE2 :1;
[; ;pic16f887.h: 1633: unsigned TRISE3 :1;
[; ;pic16f887.h: 1634: };
[; ;pic16f887.h: 1635: } TRISEbits_t;
[; ;pic16f887.h: 1636: extern volatile TRISEbits_t TRISEbits @ 0x089;
[; ;pic16f887.h: 1660: extern volatile unsigned char PIE1 @ 0x08C;
"1662
[; ;pic16f887.h: 1662: asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
[; ;pic16f887.h: 1665: typedef union {
[; ;pic16f887.h: 1666: struct {
[; ;pic16f887.h: 1667: unsigned TMR1IE :1;
[; ;pic16f887.h: 1668: unsigned TMR2IE :1;
[; ;pic16f887.h: 1669: unsigned CCP1IE :1;
[; ;pic16f887.h: 1670: unsigned SSPIE :1;
[; ;pic16f887.h: 1671: unsigned TXIE :1;
[; ;pic16f887.h: 1672: unsigned RCIE :1;
[; ;pic16f887.h: 1673: unsigned ADIE :1;
[; ;pic16f887.h: 1674: };
[; ;pic16f887.h: 1675: } PIE1bits_t;
[; ;pic16f887.h: 1676: extern volatile PIE1bits_t PIE1bits @ 0x08C;
[; ;pic16f887.h: 1715: extern volatile unsigned char PIE2 @ 0x08D;
"1717
[; ;pic16f887.h: 1717: asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
[; ;pic16f887.h: 1720: typedef union {
[; ;pic16f887.h: 1721: struct {
[; ;pic16f887.h: 1722: unsigned CCP2IE :1;
[; ;pic16f887.h: 1723: unsigned :1;
[; ;pic16f887.h: 1724: unsigned ULPWUIE :1;
[; ;pic16f887.h: 1725: unsigned BCLIE :1;
[; ;pic16f887.h: 1726: unsigned EEIE :1;
[; ;pic16f887.h: 1727: unsigned C1IE :1;
[; ;pic16f887.h: 1728: unsigned C2IE :1;
[; ;pic16f887.h: 1729: unsigned OSFIE :1;
[; ;pic16f887.h: 1730: };
[; ;pic16f887.h: 1731: } PIE2bits_t;
[; ;pic16f887.h: 1732: extern volatile PIE2bits_t PIE2bits @ 0x08D;
[; ;pic16f887.h: 1771: extern volatile unsigned char PCON @ 0x08E;
"1773
[; ;pic16f887.h: 1773: asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
[; ;pic16f887.h: 1776: typedef union {
[; ;pic16f887.h: 1777: struct {
[; ;pic16f887.h: 1778: unsigned nBOR :1;
[; ;pic16f887.h: 1779: unsigned nPOR :1;
[; ;pic16f887.h: 1780: unsigned :2;
[; ;pic16f887.h: 1781: unsigned SBOREN :1;
[; ;pic16f887.h: 1782: unsigned ULPWUE :1;
[; ;pic16f887.h: 1783: };
[; ;pic16f887.h: 1784: struct {
[; ;pic16f887.h: 1785: unsigned nBO :1;
[; ;pic16f887.h: 1786: };
[; ;pic16f887.h: 1787: } PCONbits_t;
[; ;pic16f887.h: 1788: extern volatile PCONbits_t PCONbits @ 0x08E;
[; ;pic16f887.h: 1817: extern volatile unsigned char OSCCON @ 0x08F;
"1819
[; ;pic16f887.h: 1819: asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
[; ;pic16f887.h: 1822: typedef union {
[; ;pic16f887.h: 1823: struct {
[; ;pic16f887.h: 1824: unsigned SCS :1;
[; ;pic16f887.h: 1825: unsigned LTS :1;
[; ;pic16f887.h: 1826: unsigned HTS :1;
[; ;pic16f887.h: 1827: unsigned OSTS :1;
[; ;pic16f887.h: 1828: unsigned IRCF :3;
[; ;pic16f887.h: 1829: };
[; ;pic16f887.h: 1830: struct {
[; ;pic16f887.h: 1831: unsigned :4;
[; ;pic16f887.h: 1832: unsigned IRCF0 :1;
[; ;pic16f887.h: 1833: unsigned IRCF1 :1;
[; ;pic16f887.h: 1834: unsigned IRCF2 :1;
[; ;pic16f887.h: 1835: };
[; ;pic16f887.h: 1836: } OSCCONbits_t;
[; ;pic16f887.h: 1837: extern volatile OSCCONbits_t OSCCONbits @ 0x08F;
[; ;pic16f887.h: 1881: extern volatile unsigned char OSCTUNE @ 0x090;
"1883
[; ;pic16f887.h: 1883: asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
[; ;pic16f887.h: 1886: typedef union {
[; ;pic16f887.h: 1887: struct {
[; ;pic16f887.h: 1888: unsigned TUN :5;
[; ;pic16f887.h: 1889: };
[; ;pic16f887.h: 1890: struct {
[; ;pic16f887.h: 1891: unsigned TUN0 :1;
[; ;pic16f887.h: 1892: unsigned TUN1 :1;
[; ;pic16f887.h: 1893: unsigned TUN2 :1;
[; ;pic16f887.h: 1894: unsigned TUN3 :1;
[; ;pic16f887.h: 1895: unsigned TUN4 :1;
[; ;pic16f887.h: 1896: };
[; ;pic16f887.h: 1897: } OSCTUNEbits_t;
[; ;pic16f887.h: 1898: extern volatile OSCTUNEbits_t OSCTUNEbits @ 0x090;
[; ;pic16f887.h: 1932: extern volatile unsigned char SSPCON2 @ 0x091;
"1934
[; ;pic16f887.h: 1934: asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
[; ;pic16f887.h: 1937: typedef union {
[; ;pic16f887.h: 1938: struct {
[; ;pic16f887.h: 1939: unsigned SEN :1;
[; ;pic16f887.h: 1940: unsigned RSEN :1;
[; ;pic16f887.h: 1941: unsigned PEN :1;
[; ;pic16f887.h: 1942: unsigned RCEN :1;
[; ;pic16f887.h: 1943: unsigned ACKEN :1;
[; ;pic16f887.h: 1944: unsigned ACKDT :1;
[; ;pic16f887.h: 1945: unsigned ACKSTAT :1;
[; ;pic16f887.h: 1946: unsigned GCEN :1;
[; ;pic16f887.h: 1947: };
[; ;pic16f887.h: 1948: } SSPCON2bits_t;
[; ;pic16f887.h: 1949: extern volatile SSPCON2bits_t SSPCON2bits @ 0x091;
[; ;pic16f887.h: 1993: extern volatile unsigned char PR2 @ 0x092;
"1995
[; ;pic16f887.h: 1995: asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
[; ;pic16f887.h: 1999: extern volatile unsigned char SSPADD @ 0x093;
"2001
[; ;pic16f887.h: 2001: asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
[; ;pic16f887.h: 2005: extern volatile unsigned char SSPMSK @ 0x093;
"2007
[; ;pic16f887.h: 2007: asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
[; ;pic16f887.h: 2010: extern volatile unsigned char MSK @ 0x093;
"2012
[; ;pic16f887.h: 2012: asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
[; ;pic16f887.h: 2015: typedef union {
[; ;pic16f887.h: 2016: struct {
[; ;pic16f887.h: 2017: unsigned MSK0 :1;
[; ;pic16f887.h: 2018: unsigned MSK1 :1;
[; ;pic16f887.h: 2019: unsigned MSK2 :1;
[; ;pic16f887.h: 2020: unsigned MSK3 :1;
[; ;pic16f887.h: 2021: unsigned MSK4 :1;
[; ;pic16f887.h: 2022: unsigned MSK5 :1;
[; ;pic16f887.h: 2023: unsigned MSK6 :1;
[; ;pic16f887.h: 2024: unsigned MSK7 :1;
[; ;pic16f887.h: 2025: };
[; ;pic16f887.h: 2026: } SSPMSKbits_t;
[; ;pic16f887.h: 2027: extern volatile SSPMSKbits_t SSPMSKbits @ 0x093;
[; ;pic16f887.h: 2070: typedef union {
[; ;pic16f887.h: 2071: struct {
[; ;pic16f887.h: 2072: unsigned MSK0 :1;
[; ;pic16f887.h: 2073: unsigned MSK1 :1;
[; ;pic16f887.h: 2074: unsigned MSK2 :1;
[; ;pic16f887.h: 2075: unsigned MSK3 :1;
[; ;pic16f887.h: 2076: unsigned MSK4 :1;
[; ;pic16f887.h: 2077: unsigned MSK5 :1;
[; ;pic16f887.h: 2078: unsigned MSK6 :1;
[; ;pic16f887.h: 2079: unsigned MSK7 :1;
[; ;pic16f887.h: 2080: };
[; ;pic16f887.h: 2081: } MSKbits_t;
[; ;pic16f887.h: 2082: extern volatile MSKbits_t MSKbits @ 0x093;
[; ;pic16f887.h: 2126: extern volatile unsigned char SSPSTAT @ 0x094;
"2128
[; ;pic16f887.h: 2128: asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
[; ;pic16f887.h: 2131: typedef union {
[; ;pic16f887.h: 2132: struct {
[; ;pic16f887.h: 2133: unsigned BF :1;
[; ;pic16f887.h: 2134: unsigned UA :1;
[; ;pic16f887.h: 2135: unsigned R_nW :1;
[; ;pic16f887.h: 2136: unsigned S :1;
[; ;pic16f887.h: 2137: unsigned P :1;
[; ;pic16f887.h: 2138: unsigned D_nA :1;
[; ;pic16f887.h: 2139: unsigned CKE :1;
[; ;pic16f887.h: 2140: unsigned SMP :1;
[; ;pic16f887.h: 2141: };
[; ;pic16f887.h: 2142: struct {
[; ;pic16f887.h: 2143: unsigned :2;
[; ;pic16f887.h: 2144: unsigned R :1;
[; ;pic16f887.h: 2145: unsigned :2;
[; ;pic16f887.h: 2146: unsigned D :1;
[; ;pic16f887.h: 2147: };
[; ;pic16f887.h: 2148: struct {
[; ;pic16f887.h: 2149: unsigned :2;
[; ;pic16f887.h: 2150: unsigned I2C_READ :1;
[; ;pic16f887.h: 2151: unsigned I2C_START :1;
[; ;pic16f887.h: 2152: unsigned I2C_STOP :1;
[; ;pic16f887.h: 2153: unsigned I2C_DATA :1;
[; ;pic16f887.h: 2154: };
[; ;pic16f887.h: 2155: struct {
[; ;pic16f887.h: 2156: unsigned :2;
[; ;pic16f887.h: 2157: unsigned nW :1;
[; ;pic16f887.h: 2158: unsigned :2;
[; ;pic16f887.h: 2159: unsigned nA :1;
[; ;pic16f887.h: 2160: };
[; ;pic16f887.h: 2161: struct {
[; ;pic16f887.h: 2162: unsigned :2;
[; ;pic16f887.h: 2163: unsigned nWRITE :1;
[; ;pic16f887.h: 2164: unsigned :2;
[; ;pic16f887.h: 2165: unsigned nADDRESS :1;
[; ;pic16f887.h: 2166: };
[; ;pic16f887.h: 2167: struct {
[; ;pic16f887.h: 2168: unsigned :2;
[; ;pic16f887.h: 2169: unsigned R_W :1;
[; ;pic16f887.h: 2170: unsigned :2;
[; ;pic16f887.h: 2171: unsigned D_A :1;
[; ;pic16f887.h: 2172: };
[; ;pic16f887.h: 2173: struct {
[; ;pic16f887.h: 2174: unsigned :2;
[; ;pic16f887.h: 2175: unsigned READ_WRITE :1;
[; ;pic16f887.h: 2176: unsigned :2;
[; ;pic16f887.h: 2177: unsigned DATA_ADDRESS :1;
[; ;pic16f887.h: 2178: };
[; ;pic16f887.h: 2179: } SSPSTATbits_t;
[; ;pic16f887.h: 2180: extern volatile SSPSTATbits_t SSPSTATbits @ 0x094;
[; ;pic16f887.h: 2294: extern volatile unsigned char WPUB @ 0x095;
"2296
[; ;pic16f887.h: 2296: asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
[; ;pic16f887.h: 2299: typedef union {
[; ;pic16f887.h: 2300: struct {
[; ;pic16f887.h: 2301: unsigned WPUB :8;
[; ;pic16f887.h: 2302: };
[; ;pic16f887.h: 2303: struct {
[; ;pic16f887.h: 2304: unsigned WPUB0 :1;
[; ;pic16f887.h: 2305: unsigned WPUB1 :1;
[; ;pic16f887.h: 2306: unsigned WPUB2 :1;
[; ;pic16f887.h: 2307: unsigned WPUB3 :1;
[; ;pic16f887.h: 2308: unsigned WPUB4 :1;
[; ;pic16f887.h: 2309: unsigned WPUB5 :1;
[; ;pic16f887.h: 2310: unsigned WPUB6 :1;
[; ;pic16f887.h: 2311: unsigned WPUB7 :1;
[; ;pic16f887.h: 2312: };
[; ;pic16f887.h: 2313: } WPUBbits_t;
[; ;pic16f887.h: 2314: extern volatile WPUBbits_t WPUBbits @ 0x095;
[; ;pic16f887.h: 2363: extern volatile unsigned char IOCB @ 0x096;
"2365
[; ;pic16f887.h: 2365: asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
[; ;pic16f887.h: 2368: typedef union {
[; ;pic16f887.h: 2369: struct {
[; ;pic16f887.h: 2370: unsigned IOCB :8;
[; ;pic16f887.h: 2371: };
[; ;pic16f887.h: 2372: struct {
[; ;pic16f887.h: 2373: unsigned IOCB0 :1;
[; ;pic16f887.h: 2374: unsigned IOCB1 :1;
[; ;pic16f887.h: 2375: unsigned IOCB2 :1;
[; ;pic16f887.h: 2376: unsigned IOCB3 :1;
[; ;pic16f887.h: 2377: unsigned IOCB4 :1;
[; ;pic16f887.h: 2378: unsigned IOCB5 :1;
[; ;pic16f887.h: 2379: unsigned IOCB6 :1;
[; ;pic16f887.h: 2380: unsigned IOCB7 :1;
[; ;pic16f887.h: 2381: };
[; ;pic16f887.h: 2382: } IOCBbits_t;
[; ;pic16f887.h: 2383: extern volatile IOCBbits_t IOCBbits @ 0x096;
[; ;pic16f887.h: 2432: extern volatile unsigned char VRCON @ 0x097;
"2434
[; ;pic16f887.h: 2434: asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
[; ;pic16f887.h: 2437: typedef union {
[; ;pic16f887.h: 2438: struct {
[; ;pic16f887.h: 2439: unsigned VR :4;
[; ;pic16f887.h: 2440: unsigned VRSS :1;
[; ;pic16f887.h: 2441: unsigned VRR :1;
[; ;pic16f887.h: 2442: unsigned VROE :1;
[; ;pic16f887.h: 2443: unsigned VREN :1;
[; ;pic16f887.h: 2444: };
[; ;pic16f887.h: 2445: struct {
[; ;pic16f887.h: 2446: unsigned VR0 :1;
[; ;pic16f887.h: 2447: unsigned VR1 :1;
[; ;pic16f887.h: 2448: unsigned VR2 :1;
[; ;pic16f887.h: 2449: unsigned VR3 :1;
[; ;pic16f887.h: 2450: };
[; ;pic16f887.h: 2451: } VRCONbits_t;
[; ;pic16f887.h: 2452: extern volatile VRCONbits_t VRCONbits @ 0x097;
[; ;pic16f887.h: 2501: extern volatile unsigned char TXSTA @ 0x098;
"2503
[; ;pic16f887.h: 2503: asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
[; ;pic16f887.h: 2506: typedef union {
[; ;pic16f887.h: 2507: struct {
[; ;pic16f887.h: 2508: unsigned TX9D :1;
[; ;pic16f887.h: 2509: unsigned TRMT :1;
[; ;pic16f887.h: 2510: unsigned BRGH :1;
[; ;pic16f887.h: 2511: unsigned SENDB :1;
[; ;pic16f887.h: 2512: unsigned SYNC :1;
[; ;pic16f887.h: 2513: unsigned TXEN :1;
[; ;pic16f887.h: 2514: unsigned TX9 :1;
[; ;pic16f887.h: 2515: unsigned CSRC :1;
[; ;pic16f887.h: 2516: };
[; ;pic16f887.h: 2517: struct {
[; ;pic16f887.h: 2518: unsigned TXD8 :1;
[; ;pic16f887.h: 2519: unsigned :5;
[; ;pic16f887.h: 2520: unsigned nTX8 :1;
[; ;pic16f887.h: 2521: };
[; ;pic16f887.h: 2522: struct {
[; ;pic16f887.h: 2523: unsigned :6;
[; ;pic16f887.h: 2524: unsigned TX8_9 :1;
[; ;pic16f887.h: 2525: };
[; ;pic16f887.h: 2526: } TXSTAbits_t;
[; ;pic16f887.h: 2527: extern volatile TXSTAbits_t TXSTAbits @ 0x098;
[; ;pic16f887.h: 2586: extern volatile unsigned char SPBRG @ 0x099;
"2588
[; ;pic16f887.h: 2588: asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
[; ;pic16f887.h: 2591: typedef union {
[; ;pic16f887.h: 2592: struct {
[; ;pic16f887.h: 2593: unsigned BRG0 :1;
[; ;pic16f887.h: 2594: unsigned BRG1 :1;
[; ;pic16f887.h: 2595: unsigned BRG2 :1;
[; ;pic16f887.h: 2596: unsigned BRG3 :1;
[; ;pic16f887.h: 2597: unsigned BRG4 :1;
[; ;pic16f887.h: 2598: unsigned BRG5 :1;
[; ;pic16f887.h: 2599: unsigned BRG6 :1;
[; ;pic16f887.h: 2600: unsigned BRG7 :1;
[; ;pic16f887.h: 2601: };
[; ;pic16f887.h: 2602: } SPBRGbits_t;
[; ;pic16f887.h: 2603: extern volatile SPBRGbits_t SPBRGbits @ 0x099;
[; ;pic16f887.h: 2647: extern volatile unsigned char SPBRGH @ 0x09A;
"2649
[; ;pic16f887.h: 2649: asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
[; ;pic16f887.h: 2652: typedef union {
[; ;pic16f887.h: 2653: struct {
[; ;pic16f887.h: 2654: unsigned SPBRGH :8;
[; ;pic16f887.h: 2655: };
[; ;pic16f887.h: 2656: struct {
[; ;pic16f887.h: 2657: unsigned BRG8 :1;
[; ;pic16f887.h: 2658: unsigned BRG9 :1;
[; ;pic16f887.h: 2659: unsigned BRG10 :1;
[; ;pic16f887.h: 2660: unsigned BRG11 :1;
[; ;pic16f887.h: 2661: unsigned BRG12 :1;
[; ;pic16f887.h: 2662: unsigned BRG13 :1;
[; ;pic16f887.h: 2663: unsigned BRG14 :1;
[; ;pic16f887.h: 2664: unsigned BRG15 :1;
[; ;pic16f887.h: 2665: };
[; ;pic16f887.h: 2666: } SPBRGHbits_t;
[; ;pic16f887.h: 2667: extern volatile SPBRGHbits_t SPBRGHbits @ 0x09A;
[; ;pic16f887.h: 2716: extern volatile unsigned char PWM1CON @ 0x09B;
"2718
[; ;pic16f887.h: 2718: asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
[; ;pic16f887.h: 2721: typedef union {
[; ;pic16f887.h: 2722: struct {
[; ;pic16f887.h: 2723: unsigned PDC :7;
[; ;pic16f887.h: 2724: unsigned PRSEN :1;
[; ;pic16f887.h: 2725: };
[; ;pic16f887.h: 2726: struct {
[; ;pic16f887.h: 2727: unsigned PDC0 :1;
[; ;pic16f887.h: 2728: unsigned PDC1 :1;
[; ;pic16f887.h: 2729: unsigned PDC2 :1;
[; ;pic16f887.h: 2730: unsigned PDC3 :1;
[; ;pic16f887.h: 2731: unsigned PDC4 :1;
[; ;pic16f887.h: 2732: unsigned PDC5 :1;
[; ;pic16f887.h: 2733: unsigned PDC6 :1;
[; ;pic16f887.h: 2734: };
[; ;pic16f887.h: 2735: } PWM1CONbits_t;
[; ;pic16f887.h: 2736: extern volatile PWM1CONbits_t PWM1CONbits @ 0x09B;
[; ;pic16f887.h: 2785: extern volatile unsigned char ECCPAS @ 0x09C;
"2787
[; ;pic16f887.h: 2787: asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
[; ;pic16f887.h: 2790: typedef union {
[; ;pic16f887.h: 2791: struct {
[; ;pic16f887.h: 2792: unsigned PSSBD :2;
[; ;pic16f887.h: 2793: unsigned PSSAC :2;
[; ;pic16f887.h: 2794: unsigned ECCPAS :3;
[; ;pic16f887.h: 2795: unsigned ECCPASE :1;
[; ;pic16f887.h: 2796: };
[; ;pic16f887.h: 2797: struct {
[; ;pic16f887.h: 2798: unsigned PSSBD0 :1;
[; ;pic16f887.h: 2799: unsigned PSSBD1 :1;
[; ;pic16f887.h: 2800: unsigned PSSAC0 :1;
[; ;pic16f887.h: 2801: unsigned PSSAC1 :1;
[; ;pic16f887.h: 2802: unsigned ECCPAS0 :1;
[; ;pic16f887.h: 2803: unsigned ECCPAS1 :1;
[; ;pic16f887.h: 2804: unsigned ECCPAS2 :1;
[; ;pic16f887.h: 2805: };
[; ;pic16f887.h: 2806: } ECCPASbits_t;
[; ;pic16f887.h: 2807: extern volatile ECCPASbits_t ECCPASbits @ 0x09C;
[; ;pic16f887.h: 2866: extern volatile unsigned char PSTRCON @ 0x09D;
"2868
[; ;pic16f887.h: 2868: asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
[; ;pic16f887.h: 2871: typedef union {
[; ;pic16f887.h: 2872: struct {
[; ;pic16f887.h: 2873: unsigned STRA :1;
[; ;pic16f887.h: 2874: unsigned STRB :1;
[; ;pic16f887.h: 2875: unsigned STRC :1;
[; ;pic16f887.h: 2876: unsigned STRD :1;
[; ;pic16f887.h: 2877: unsigned STRSYNC :1;
[; ;pic16f887.h: 2878: };
[; ;pic16f887.h: 2879: } PSTRCONbits_t;
[; ;pic16f887.h: 2880: extern volatile PSTRCONbits_t PSTRCONbits @ 0x09D;
[; ;pic16f887.h: 2909: extern volatile unsigned char ADRESL @ 0x09E;
"2911
[; ;pic16f887.h: 2911: asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
[; ;pic16f887.h: 2915: extern volatile unsigned char ADCON1 @ 0x09F;
"2917
[; ;pic16f887.h: 2917: asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
[; ;pic16f887.h: 2920: typedef union {
[; ;pic16f887.h: 2921: struct {
[; ;pic16f887.h: 2922: unsigned :4;
[; ;pic16f887.h: 2923: unsigned VCFG0 :1;
[; ;pic16f887.h: 2924: unsigned VCFG1 :1;
[; ;pic16f887.h: 2925: unsigned :1;
[; ;pic16f887.h: 2926: unsigned ADFM :1;
[; ;pic16f887.h: 2927: };
[; ;pic16f887.h: 2928: } ADCON1bits_t;
[; ;pic16f887.h: 2929: extern volatile ADCON1bits_t ADCON1bits @ 0x09F;
[; ;pic16f887.h: 2948: extern volatile unsigned char WDTCON @ 0x105;
"2950
[; ;pic16f887.h: 2950: asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
[; ;pic16f887.h: 2953: typedef union {
[; ;pic16f887.h: 2954: struct {
[; ;pic16f887.h: 2955: unsigned SWDTEN :1;
[; ;pic16f887.h: 2956: unsigned WDTPS :4;
[; ;pic16f887.h: 2957: };
[; ;pic16f887.h: 2958: struct {
[; ;pic16f887.h: 2959: unsigned :1;
[; ;pic16f887.h: 2960: unsigned WDTPS0 :1;
[; ;pic16f887.h: 2961: unsigned WDTPS1 :1;
[; ;pic16f887.h: 2962: unsigned WDTPS2 :1;
[; ;pic16f887.h: 2963: unsigned WDTPS3 :1;
[; ;pic16f887.h: 2964: };
[; ;pic16f887.h: 2965: } WDTCONbits_t;
[; ;pic16f887.h: 2966: extern volatile WDTCONbits_t WDTCONbits @ 0x105;
[; ;pic16f887.h: 3000: extern volatile unsigned char CM1CON0 @ 0x107;
"3002
[; ;pic16f887.h: 3002: asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
[; ;pic16f887.h: 3005: typedef union {
[; ;pic16f887.h: 3006: struct {
[; ;pic16f887.h: 3007: unsigned C1CH :2;
[; ;pic16f887.h: 3008: unsigned C1R :1;
[; ;pic16f887.h: 3009: unsigned :1;
[; ;pic16f887.h: 3010: unsigned C1POL :1;
[; ;pic16f887.h: 3011: unsigned C1OE :1;
[; ;pic16f887.h: 3012: unsigned C1OUT :1;
[; ;pic16f887.h: 3013: unsigned C1ON :1;
[; ;pic16f887.h: 3014: };
[; ;pic16f887.h: 3015: struct {
[; ;pic16f887.h: 3016: unsigned C1CH0 :1;
[; ;pic16f887.h: 3017: unsigned C1CH1 :1;
[; ;pic16f887.h: 3018: };
[; ;pic16f887.h: 3019: } CM1CON0bits_t;
[; ;pic16f887.h: 3020: extern volatile CM1CON0bits_t CM1CON0bits @ 0x107;
[; ;pic16f887.h: 3064: extern volatile unsigned char CM2CON0 @ 0x108;
"3066
[; ;pic16f887.h: 3066: asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
[; ;pic16f887.h: 3069: typedef union {
[; ;pic16f887.h: 3070: struct {
[; ;pic16f887.h: 3071: unsigned C2CH :2;
[; ;pic16f887.h: 3072: unsigned C2R :1;
[; ;pic16f887.h: 3073: unsigned :1;
[; ;pic16f887.h: 3074: unsigned C2POL :1;
[; ;pic16f887.h: 3075: unsigned C2OE :1;
[; ;pic16f887.h: 3076: unsigned C2OUT :1;
[; ;pic16f887.h: 3077: unsigned C2ON :1;
[; ;pic16f887.h: 3078: };
[; ;pic16f887.h: 3079: struct {
[; ;pic16f887.h: 3080: unsigned C2CH0 :1;
[; ;pic16f887.h: 3081: unsigned C2CH1 :1;
[; ;pic16f887.h: 3082: };
[; ;pic16f887.h: 3083: } CM2CON0bits_t;
[; ;pic16f887.h: 3084: extern volatile CM2CON0bits_t CM2CON0bits @ 0x108;
[; ;pic16f887.h: 3128: extern volatile unsigned char CM2CON1 @ 0x109;
"3130
[; ;pic16f887.h: 3130: asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
[; ;pic16f887.h: 3133: typedef union {
[; ;pic16f887.h: 3134: struct {
[; ;pic16f887.h: 3135: unsigned C2SYNC :1;
[; ;pic16f887.h: 3136: unsigned T1GSS :1;
[; ;pic16f887.h: 3137: unsigned :2;
[; ;pic16f887.h: 3138: unsigned C2RSEL :1;
[; ;pic16f887.h: 3139: unsigned C1RSEL :1;
[; ;pic16f887.h: 3140: unsigned MC2OUT :1;
[; ;pic16f887.h: 3141: unsigned MC1OUT :1;
[; ;pic16f887.h: 3142: };
[; ;pic16f887.h: 3143: } CM2CON1bits_t;
[; ;pic16f887.h: 3144: extern volatile CM2CON1bits_t CM2CON1bits @ 0x109;
[; ;pic16f887.h: 3178: extern volatile unsigned char EEDATA @ 0x10C;
"3180
[; ;pic16f887.h: 3180: asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
[; ;pic16f887.h: 3183: extern volatile unsigned char EEDAT @ 0x10C;
"3185
[; ;pic16f887.h: 3185: asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
[; ;pic16f887.h: 3189: extern volatile unsigned char EEADR @ 0x10D;
"3191
[; ;pic16f887.h: 3191: asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
[; ;pic16f887.h: 3195: extern volatile unsigned char EEDATH @ 0x10E;
"3197
[; ;pic16f887.h: 3197: asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
[; ;pic16f887.h: 3201: extern volatile unsigned char EEADRH @ 0x10F;
"3203
[; ;pic16f887.h: 3203: asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
[; ;pic16f887.h: 3207: extern volatile unsigned char SRCON @ 0x185;
"3209
[; ;pic16f887.h: 3209: asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
[; ;pic16f887.h: 3212: typedef union {
[; ;pic16f887.h: 3213: struct {
[; ;pic16f887.h: 3214: unsigned FVREN :1;
[; ;pic16f887.h: 3215: unsigned :1;
[; ;pic16f887.h: 3216: unsigned PULSR :1;
[; ;pic16f887.h: 3217: unsigned PULSS :1;
[; ;pic16f887.h: 3218: unsigned C2REN :1;
[; ;pic16f887.h: 3219: unsigned C1SEN :1;
[; ;pic16f887.h: 3220: unsigned SR0 :1;
[; ;pic16f887.h: 3221: unsigned SR1 :1;
[; ;pic16f887.h: 3222: };
[; ;pic16f887.h: 3223: } SRCONbits_t;
[; ;pic16f887.h: 3224: extern volatile SRCONbits_t SRCONbits @ 0x185;
[; ;pic16f887.h: 3263: extern volatile unsigned char BAUDCTL @ 0x187;
"3265
[; ;pic16f887.h: 3265: asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
[; ;pic16f887.h: 3268: typedef union {
[; ;pic16f887.h: 3269: struct {
[; ;pic16f887.h: 3270: unsigned ABDEN :1;
[; ;pic16f887.h: 3271: unsigned WUE :1;
[; ;pic16f887.h: 3272: unsigned :1;
[; ;pic16f887.h: 3273: unsigned BRG16 :1;
[; ;pic16f887.h: 3274: unsigned SCKP :1;
[; ;pic16f887.h: 3275: unsigned :1;
[; ;pic16f887.h: 3276: unsigned RCIDL :1;
[; ;pic16f887.h: 3277: unsigned ABDOVF :1;
[; ;pic16f887.h: 3278: };
[; ;pic16f887.h: 3279: } BAUDCTLbits_t;
[; ;pic16f887.h: 3280: extern volatile BAUDCTLbits_t BAUDCTLbits @ 0x187;
[; ;pic16f887.h: 3314: extern volatile unsigned char ANSEL @ 0x188;
"3316
[; ;pic16f887.h: 3316: asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
[; ;pic16f887.h: 3319: typedef union {
[; ;pic16f887.h: 3320: struct {
[; ;pic16f887.h: 3321: unsigned ANS0 :1;
[; ;pic16f887.h: 3322: unsigned ANS1 :1;
[; ;pic16f887.h: 3323: unsigned ANS2 :1;
[; ;pic16f887.h: 3324: unsigned ANS3 :1;
[; ;pic16f887.h: 3325: unsigned ANS4 :1;
[; ;pic16f887.h: 3326: unsigned ANS5 :1;
[; ;pic16f887.h: 3327: unsigned ANS6 :1;
[; ;pic16f887.h: 3328: unsigned ANS7 :1;
[; ;pic16f887.h: 3329: };
[; ;pic16f887.h: 3330: } ANSELbits_t;
[; ;pic16f887.h: 3331: extern volatile ANSELbits_t ANSELbits @ 0x188;
[; ;pic16f887.h: 3375: extern volatile unsigned char ANSELH @ 0x189;
"3377
[; ;pic16f887.h: 3377: asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
[; ;pic16f887.h: 3380: typedef union {
[; ;pic16f887.h: 3381: struct {
[; ;pic16f887.h: 3382: unsigned ANS8 :1;
[; ;pic16f887.h: 3383: unsigned ANS9 :1;
[; ;pic16f887.h: 3384: unsigned ANS10 :1;
[; ;pic16f887.h: 3385: unsigned ANS11 :1;
[; ;pic16f887.h: 3386: unsigned ANS12 :1;
[; ;pic16f887.h: 3387: unsigned ANS13 :1;
[; ;pic16f887.h: 3388: };
[; ;pic16f887.h: 3389: } ANSELHbits_t;
[; ;pic16f887.h: 3390: extern volatile ANSELHbits_t ANSELHbits @ 0x189;
[; ;pic16f887.h: 3424: extern volatile unsigned char EECON1 @ 0x18C;
"3426
[; ;pic16f887.h: 3426: asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
[; ;pic16f887.h: 3429: typedef union {
[; ;pic16f887.h: 3430: struct {
[; ;pic16f887.h: 3431: unsigned RD :1;
[; ;pic16f887.h: 3432: unsigned WR :1;
[; ;pic16f887.h: 3433: unsigned WREN :1;
[; ;pic16f887.h: 3434: unsigned WRERR :1;
[; ;pic16f887.h: 3435: unsigned :3;
[; ;pic16f887.h: 3436: unsigned EEPGD :1;
[; ;pic16f887.h: 3437: };
[; ;pic16f887.h: 3438: } EECON1bits_t;
[; ;pic16f887.h: 3439: extern volatile EECON1bits_t EECON1bits @ 0x18C;
[; ;pic16f887.h: 3468: extern volatile unsigned char EECON2 @ 0x18D;
"3470
[; ;pic16f887.h: 3470: asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
[; ;pic16f887.h: 3480: extern volatile __bit ABDEN @ (((unsigned) &BAUDCTL)*8) + 0;
[; ;pic16f887.h: 3482: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCTL)*8) + 7;
[; ;pic16f887.h: 3484: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f887.h: 3486: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f887.h: 3488: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f887.h: 3490: extern volatile __bit ADCS0 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f887.h: 3492: extern volatile __bit ADCS1 @ (((unsigned) &ADCON0)*8) + 7;
[; ;pic16f887.h: 3494: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f887.h: 3496: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f887.h: 3498: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f887.h: 3500: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f887.h: 3502: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f887.h: 3504: extern volatile __bit ANS0 @ (((unsigned) &ANSEL)*8) + 0;
[; ;pic16f887.h: 3506: extern volatile __bit ANS1 @ (((unsigned) &ANSEL)*8) + 1;
[; ;pic16f887.h: 3508: extern volatile __bit ANS10 @ (((unsigned) &ANSELH)*8) + 2;
[; ;pic16f887.h: 3510: extern volatile __bit ANS11 @ (((unsigned) &ANSELH)*8) + 3;
[; ;pic16f887.h: 3512: extern volatile __bit ANS12 @ (((unsigned) &ANSELH)*8) + 4;
[; ;pic16f887.h: 3514: extern volatile __bit ANS13 @ (((unsigned) &ANSELH)*8) + 5;
[; ;pic16f887.h: 3516: extern volatile __bit ANS2 @ (((unsigned) &ANSEL)*8) + 2;
[; ;pic16f887.h: 3518: extern volatile __bit ANS3 @ (((unsigned) &ANSEL)*8) + 3;
[; ;pic16f887.h: 3520: extern volatile __bit ANS4 @ (((unsigned) &ANSEL)*8) + 4;
[; ;pic16f887.h: 3522: extern volatile __bit ANS5 @ (((unsigned) &ANSEL)*8) + 5;
[; ;pic16f887.h: 3524: extern volatile __bit ANS6 @ (((unsigned) &ANSEL)*8) + 6;
[; ;pic16f887.h: 3526: extern volatile __bit ANS7 @ (((unsigned) &ANSEL)*8) + 7;
[; ;pic16f887.h: 3528: extern volatile __bit ANS8 @ (((unsigned) &ANSELH)*8) + 0;
[; ;pic16f887.h: 3530: extern volatile __bit ANS9 @ (((unsigned) &ANSELH)*8) + 1;
[; ;pic16f887.h: 3532: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f887.h: 3534: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f887.h: 3536: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f887.h: 3538: extern volatile __bit BRG0 @ (((unsigned) &SPBRG)*8) + 0;
[; ;pic16f887.h: 3540: extern volatile __bit BRG1 @ (((unsigned) &SPBRG)*8) + 1;
[; ;pic16f887.h: 3542: extern volatile __bit BRG10 @ (((unsigned) &SPBRGH)*8) + 2;
[; ;pic16f887.h: 3544: extern volatile __bit BRG11 @ (((unsigned) &SPBRGH)*8) + 3;
[; ;pic16f887.h: 3546: extern volatile __bit BRG12 @ (((unsigned) &SPBRGH)*8) + 4;
[; ;pic16f887.h: 3548: extern volatile __bit BRG13 @ (((unsigned) &SPBRGH)*8) + 5;
[; ;pic16f887.h: 3550: extern volatile __bit BRG14 @ (((unsigned) &SPBRGH)*8) + 6;
[; ;pic16f887.h: 3552: extern volatile __bit BRG15 @ (((unsigned) &SPBRGH)*8) + 7;
[; ;pic16f887.h: 3554: extern volatile __bit BRG16 @ (((unsigned) &BAUDCTL)*8) + 3;
[; ;pic16f887.h: 3556: extern volatile __bit BRG2 @ (((unsigned) &SPBRG)*8) + 2;
[; ;pic16f887.h: 3558: extern volatile __bit BRG3 @ (((unsigned) &SPBRG)*8) + 3;
[; ;pic16f887.h: 3560: extern volatile __bit BRG4 @ (((unsigned) &SPBRG)*8) + 4;
[; ;pic16f887.h: 3562: extern volatile __bit BRG5 @ (((unsigned) &SPBRG)*8) + 5;
[; ;pic16f887.h: 3564: extern volatile __bit BRG6 @ (((unsigned) &SPBRG)*8) + 6;
[; ;pic16f887.h: 3566: extern volatile __bit BRG7 @ (((unsigned) &SPBRG)*8) + 7;
[; ;pic16f887.h: 3568: extern volatile __bit BRG8 @ (((unsigned) &SPBRGH)*8) + 0;
[; ;pic16f887.h: 3570: extern volatile __bit BRG9 @ (((unsigned) &SPBRGH)*8) + 1;
[; ;pic16f887.h: 3572: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f887.h: 3574: extern volatile __bit C1CH0 @ (((unsigned) &CM1CON0)*8) + 0;
[; ;pic16f887.h: 3576: extern volatile __bit C1CH1 @ (((unsigned) &CM1CON0)*8) + 1;
[; ;pic16f887.h: 3578: extern volatile __bit C1IE @ (((unsigned) &PIE2)*8) + 5;
[; ;pic16f887.h: 3580: extern volatile __bit C1IF @ (((unsigned) &PIR2)*8) + 5;
[; ;pic16f887.h: 3582: extern volatile __bit C1OE @ (((unsigned) &CM1CON0)*8) + 5;
[; ;pic16f887.h: 3584: extern volatile __bit C1ON @ (((unsigned) &CM1CON0)*8) + 7;
[; ;pic16f887.h: 3586: extern volatile __bit C1OUT @ (((unsigned) &CM1CON0)*8) + 6;
[; ;pic16f887.h: 3588: extern volatile __bit C1POL @ (((unsigned) &CM1CON0)*8) + 4;
[; ;pic16f887.h: 3590: extern volatile __bit C1R @ (((unsigned) &CM1CON0)*8) + 2;
[; ;pic16f887.h: 3592: extern volatile __bit C1RSEL @ (((unsigned) &CM2CON1)*8) + 5;
[; ;pic16f887.h: 3594: extern volatile __bit C1SEN @ (((unsigned) &SRCON)*8) + 5;
[; ;pic16f887.h: 3596: extern volatile __bit C2CH0 @ (((unsigned) &CM2CON0)*8) + 0;
[; ;pic16f887.h: 3598: extern volatile __bit C2CH1 @ (((unsigned) &CM2CON0)*8) + 1;
[; ;pic16f887.h: 3600: extern volatile __bit C2IE @ (((unsigned) &PIE2)*8) + 6;
[; ;pic16f887.h: 3602: extern volatile __bit C2IF @ (((unsigned) &PIR2)*8) + 6;
[; ;pic16f887.h: 3604: extern volatile __bit C2OE @ (((unsigned) &CM2CON0)*8) + 5;
[; ;pic16f887.h: 3606: extern volatile __bit C2ON @ (((unsigned) &CM2CON0)*8) + 7;
[; ;pic16f887.h: 3608: extern volatile __bit C2OUT @ (((unsigned) &CM2CON0)*8) + 6;
[; ;pic16f887.h: 3610: extern volatile __bit C2POL @ (((unsigned) &CM2CON0)*8) + 4;
[; ;pic16f887.h: 3612: extern volatile __bit C2R @ (((unsigned) &CM2CON0)*8) + 2;
[; ;pic16f887.h: 3614: extern volatile __bit C2REN @ (((unsigned) &SRCON)*8) + 4;
[; ;pic16f887.h: 3616: extern volatile __bit C2RSEL @ (((unsigned) &CM2CON1)*8) + 4;
[; ;pic16f887.h: 3618: extern volatile __bit C2SYNC @ (((unsigned) &CM2CON1)*8) + 0;
[; ;pic16f887.h: 3620: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f887.h: 3622: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f887.h: 3624: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f887.h: 3626: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f887.h: 3628: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f887.h: 3630: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f887.h: 3632: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f887.h: 3634: extern volatile __bit CCP1X @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3636: extern volatile __bit CCP1Y @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3638: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f887.h: 3640: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f887.h: 3642: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f887.h: 3644: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f887.h: 3646: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f887.h: 3648: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f887.h: 3650: extern volatile __bit CCP2X @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3652: extern volatile __bit CCP2Y @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3654: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f887.h: 3656: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f887.h: 3658: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f887.h: 3660: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f887.h: 3662: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f887.h: 3664: extern volatile __bit CKP @ (((unsigned) &SSPCON)*8) + 4;
[; ;pic16f887.h: 3666: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f887.h: 3668: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f887.h: 3670: extern volatile __bit DATA_ADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3672: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f887.h: 3674: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f887.h: 3676: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f887.h: 3678: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f887.h: 3680: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f887.h: 3682: extern volatile __bit D_A @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3684: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3686: extern volatile __bit ECCPAS0 @ (((unsigned) &ECCPAS)*8) + 4;
[; ;pic16f887.h: 3688: extern volatile __bit ECCPAS1 @ (((unsigned) &ECCPAS)*8) + 5;
[; ;pic16f887.h: 3690: extern volatile __bit ECCPAS2 @ (((unsigned) &ECCPAS)*8) + 6;
[; ;pic16f887.h: 3692: extern volatile __bit ECCPASE @ (((unsigned) &ECCPAS)*8) + 7;
[; ;pic16f887.h: 3694: extern volatile __bit EEIE @ (((unsigned) &PIE2)*8) + 4;
[; ;pic16f887.h: 3696: extern volatile __bit EEIF @ (((unsigned) &PIR2)*8) + 4;
[; ;pic16f887.h: 3698: extern volatile __bit EEPGD @ (((unsigned) &EECON1)*8) + 7;
[; ;pic16f887.h: 3700: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f887.h: 3702: extern volatile __bit FVREN @ (((unsigned) &SRCON)*8) + 0;
[; ;pic16f887.h: 3704: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f887.h: 3706: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f887.h: 3708: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3710: extern volatile __bit GO_DONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3712: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 3714: extern volatile __bit HTS @ (((unsigned) &OSCCON)*8) + 2;
[; ;pic16f887.h: 3716: extern volatile __bit I2C_DATA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 3718: extern volatile __bit I2C_READ @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3720: extern volatile __bit I2C_START @ (((unsigned) &SSPSTAT)*8) + 3;
[; ;pic16f887.h: 3722: extern volatile __bit I2C_STOP @ (((unsigned) &SSPSTAT)*8) + 4;
[; ;pic16f887.h: 3724: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f887.h: 3726: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f887.h: 3728: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f887.h: 3730: extern volatile __bit IOCB0 @ (((unsigned) &IOCB)*8) + 0;
[; ;pic16f887.h: 3732: extern volatile __bit IOCB1 @ (((unsigned) &IOCB)*8) + 1;
[; ;pic16f887.h: 3734: extern volatile __bit IOCB2 @ (((unsigned) &IOCB)*8) + 2;
[; ;pic16f887.h: 3736: extern volatile __bit IOCB3 @ (((unsigned) &IOCB)*8) + 3;
[; ;pic16f887.h: 3738: extern volatile __bit IOCB4 @ (((unsigned) &IOCB)*8) + 4;
[; ;pic16f887.h: 3740: extern volatile __bit IOCB5 @ (((unsigned) &IOCB)*8) + 5;
[; ;pic16f887.h: 3742: extern volatile __bit IOCB6 @ (((unsigned) &IOCB)*8) + 6;
[; ;pic16f887.h: 3744: extern volatile __bit IOCB7 @ (((unsigned) &IOCB)*8) + 7;
[; ;pic16f887.h: 3746: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f887.h: 3748: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f887.h: 3750: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f887.h: 3752: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f887.h: 3754: extern volatile __bit LTS @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f887.h: 3756: extern volatile __bit MC1OUT @ (((unsigned) &CM2CON1)*8) + 7;
[; ;pic16f887.h: 3758: extern volatile __bit MC2OUT @ (((unsigned) &CM2CON1)*8) + 6;
[; ;pic16f887.h: 3760: extern volatile __bit MSK0 @ (((unsigned) &SSPMSK)*8) + 0;
[; ;pic16f887.h: 3762: extern volatile __bit MSK1 @ (((unsigned) &SSPMSK)*8) + 1;
[; ;pic16f887.h: 3764: extern volatile __bit MSK2 @ (((unsigned) &SSPMSK)*8) + 2;
[; ;pic16f887.h: 3766: extern volatile __bit MSK3 @ (((unsigned) &SSPMSK)*8) + 3;
[; ;pic16f887.h: 3768: extern volatile __bit MSK4 @ (((unsigned) &SSPMSK)*8) + 4;
[; ;pic16f887.h: 3770: extern volatile __bit MSK5 @ (((unsigned) &SSPMSK)*8) + 5;
[; ;pic16f887.h: 3772: extern volatile __bit MSK6 @ (((unsigned) &SSPMSK)*8) + 6;
[; ;pic16f887.h: 3774: extern volatile __bit MSK7 @ (((unsigned) &SSPMSK)*8) + 7;
[; ;pic16f887.h: 3776: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f887.h: 3778: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f887.h: 3780: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f887.h: 3782: extern volatile __bit OSTS @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f887.h: 3784: extern volatile __bit P1M0 @ (((unsigned) &CCP1CON)*8) + 6;
[; ;pic16f887.h: 3786: extern volatile __bit P1M1 @ (((unsigned) &CCP1CON)*8) + 7;
[; ;pic16f887.h: 3788: extern volatile __bit PDC0 @ (((unsigned) &PWM1CON)*8) + 0;
[; ;pic16f887.h: 3790: extern volatile __bit PDC1 @ (((unsigned) &PWM1CON)*8) + 1;
[; ;pic16f887.h: 3792: extern volatile __bit PDC2 @ (((unsigned) &PWM1CON)*8) + 2;
[; ;pic16f887.h: 3794: extern volatile __bit PDC3 @ (((unsigned) &PWM1CON)*8) + 3;
[; ;pic16f887.h: 3796: extern volatile __bit PDC4 @ (((unsigned) &PWM1CON)*8) + 4;
[; ;pic16f887.h: 3798: extern volatile __bit PDC5 @ (((unsigned) &PWM1CON)*8) + 5;
[; ;pic16f887.h: 3800: extern volatile __bit PDC6 @ (((unsigned) &PWM1CON)*8) + 6;
[; ;pic16f887.h: 3802: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f887.h: 3804: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f887.h: 3806: extern volatile __bit PRSEN @ (((unsigned) &PWM1CON)*8) + 7;
[; ;pic16f887.h: 3808: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f887.h: 3810: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f887.h: 3812: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f887.h: 3814: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f887.h: 3816: extern volatile __bit PSSAC0 @ (((unsigned) &ECCPAS)*8) + 2;
[; ;pic16f887.h: 3818: extern volatile __bit PSSAC1 @ (((unsigned) &ECCPAS)*8) + 3;
[; ;pic16f887.h: 3820: extern volatile __bit PSSBD0 @ (((unsigned) &ECCPAS)*8) + 0;
[; ;pic16f887.h: 3822: extern volatile __bit PSSBD1 @ (((unsigned) &ECCPAS)*8) + 1;
[; ;pic16f887.h: 3824: extern volatile __bit PULSR @ (((unsigned) &SRCON)*8) + 2;
[; ;pic16f887.h: 3826: extern volatile __bit PULSS @ (((unsigned) &SRCON)*8) + 3;
[; ;pic16f887.h: 3828: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f887.h: 3830: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f887.h: 3832: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f887.h: 3834: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f887.h: 3836: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f887.h: 3838: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f887.h: 3840: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f887.h: 3842: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f887.h: 3844: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f887.h: 3846: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f887.h: 3848: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f887.h: 3850: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f887.h: 3852: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f887.h: 3854: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f887.h: 3856: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f887.h: 3858: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f887.h: 3860: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f887.h: 3862: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f887.h: 3864: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f887.h: 3866: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f887.h: 3868: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f887.h: 3870: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f887.h: 3872: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f887.h: 3874: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f887.h: 3876: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f887.h: 3878: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f887.h: 3880: extern volatile __bit RC8_9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3882: extern volatile __bit RC9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3884: extern volatile __bit RCD8 @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3886: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f887.h: 3888: extern volatile __bit RCIDL @ (((unsigned) &BAUDCTL)*8) + 6;
[; ;pic16f887.h: 3890: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f887.h: 3892: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f887.h: 3894: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f887.h: 3896: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f887.h: 3898: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f887.h: 3900: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f887.h: 3902: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f887.h: 3904: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f887.h: 3906: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f887.h: 3908: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f887.h: 3910: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f887.h: 3912: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f887.h: 3914: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f887.h: 3916: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f887.h: 3918: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f887.h: 3920: extern volatile __bit READ_WRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3922: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f887.h: 3924: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f887.h: 3926: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f887.h: 3928: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 3930: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f887.h: 3932: extern volatile __bit R_W @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3934: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 3936: extern volatile __bit SBOREN @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f887.h: 3938: extern volatile __bit SCKP @ (((unsigned) &BAUDCTL)*8) + 4;
[; ;pic16f887.h: 3940: extern volatile __bit SCS @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f887.h: 3942: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f887.h: 3944: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f887.h: 3946: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f887.h: 3948: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f887.h: 3950: extern volatile __bit SR0 @ (((unsigned) &SRCON)*8) + 6;
[; ;pic16f887.h: 3952: extern volatile __bit SR1 @ (((unsigned) &SRCON)*8) + 7;
[; ;pic16f887.h: 3954: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f887.h: 3956: extern volatile __bit SSPEN @ (((unsigned) &SSPCON)*8) + 5;
[; ;pic16f887.h: 3958: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f887.h: 3960: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f887.h: 3962: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON)*8) + 0;
[; ;pic16f887.h: 3964: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON)*8) + 1;
[; ;pic16f887.h: 3966: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON)*8) + 2;
[; ;pic16f887.h: 3968: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON)*8) + 3;
[; ;pic16f887.h: 3970: extern volatile __bit SSPOV @ (((unsigned) &SSPCON)*8) + 6;
[; ;pic16f887.h: 3972: extern volatile __bit STRA @ (((unsigned) &PSTRCON)*8) + 0;
[; ;pic16f887.h: 3974: extern volatile __bit STRB @ (((unsigned) &PSTRCON)*8) + 1;
[; ;pic16f887.h: 3976: extern volatile __bit STRC @ (((unsigned) &PSTRCON)*8) + 2;
[; ;pic16f887.h: 3978: extern volatile __bit STRD @ (((unsigned) &PSTRCON)*8) + 3;
[; ;pic16f887.h: 3980: extern volatile __bit STRSYNC @ (((unsigned) &PSTRCON)*8) + 4;
[; ;pic16f887.h: 3982: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f887.h: 3984: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f887.h: 3986: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f887.h: 3988: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 3990: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 3992: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f887.h: 3994: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f887.h: 3996: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f887.h: 3998: extern volatile __bit T1GINV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4000: extern volatile __bit T1GIV @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f887.h: 4002: extern volatile __bit T1GSS @ (((unsigned) &CM2CON1)*8) + 1;
[; ;pic16f887.h: 4004: extern volatile __bit T1INSYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4006: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f887.h: 4008: extern volatile __bit T1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4010: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f887.h: 4012: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f887.h: 4014: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f887.h: 4016: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f887.h: 4018: extern volatile __bit TMR1CS @ (((unsigned) &T1CON)*8) + 1;
[; ;pic16f887.h: 4020: extern volatile __bit TMR1GE @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f887.h: 4022: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f887.h: 4024: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f887.h: 4026: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f887.h: 4028: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f887.h: 4030: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f887.h: 4032: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f887.h: 4034: extern volatile __bit TOUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f887.h: 4036: extern volatile __bit TOUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f887.h: 4038: extern volatile __bit TOUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f887.h: 4040: extern volatile __bit TOUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f887.h: 4042: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f887.h: 4044: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f887.h: 4046: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f887.h: 4048: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f887.h: 4050: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f887.h: 4052: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f887.h: 4054: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f887.h: 4056: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f887.h: 4058: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f887.h: 4060: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f887.h: 4062: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f887.h: 4064: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f887.h: 4066: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f887.h: 4068: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f887.h: 4070: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f887.h: 4072: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f887.h: 4074: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f887.h: 4076: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f887.h: 4078: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f887.h: 4080: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f887.h: 4082: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f887.h: 4084: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f887.h: 4086: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f887.h: 4088: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f887.h: 4090: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f887.h: 4092: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f887.h: 4094: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f887.h: 4096: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f887.h: 4098: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f887.h: 4100: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f887.h: 4102: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f887.h: 4104: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f887.h: 4106: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f887.h: 4108: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f887.h: 4110: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f887.h: 4112: extern volatile __bit TRISE3 @ (((unsigned) &TRISE)*8) + 3;
[; ;pic16f887.h: 4114: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f887.h: 4116: extern volatile __bit TUN0 @ (((unsigned) &OSCTUNE)*8) + 0;
[; ;pic16f887.h: 4118: extern volatile __bit TUN1 @ (((unsigned) &OSCTUNE)*8) + 1;
[; ;pic16f887.h: 4120: extern volatile __bit TUN2 @ (((unsigned) &OSCTUNE)*8) + 2;
[; ;pic16f887.h: 4122: extern volatile __bit TUN3 @ (((unsigned) &OSCTUNE)*8) + 3;
[; ;pic16f887.h: 4124: extern volatile __bit TUN4 @ (((unsigned) &OSCTUNE)*8) + 4;
[; ;pic16f887.h: 4126: extern volatile __bit TX8_9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4128: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4130: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4132: extern volatile __bit TXD8 @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f887.h: 4134: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f887.h: 4136: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f887.h: 4138: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f887.h: 4140: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f887.h: 4142: extern volatile __bit ULPWUE @ (((unsigned) &PCON)*8) + 5;
[; ;pic16f887.h: 4144: extern volatile __bit ULPWUIE @ (((unsigned) &PIE2)*8) + 2;
[; ;pic16f887.h: 4146: extern volatile __bit ULPWUIF @ (((unsigned) &PIR2)*8) + 2;
[; ;pic16f887.h: 4148: extern volatile __bit VCFG0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f887.h: 4150: extern volatile __bit VCFG1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f887.h: 4152: extern volatile __bit VR0 @ (((unsigned) &VRCON)*8) + 0;
[; ;pic16f887.h: 4154: extern volatile __bit VR1 @ (((unsigned) &VRCON)*8) + 1;
[; ;pic16f887.h: 4156: extern volatile __bit VR2 @ (((unsigned) &VRCON)*8) + 2;
[; ;pic16f887.h: 4158: extern volatile __bit VR3 @ (((unsigned) &VRCON)*8) + 3;
[; ;pic16f887.h: 4160: extern volatile __bit VREN @ (((unsigned) &VRCON)*8) + 7;
[; ;pic16f887.h: 4162: extern volatile __bit VROE @ (((unsigned) &VRCON)*8) + 6;
[; ;pic16f887.h: 4164: extern volatile __bit VRR @ (((unsigned) &VRCON)*8) + 5;
[; ;pic16f887.h: 4166: extern volatile __bit VRSS @ (((unsigned) &VRCON)*8) + 4;
[; ;pic16f887.h: 4168: extern volatile __bit WCOL @ (((unsigned) &SSPCON)*8) + 7;
[; ;pic16f887.h: 4170: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f887.h: 4172: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f887.h: 4174: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f887.h: 4176: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f887.h: 4178: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f887.h: 4180: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f887.h: 4182: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f887.h: 4184: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f887.h: 4186: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f887.h: 4188: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f887.h: 4190: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f887.h: 4192: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f887.h: 4194: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f887.h: 4196: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f887.h: 4198: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f887.h: 4200: extern volatile __bit WUE @ (((unsigned) &BAUDCTL)*8) + 1;
[; ;pic16f887.h: 4202: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f887.h: 4204: extern volatile __bit nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4206: extern volatile __bit nADDRESS @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f887.h: 4208: extern volatile __bit nBO @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4210: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f887.h: 4212: extern volatile __bit nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f887.h: 4214: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f887.h: 4216: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f887.h: 4218: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f887.h: 4220: extern volatile __bit nRC8 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f887.h: 4222: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f887.h: 4224: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f887.h: 4226: extern volatile __bit nTX8 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f887.h: 4228: extern volatile __bit nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f887.h: 4230: extern volatile __bit nWRITE @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 34: extern char * strcat(char *, const char *);
[; ;string.h: 35: extern char * strcpy(char *, const char *);
[; ;string.h: 36: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 37: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 38: extern char * strdup(const char *);
[; ;string.h: 39: extern char * strtok(char *, const char *);
[; ;string.h: 42: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 43: extern int strcmp(const char *, const char *);
[; ;string.h: 44: extern int stricmp(const char *, const char *);
[; ;string.h: 45: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 46: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 47: extern void * memchr(const void *, int, size_t);
[; ;string.h: 48: extern size_t strcspn(const char *, const char *);
[; ;string.h: 49: extern char * strpbrk(const char *, const char *);
[; ;string.h: 50: extern size_t strspn(const char *, const char *);
[; ;string.h: 51: extern char * strstr(const char *, const char *);
[; ;string.h: 52: extern char * stristr(const char *, const char *);
[; ;string.h: 53: extern char * strerror(int);
[; ;string.h: 54: extern size_t strlen(const char *);
[; ;string.h: 55: extern char * strchr(const char *, int);
[; ;string.h: 56: extern char * strichr(const char *, int);
[; ;string.h: 57: extern char * strrchr(const char *, int);
[; ;string.h: 58: extern char * strrichr(const char *, int);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
"1 motor_mode.h
[v _modM1 `(v ~T0 @X0 1 ef1`i ]
{
[; ;motor_mode.h: 1: void modM1(int m){
[e :U _modM1 ]
[v _m `i ~T0 @X0 1 r1 ]
[f ]
[; ;motor_mode.h: 3: if(m == 1){
"3
[e $ ! == _m -> 1 `i 145  ]
{
[; ;motor_mode.h: 4: PORTAbits.RA4 = 0;
"4
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
[; ;motor_mode.h: 5: PORTAbits.RA3 = 0;
"5
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;motor_mode.h: 6: PORTAbits.RA2 = 0;
"6
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
"7
}
[e :U 145 ]
[; ;motor_mode.h: 7: }
[; ;motor_mode.h: 9: if(m == 2){
"9
[e $ ! == _m -> 2 `i 146  ]
{
[; ;motor_mode.h: 10: PORTAbits.RA4 = 1;
"10
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;motor_mode.h: 11: PORTAbits.RA3 = 0;
"11
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;motor_mode.h: 12: PORTAbits.RA2 = 0;
"12
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
"13
}
[e :U 146 ]
[; ;motor_mode.h: 13: }
[; ;motor_mode.h: 14: if(m == 3){
"14
[e $ ! == _m -> 3 `i 147  ]
{
[; ;motor_mode.h: 15: PORTAbits.RA4 = 0;
"15
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
[; ;motor_mode.h: 16: PORTAbits.RA3 = 1;
"16
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;motor_mode.h: 17: PORTAbits.RA2 = 0;
"17
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
"18
}
[e :U 147 ]
[; ;motor_mode.h: 18: }
[; ;motor_mode.h: 19: if(m == 4){
"19
[e $ ! == _m -> 4 `i 148  ]
{
[; ;motor_mode.h: 20: PORTAbits.RA4 = 1;
"20
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;motor_mode.h: 21: PORTAbits.RA3 = 1;
"21
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;motor_mode.h: 22: PORTAbits.RA2 = 0;
"22
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
"23
}
[e :U 148 ]
[; ;motor_mode.h: 23: }
[; ;motor_mode.h: 24: if(m == 5){
"24
[e $ ! == _m -> 5 `i 149  ]
{
[; ;motor_mode.h: 25: PORTAbits.RA4 = 0;
"25
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
[; ;motor_mode.h: 26: PORTAbits.RA3 = 0;
"26
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;motor_mode.h: 27: PORTAbits.RA2 = 1;
"27
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
"28
}
[e :U 149 ]
[; ;motor_mode.h: 28: }
[; ;motor_mode.h: 29: if(m == 6){
"29
[e $ ! == _m -> 6 `i 150  ]
{
[; ;motor_mode.h: 30: PORTAbits.RA4 = 1;
"30
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;motor_mode.h: 31: PORTAbits.RA3 = 0;
"31
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;motor_mode.h: 32: PORTAbits.RA2 = 1;
"32
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
"33
}
[e :U 150 ]
[; ;motor_mode.h: 33: }
[; ;motor_mode.h: 34: if(m == 7){
"34
[e $ ! == _m -> 7 `i 151  ]
{
[; ;motor_mode.h: 35: PORTAbits.RA4 = 0;
"35
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
[; ;motor_mode.h: 36: PORTAbits.RA3 = 1;
"36
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;motor_mode.h: 37: PORTAbits.RA2 = 1;
"37
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
"38
}
[e :U 151 ]
[; ;motor_mode.h: 38: }
[; ;motor_mode.h: 39: if(m == 8){
"39
[e $ ! == _m -> 8 `i 152  ]
{
[; ;motor_mode.h: 40: PORTAbits.RA4 = 1;
"40
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;motor_mode.h: 41: PORTAbits.RA3 = 1;
"41
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;motor_mode.h: 42: PORTAbits.RA2 = 1;
"42
[e = . . _PORTAbits 0 2 -> -> 1 `i `uc ]
"43
}
[e :U 152 ]
[; ;motor_mode.h: 43: }
[; ;motor_mode.h: 45: }
"45
[e :UE 144 ]
}
"47
[v _modM2 `(v ~T0 @X0 1 ef1`i ]
{
[; ;motor_mode.h: 47: void modM2(int m){
[e :U _modM2 ]
[v _m `i ~T0 @X0 1 r1 ]
[f ]
[; ;motor_mode.h: 49: if(m == 1){
"49
[e $ ! == _m -> 1 `i 154  ]
{
[; ;motor_mode.h: 50: PORTCbits.RC0 = 0;
"50
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 51: PORTEbits.RE2 = 0;
"51
[e = . . _PORTEbits 0 2 -> -> 0 `i `uc ]
[; ;motor_mode.h: 52: PORTEbits.RE1 = 0;
"52
[e = . . _PORTEbits 0 1 -> -> 0 `i `uc ]
"53
}
[e :U 154 ]
[; ;motor_mode.h: 53: }
[; ;motor_mode.h: 55: if(m == 2){
"55
[e $ ! == _m -> 2 `i 155  ]
{
[; ;motor_mode.h: 56: PORTCbits.RC0 = 1;
"56
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 57: PORTEbits.RE2 = 0;
"57
[e = . . _PORTEbits 0 2 -> -> 0 `i `uc ]
[; ;motor_mode.h: 58: PORTEbits.RE1 = 0;
"58
[e = . . _PORTEbits 0 1 -> -> 0 `i `uc ]
"59
}
[e :U 155 ]
[; ;motor_mode.h: 59: }
[; ;motor_mode.h: 60: if(m == 3){
"60
[e $ ! == _m -> 3 `i 156  ]
{
[; ;motor_mode.h: 61: PORTCbits.RC0 = 0;
"61
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 62: PORTEbits.RE2 = 1;
"62
[e = . . _PORTEbits 0 2 -> -> 1 `i `uc ]
[; ;motor_mode.h: 63: PORTEbits.RE1 = 0;
"63
[e = . . _PORTEbits 0 1 -> -> 0 `i `uc ]
"64
}
[e :U 156 ]
[; ;motor_mode.h: 64: }
[; ;motor_mode.h: 65: if(m == 4){
"65
[e $ ! == _m -> 4 `i 157  ]
{
[; ;motor_mode.h: 66: PORTCbits.RC0 = 1;
"66
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 67: PORTEbits.RE2 = 1;
"67
[e = . . _PORTEbits 0 2 -> -> 1 `i `uc ]
[; ;motor_mode.h: 68: PORTEbits.RE1 = 0;
"68
[e = . . _PORTEbits 0 1 -> -> 0 `i `uc ]
"69
}
[e :U 157 ]
[; ;motor_mode.h: 69: }
[; ;motor_mode.h: 70: if(m == 5){
"70
[e $ ! == _m -> 5 `i 158  ]
{
[; ;motor_mode.h: 71: PORTCbits.RC0 = 0;
"71
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 72: PORTEbits.RE2 = 0;
"72
[e = . . _PORTEbits 0 2 -> -> 0 `i `uc ]
[; ;motor_mode.h: 73: PORTEbits.RE1 = 1;
"73
[e = . . _PORTEbits 0 1 -> -> 1 `i `uc ]
"74
}
[e :U 158 ]
[; ;motor_mode.h: 74: }
[; ;motor_mode.h: 75: if(m == 6){
"75
[e $ ! == _m -> 6 `i 159  ]
{
[; ;motor_mode.h: 76: PORTCbits.RC0 = 1;
"76
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 77: PORTEbits.RE2 = 0;
"77
[e = . . _PORTEbits 0 2 -> -> 0 `i `uc ]
[; ;motor_mode.h: 78: PORTEbits.RE1 = 1;
"78
[e = . . _PORTEbits 0 1 -> -> 1 `i `uc ]
"79
}
[e :U 159 ]
[; ;motor_mode.h: 79: }
[; ;motor_mode.h: 80: if(m == 7){
"80
[e $ ! == _m -> 7 `i 160  ]
{
[; ;motor_mode.h: 81: PORTCbits.RC0 = 0;
"81
[e = . . _PORTCbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 82: PORTEbits.RE2 = 1;
"82
[e = . . _PORTEbits 0 2 -> -> 1 `i `uc ]
[; ;motor_mode.h: 83: PORTEbits.RE1 = 1;
"83
[e = . . _PORTEbits 0 1 -> -> 1 `i `uc ]
"84
}
[e :U 160 ]
[; ;motor_mode.h: 84: }
[; ;motor_mode.h: 85: if(m == 8){
"85
[e $ ! == _m -> 8 `i 161  ]
{
[; ;motor_mode.h: 86: PORTCbits.RC0 = 1;
"86
[e = . . _PORTCbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 87: PORTEbits.RE2 = 1;
"87
[e = . . _PORTEbits 0 2 -> -> 1 `i `uc ]
[; ;motor_mode.h: 88: PORTEbits.RE1 = 1;
"88
[e = . . _PORTEbits 0 1 -> -> 1 `i `uc ]
"89
}
[e :U 161 ]
[; ;motor_mode.h: 89: }
[; ;motor_mode.h: 91: }
"91
[e :UE 153 ]
}
"95
[v _modM3 `(v ~T0 @X0 1 ef1`i ]
{
[; ;motor_mode.h: 95: void modM3(int m){
[e :U _modM3 ]
[v _m `i ~T0 @X0 1 r1 ]
[f ]
[; ;motor_mode.h: 97: if(m == 1){
"97
[e $ ! == _m -> 1 `i 163  ]
{
[; ;motor_mode.h: 98: PORTDbits.RD1 = 0;
"98
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
[; ;motor_mode.h: 99: PORTDbits.RD0 = 0;
"99
[e = . . _PORTDbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 100: PORTCbits.RC3 = 0;
"100
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"101
}
[e :U 163 ]
[; ;motor_mode.h: 101: }
[; ;motor_mode.h: 103: if(m == 2){
"103
[e $ ! == _m -> 2 `i 164  ]
{
[; ;motor_mode.h: 104: PORTDbits.RD1 = 1;
"104
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
[; ;motor_mode.h: 105: PORTDbits.RD0 = 0;
"105
[e = . . _PORTDbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 106: PORTCbits.RC3 = 0;
"106
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"107
}
[e :U 164 ]
[; ;motor_mode.h: 107: }
[; ;motor_mode.h: 108: if(m == 3){
"108
[e $ ! == _m -> 3 `i 165  ]
{
[; ;motor_mode.h: 109: PORTDbits.RD1 = 0;
"109
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
[; ;motor_mode.h: 110: PORTDbits.RD0 = 1;
"110
[e = . . _PORTDbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 111: PORTCbits.RC3 = 0;
"111
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"112
}
[e :U 165 ]
[; ;motor_mode.h: 112: }
[; ;motor_mode.h: 113: if(m == 4){
"113
[e $ ! == _m -> 4 `i 166  ]
{
[; ;motor_mode.h: 114: PORTDbits.RD1 = 1;
"114
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
[; ;motor_mode.h: 115: PORTDbits.RD0 = 1;
"115
[e = . . _PORTDbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 116: PORTCbits.RC3 = 0;
"116
[e = . . _PORTCbits 0 3 -> -> 0 `i `uc ]
"117
}
[e :U 166 ]
[; ;motor_mode.h: 117: }
[; ;motor_mode.h: 118: if(m == 5){
"118
[e $ ! == _m -> 5 `i 167  ]
{
[; ;motor_mode.h: 119: PORTDbits.RD1 = 0;
"119
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
[; ;motor_mode.h: 120: PORTDbits.RD0 = 0;
"120
[e = . . _PORTDbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 121: PORTCbits.RC3 = 1;
"121
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"122
}
[e :U 167 ]
[; ;motor_mode.h: 122: }
[; ;motor_mode.h: 123: if(m == 6){
"123
[e $ ! == _m -> 6 `i 168  ]
{
[; ;motor_mode.h: 124: PORTDbits.RD1 = 1;
"124
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
[; ;motor_mode.h: 125: PORTDbits.RD0 = 0;
"125
[e = . . _PORTDbits 0 0 -> -> 0 `i `uc ]
[; ;motor_mode.h: 126: PORTCbits.RC3 = 1;
"126
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"127
}
[e :U 168 ]
[; ;motor_mode.h: 127: }
[; ;motor_mode.h: 128: if(m == 7){
"128
[e $ ! == _m -> 7 `i 169  ]
{
[; ;motor_mode.h: 129: PORTDbits.RD1 = 0;
"129
[e = . . _PORTDbits 0 1 -> -> 0 `i `uc ]
[; ;motor_mode.h: 130: PORTDbits.RD0 = 1;
"130
[e = . . _PORTDbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 131: PORTCbits.RC3 = 1;
"131
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"132
}
[e :U 169 ]
[; ;motor_mode.h: 132: }
[; ;motor_mode.h: 133: if(m == 8){
"133
[e $ ! == _m -> 8 `i 170  ]
{
[; ;motor_mode.h: 134: PORTDbits.RD1 = 1;
"134
[e = . . _PORTDbits 0 1 -> -> 1 `i `uc ]
[; ;motor_mode.h: 135: PORTDbits.RD0 = 1;
"135
[e = . . _PORTDbits 0 0 -> -> 1 `i `uc ]
[; ;motor_mode.h: 136: PORTCbits.RC3 = 1;
"136
[e = . . _PORTCbits 0 3 -> -> 1 `i `uc ]
"137
}
[e :U 170 ]
[; ;motor_mode.h: 137: }
[; ;motor_mode.h: 139: }
"139
[e :UE 162 ]
}
"57 stepMotor.h
[v _debug `(v ~T0 @X0 1 ef ]
{
[; ;stepMotor.h: 57: void debug(){
[e :U _debug ]
[f ]
[; ;stepMotor.h: 58: PORTBbits.RB3 = 1;
"58
[e = . . _PORTBbits 0 3 -> -> 1 `i `uc ]
[; ;stepMotor.h: 59: _delay((unsigned long)((1000)*(8000000/4000.0)));
"59
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;stepMotor.h: 60: PORTBbits.RB3 = 0;
"60
[e = . . _PORTBbits 0 3 -> -> 0 `i `uc ]
[; ;stepMotor.h: 61: }
"61
[e :UE 171 ]
}
"63
[v _steps `uc ~T0 @X0 1 e ]
[i _steps
-> / -> -> 360 `i `d .1.8 `uc
]
[; ;stepMotor.h: 63: char steps = (char)(360 / 1.8);
"65
[v _speed `uc ~T0 @X0 1 e ]
[; ;stepMotor.h: 65: char speed;
"67
[v _ms_delay `(v ~T0 @X0 1 ef1`uc ]
{
[; ;stepMotor.h: 67: void ms_delay(unsigned char val){
[e :U _ms_delay ]
[v _val `uc ~T0 @X0 1 r1 ]
[f ]
"68
[v _i `uc ~T0 @X0 1 a ]
[; ;stepMotor.h: 68: unsigned char i;
[; ;stepMotor.h: 69: for (i = 0; i < val; i++)
"69
{
[e = _i -> -> 0 `i `uc ]
[e $U 176  ]
"70
[e :U 173 ]
[; ;stepMotor.h: 70: _delay((unsigned long)((1)*(8000000/4000.0)));
[e ( __delay (1 -> * -> -> 1 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"69
[e ++ _i -> -> 1 `i `uc ]
[e :U 176 ]
[e $ < -> _i `i -> _val `i 173  ]
[e :U 174 ]
"70
}
[; ;stepMotor.h: 71: }
"71
[e :UE 172 ]
}
"73
[v _conteggioGiri `(uc ~T0 @X0 1 ef1`uc ]
{
[; ;stepMotor.h: 73: char conteggioGiri(char nGiri) {
[e :U _conteggioGiri ]
[v _nGiri `uc ~T0 @X0 1 r1 ]
[f ]
[; ;stepMotor.h: 74: return nGiri * steps;
"74
[e ) -> * -> _nGiri `i -> _steps `i `uc ]
[e $UE 177  ]
[; ;stepMotor.h: 75: }
"75
[e :UE 177 ]
}
"79
[v _full_drive `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;stepMotor.h: 79: void full_drive(char direction, char speed) {
[e :U _full_drive ]
[v _direction `uc ~T0 @X0 1 r1 ]
[v _speed `uc ~T0 @X0 1 r2 ]
[f ]
[; ;stepMotor.h: 80: PORTAbits.RA4 = 0;
"80
[e = . . _PORTAbits 0 4 -> -> 0 `i `uc ]
[; ;stepMotor.h: 81: PORTAbits.RA3 = 0;
"81
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;stepMotor.h: 82: PORTAbits.RA2 = 0;
"82
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
[; ;stepMotor.h: 83: if (direction == 1) {
"83
[e $ ! == -> _direction `i -> 1 `i 179  ]
{
[; ;stepMotor.h: 84: PORTAbits.RA0 = 1;
"84
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 85: PORTAbits.RA1 = 1;
"85
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 86: ms_delay(speed);
"86
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 87: PORTAbits.RA1 = 0;
"87
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 88: ms_delay(speed);
"88
[e ( _ms_delay (1 _speed ]
"89
}
[e :U 179 ]
[; ;stepMotor.h: 89: }
[; ;stepMotor.h: 90: if (direction == 0) {
"90
[e $ ! == -> _direction `i -> 0 `i 180  ]
{
[; ;stepMotor.h: 91: PORTAbits.RA0 = 0;
"91
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 92: PORTAbits.RA1 = 1;
"92
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 93: ms_delay(speed);
"93
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 94: PORTAbits.RA1 = 0;
"94
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 95: ms_delay(speed);
"95
[e ( _ms_delay (1 _speed ]
"96
}
[e :U 180 ]
[; ;stepMotor.h: 96: }
[; ;stepMotor.h: 98: }
"98
[e :UE 178 ]
}
"101
[v _half_drive `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;stepMotor.h: 101: void half_drive(char direction, char speed) {
[e :U _half_drive ]
[v _direction `uc ~T0 @X0 1 r1 ]
[v _speed `uc ~T0 @X0 1 r2 ]
[f ]
[; ;stepMotor.h: 102: PORTAbits.RA4 = 1;
"102
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;stepMotor.h: 103: PORTAbits.RA3 = 0;
"103
[e = . . _PORTAbits 0 3 -> -> 0 `i `uc ]
[; ;stepMotor.h: 104: PORTAbits.RA2 = 0;
"104
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
[; ;stepMotor.h: 105: if (direction == 1) {
"105
[e $ ! == -> _direction `i -> 1 `i 182  ]
{
[; ;stepMotor.h: 106: PORTAbits.RA1 = 1;
"106
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 107: PORTAbits.RA0 = 1;
"107
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 108: ms_delay(speed);
"108
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 109: PORTAbits.RA1 = 0;
"109
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 110: PORTAbits.RA0 = 1;
"110
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 111: ms_delay(speed);
"111
[e ( _ms_delay (1 _speed ]
"112
}
[e :U 182 ]
[; ;stepMotor.h: 112: }
[; ;stepMotor.h: 113: if (direction == 0) {
"113
[e $ ! == -> _direction `i -> 0 `i 183  ]
{
[; ;stepMotor.h: 114: PORTAbits.RA1 = 1;
"114
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 115: PORTAbits.RA0 = 0;
"115
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 116: ms_delay(speed);
"116
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 117: PORTAbits.RA1 = 0;
"117
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 118: PORTAbits.RA0 = 0;
"118
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 119: ms_delay(speed);
"119
[e ( _ms_delay (1 _speed ]
"120
}
[e :U 183 ]
[; ;stepMotor.h: 120: }
[; ;stepMotor.h: 121: }
"121
[e :UE 181 ]
}
"124
[v _microstep8 `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;stepMotor.h: 124: void microstep8(char direction, char speed) {
[e :U _microstep8 ]
[v _direction `uc ~T0 @X0 1 r1 ]
[v _speed `uc ~T0 @X0 1 r2 ]
[f ]
[; ;stepMotor.h: 125: PORTAbits.RA4 = 1;
"125
[e = . . _PORTAbits 0 4 -> -> 1 `i `uc ]
[; ;stepMotor.h: 126: PORTAbits.RA3 = 1;
"126
[e = . . _PORTAbits 0 3 -> -> 1 `i `uc ]
[; ;stepMotor.h: 127: PORTAbits.RA2 = 0;
"127
[e = . . _PORTAbits 0 2 -> -> 0 `i `uc ]
[; ;stepMotor.h: 128: if (direction == 1) {
"128
[e $ ! == -> _direction `i -> 1 `i 185  ]
{
[; ;stepMotor.h: 129: PORTAbits.RA1 = 1;
"129
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 130: PORTAbits.RA0 = 1;
"130
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 131: ms_delay(speed);
"131
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 132: PORTAbits.RA1 = 0;
"132
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 133: PORTAbits.RA0 = 1;
"133
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 134: ms_delay(speed);
"134
[e ( _ms_delay (1 _speed ]
"135
}
[e :U 185 ]
[; ;stepMotor.h: 135: }
[; ;stepMotor.h: 136: if (direction == 0) {
"136
[e $ ! == -> _direction `i -> 0 `i 186  ]
{
[; ;stepMotor.h: 137: PORTAbits.RA1 = 1;
"137
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 138: PORTAbits.RA0 = 0;
"138
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 139: ms_delay(speed);
"139
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 140: PORTAbits.RA1 = 0;
"140
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 141: PORTAbits.RA0 = 0;
"141
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 142: ms_delay(speed);
"142
[e ( _ms_delay (1 _speed ]
"143
}
[e :U 186 ]
[; ;stepMotor.h: 143: }
[; ;stepMotor.h: 144: }
"144
[e :UE 184 ]
}
"151
[v _modConversionFormNumberToMultiplier `(i ~T0 @X0 1 ef1`i ]
{
[; ;stepMotor.h: 151: int modConversionFormNumberToMultiplier(int a) {
[e :U _modConversionFormNumberToMultiplier ]
[v _a `i ~T0 @X0 1 r1 ]
[f ]
[; ;stepMotor.h: 152: if (a != 0) a -= 1;
"152
[e $ ! != _a -> 0 `i 188  ]
[e =- _a -> 1 `i ]
[e :U 188 ]
[v F1996 `i ~T0 @X0 -> 8 `i s ]
[i F1996
:U ..
"153
-> 1 `i
-> 2 `i
-> 4 `i
-> 8 `i
-> 16 `i
-> 32 `i
-> 32 `i
-> 32 `i
..
]
[v _val `i ~T0 @X0 -> 8 `i a ]
[; ;stepMotor.h: 153: int val[8] = { 1,2,4,8,16,32,32,32 };
[e = _val F1996 ]
[; ;stepMotor.h: 154: return val[a];
"154
[e ) *U + &U _val * -> -> _a `ui `ux -> -> # *U &U _val `ui `ux ]
[e $UE 187  ]
[; ;stepMotor.h: 155: }
"155
[e :UE 187 ]
}
"159
[v _stepMotorX `(v ~T0 @X0 1 ef3`uc`uc`i ]
{
[; ;stepMotor.h: 159: void stepMotorX(char dir, char speed, int mod) {
[e :U _stepMotorX ]
[v _dir `uc ~T0 @X0 1 r1 ]
[v _speed `uc ~T0 @X0 1 r2 ]
[v _mod `i ~T0 @X0 1 r3 ]
[f ]
[; ;stepMotor.h: 160: modM1(mod);
"160
[e ( _modM1 (1 _mod ]
[; ;stepMotor.h: 162: if (dir == 1) {
"162
[e $ ! == -> _dir `i -> 1 `i 190  ]
{
[; ;stepMotor.h: 163: PORTAbits.RA1 = 1;
"163
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 164: PORTAbits.RA0 = 1;
"164
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 165: ms_delay(speed);
"165
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 166: PORTAbits.RA1 = 0;
"166
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 167: PORTAbits.RA0 = 1;
"167
[e = . . _PORTAbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 168: ms_delay(speed);
"168
[e ( _ms_delay (1 _speed ]
"169
}
[; ;stepMotor.h: 169: }
[e $U 191  ]
"170
[e :U 190 ]
[; ;stepMotor.h: 170: else if(dir == 0){
[e $ ! == -> _dir `i -> 0 `i 192  ]
{
[; ;stepMotor.h: 171: PORTAbits.RA1 = 1;
"171
[e = . . _PORTAbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 172: PORTAbits.RA0 = 0;
"172
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 173: ms_delay(speed);
"173
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 174: PORTAbits.RA1 = 0;
"174
[e = . . _PORTAbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 175: PORTAbits.RA0 = 0;
"175
[e = . . _PORTAbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 176: ms_delay(speed);
"176
[e ( _ms_delay (1 _speed ]
"177
}
[e :U 192 ]
"178
[e :U 191 ]
[; ;stepMotor.h: 177: }
[; ;stepMotor.h: 178: }
[e :UE 189 ]
}
"181
[v _stepMotorY `(v ~T0 @X0 1 ef3`uc`uc`i ]
{
[; ;stepMotor.h: 181: void stepMotorY(char dir, char speed, int mod) {
[e :U _stepMotorY ]
[v _dir `uc ~T0 @X0 1 r1 ]
[v _speed `uc ~T0 @X0 1 r2 ]
[v _mod `i ~T0 @X0 1 r3 ]
[f ]
[; ;stepMotor.h: 182: modM2(mod);
"182
[e ( _modM2 (1 _mod ]
[; ;stepMotor.h: 184: if (dir == 1) {
"184
[e $ ! == -> _dir `i -> 1 `i 194  ]
{
[; ;stepMotor.h: 185: PORTEbits.RE0 = 1;
"185
[e = . . _PORTEbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 186: PORTAbits.RA5 = 1;
"186
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
[; ;stepMotor.h: 187: ms_delay(speed);
"187
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 188: PORTEbits.RE0 = 0;
"188
[e = . . _PORTEbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 189: PORTAbits.RA5= 1;
"189
[e = . . _PORTAbits 0 5 -> -> 1 `i `uc ]
[; ;stepMotor.h: 190: ms_delay(speed);
"190
[e ( _ms_delay (1 _speed ]
"191
}
[; ;stepMotor.h: 191: }
[e $U 195  ]
"192
[e :U 194 ]
[; ;stepMotor.h: 192: else if(dir == 0){
[e $ ! == -> _dir `i -> 0 `i 196  ]
{
[; ;stepMotor.h: 193: PORTEbits.RE0 = 1;
"193
[e = . . _PORTEbits 0 0 -> -> 1 `i `uc ]
[; ;stepMotor.h: 194: PORTAbits.RA5 = 0;
"194
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
[; ;stepMotor.h: 195: ms_delay(speed);
"195
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 196: PORTEbits.RE0 = 0;
"196
[e = . . _PORTEbits 0 0 -> -> 0 `i `uc ]
[; ;stepMotor.h: 197: PORTAbits.RA5 = 0;
"197
[e = . . _PORTAbits 0 5 -> -> 0 `i `uc ]
[; ;stepMotor.h: 198: ms_delay(speed);
"198
[e ( _ms_delay (1 _speed ]
"199
}
[e :U 196 ]
"200
[e :U 195 ]
[; ;stepMotor.h: 199: }
[; ;stepMotor.h: 200: }
[e :UE 193 ]
}
"202
[v _stepMotorZ `(v ~T0 @X0 1 ef3`uc`uc`i ]
{
[; ;stepMotor.h: 202: void stepMotorZ(char dir, char speed, int mod) {
[e :U _stepMotorZ ]
[v _dir `uc ~T0 @X0 1 r1 ]
[v _speed `uc ~T0 @X0 1 r2 ]
[v _mod `i ~T0 @X0 1 r3 ]
[f ]
[; ;stepMotor.h: 203: modM3(mod);
"203
[e ( _modM3 (1 _mod ]
[; ;stepMotor.h: 205: if (dir == 1) {
"205
[e $ ! == -> _dir `i -> 1 `i 198  ]
{
[; ;stepMotor.h: 207: PORTCbits.RC2 = 1;
"207
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
[; ;stepMotor.h: 208: PORTCbits.RC1 = 1;
"208
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 209: ms_delay(speed);
"209
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 211: PORTCbits.RC2= 0;
"211
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
[; ;stepMotor.h: 212: PORTCbits.RC1 = 1;
"212
[e = . . _PORTCbits 0 1 -> -> 1 `i `uc ]
[; ;stepMotor.h: 213: ms_delay(speed);
"213
[e ( _ms_delay (1 _speed ]
"214
}
[; ;stepMotor.h: 214: }
[e $U 199  ]
"215
[e :U 198 ]
[; ;stepMotor.h: 215: else if(dir == 0){
[e $ ! == -> _dir `i -> 0 `i 200  ]
{
[; ;stepMotor.h: 217: PORTCbits.RC2 = 1;
"217
[e = . . _PORTCbits 0 2 -> -> 1 `i `uc ]
[; ;stepMotor.h: 218: PORTCbits.RC1 = 0;
"218
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 219: ms_delay(speed);
"219
[e ( _ms_delay (1 _speed ]
[; ;stepMotor.h: 221: PORTCbits.RC2 = 0;
"221
[e = . . _PORTCbits 0 2 -> -> 0 `i `uc ]
[; ;stepMotor.h: 222: PORTCbits.RC1 = 0;
"222
[e = . . _PORTCbits 0 1 -> -> 0 `i `uc ]
[; ;stepMotor.h: 223: ms_delay(speed);
"223
[e ( _ms_delay (1 _speed ]
"224
}
[e :U 200 ]
"225
[e :U 199 ]
[; ;stepMotor.h: 224: }
[; ;stepMotor.h: 225: }
[e :UE 197 ]
}
"227
[v _limitDetection `(uc ~T0 @X0 1 ef ]
{
[; ;stepMotor.h: 227: char limitDetection(){
[e :U _limitDetection ]
[f ]
[; ;stepMotor.h: 228: if(PORTBbits.RB1||PORTBbits.RB0||PORTBbits.RB2||PORTBbits.RB3||PORTBbits.RB4||PORTBbits.RB5) return 1;
"228
[e $ ! || || || || || != -> . . _PORTBbits 0 1 `i -> -> -> 0 `i `Vuc `i != -> . . _PORTBbits 0 0 `i -> -> -> 0 `i `Vuc `i != -> . . _PORTBbits 0 2 `i -> -> -> 0 `i `Vuc `i != -> . . _PORTBbits 0 3 `i -> -> -> 0 `i `Vuc `i != -> . . _PORTBbits 0 4 `i -> -> -> 0 `i `Vuc `i != -> . . _PORTBbits 0 5 `i -> -> -> 0 `i `Vuc `i 202  ]
[e ) -> -> 1 `i `uc ]
[e $UE 201  ]
[e :U 202 ]
[; ;stepMotor.h: 229: }
"229
[e :UE 201 ]
}
"231
[v _maxStep `(i ~T0 @X0 1 ef3`i`i`i ]
{
[; ;stepMotor.h: 231: int maxStep(int stepx, int stepy, int stepz){
[e :U _maxStep ]
[v _stepx `i ~T0 @X0 1 r1 ]
[v _stepy `i ~T0 @X0 1 r2 ]
[v _stepz `i ~T0 @X0 1 r3 ]
[f ]
"232
[v _l `i ~T0 @X0 1 a ]
[; ;stepMotor.h: 232: int l = 0;
[e = _l -> 0 `i ]
[; ;stepMotor.h: 233: return l = stepx > stepy ? (stepx > stepz ? stepx : stepz) : (stepy > stepz ? stepy : stepz);
"233
[e ) = _l ? > _stepx _stepy : ? > _stepx _stepz : _stepx _stepz ? > _stepy _stepz : _stepy _stepz ]
[e $UE 203  ]
[; ;stepMotor.h: 234: }
"234
[e :UE 203 ]
}
"237
[v _activeMotor `(i ~T0 @X0 1 ef2`i`i ]
{
[; ;stepMotor.h: 237: int activeMotor(int i, int step){
[e :U _activeMotor ]
[v _i `i ~T0 @X0 1 r1 ]
[v _step `i ~T0 @X0 1 r2 ]
[f ]
[; ;stepMotor.h: 238: if(i<step)
"238
[e $ ! < _i _step 205  ]
[; ;stepMotor.h: 239: return 1;
"239
[e ) -> 1 `i ]
[e $UE 204  ]
[e $U 206  ]
"240
[e :U 205 ]
[; ;stepMotor.h: 240: else return 0;
[e ) -> 0 `i ]
[e $UE 204  ]
[e :U 206 ]
[; ;stepMotor.h: 241: }
"241
[e :UE 204 ]
}
"244
[v _limitx `(i ~T0 @X0 1 ef ]
{
[; ;stepMotor.h: 244: int limitx(){
[e :U _limitx ]
[f ]
[; ;stepMotor.h: 245: if(PORTBbits.RB0 == 1)
"245
[e $ ! == -> . . _PORTBbits 0 0 `i -> 1 `i 208  ]
[; ;stepMotor.h: 246: return 1;
"246
[e ) -> 1 `i ]
[e $UE 207  ]
[e :U 208 ]
[; ;stepMotor.h: 247: if(PORTBbits.RB1 == 1)
"247
[e $ ! == -> . . _PORTBbits 0 1 `i -> 1 `i 209  ]
[; ;stepMotor.h: 248: return 2;
"248
[e ) -> 2 `i ]
[e $UE 207  ]
[e $U 210  ]
"250
[e :U 209 ]
[; ;stepMotor.h: 250: else return 0;
[e ) -> 0 `i ]
[e $UE 207  ]
[e :U 210 ]
[; ;stepMotor.h: 252: }
"252
[e :UE 207 ]
}
"254
[v _limity `(i ~T0 @X0 1 ef ]
{
[; ;stepMotor.h: 254: int limity(){
[e :U _limity ]
[f ]
[; ;stepMotor.h: 255: if(PORTBbits.RB2 == 1)
"255
[e $ ! == -> . . _PORTBbits 0 2 `i -> 1 `i 212  ]
[; ;stepMotor.h: 256: return 1;
"256
[e ) -> 1 `i ]
[e $UE 211  ]
[e :U 212 ]
[; ;stepMotor.h: 257: if(PORTBbits.RB3 == 1)
"257
[e $ ! == -> . . _PORTBbits 0 3 `i -> 1 `i 213  ]
[; ;stepMotor.h: 258: return 2;
"258
[e ) -> 2 `i ]
[e $UE 211  ]
[e $U 214  ]
"260
[e :U 213 ]
[; ;stepMotor.h: 260: else return 0;
[e ) -> 0 `i ]
[e $UE 211  ]
[e :U 214 ]
[; ;stepMotor.h: 262: }
"262
[e :UE 211 ]
}
"263
[v _limitz `(i ~T0 @X0 1 ef ]
{
[; ;stepMotor.h: 263: int limitz(){
[e :U _limitz ]
[f ]
[; ;stepMotor.h: 264: if(PORTBbits.RB4 == 1)
"264
[e $ ! == -> . . _PORTBbits 0 4 `i -> 1 `i 216  ]
[; ;stepMotor.h: 265: return 1;
"265
[e ) -> 1 `i ]
[e $UE 215  ]
[e :U 216 ]
[; ;stepMotor.h: 266: if(PORTBbits.RB5 == 1)
"266
[e $ ! == -> . . _PORTBbits 0 5 `i -> 1 `i 217  ]
[; ;stepMotor.h: 267: return 2;
"267
[e ) -> 2 `i ]
[e $UE 215  ]
[e $U 218  ]
"269
[e :U 217 ]
[; ;stepMotor.h: 269: else return 0;
[e ) -> 0 `i ]
[e $UE 215  ]
[e :U 218 ]
[; ;stepMotor.h: 271: }
"271
[e :UE 215 ]
}
"4 UART.h
[v _UART_Init `(v ~T0 @X0 1 ef ]
"5
{
[; ;UART.h: 4: void UART_Init()
[; ;UART.h: 5: {
[e :U _UART_Init ]
[f ]
[; ;UART.h: 8: SPBRG=12;
"8
[e = _SPBRG -> -> 12 `i `uc ]
[; ;UART.h: 9: SPBRGH=0;
"9
[e = _SPBRGH -> -> 0 `i `uc ]
[; ;UART.h: 11: BAUDCTLbits.BRG16=0;
"11
[e = . . _BAUDCTLbits 0 3 -> -> 0 `i `uc ]
[; ;UART.h: 14: TXSTAbits.BRGH=0;
"14
[e = . . _TXSTAbits 0 2 -> -> 0 `i `uc ]
[; ;UART.h: 15: TXSTAbits.TX9=0;
"15
[e = . . _TXSTAbits 0 6 -> -> 0 `i `uc ]
[; ;UART.h: 16: TXSTAbits.TXEN=1;
"16
[e = . . _TXSTAbits 0 5 -> -> 1 `i `uc ]
[; ;UART.h: 17: TXSTAbits.SYNC=0;
"17
[e = . . _TXSTAbits 0 4 -> -> 0 `i `uc ]
[; ;UART.h: 20: RCSTAbits.SPEN=1;
"20
[e = . . _RCSTAbits 0 7 -> -> 1 `i `uc ]
[; ;UART.h: 21: RCSTAbits.RX9=0;
"21
[e = . . _RCSTAbits 0 6 -> -> 0 `i `uc ]
[; ;UART.h: 22: RCSTAbits.CREN=1;
"22
[e = . . _RCSTAbits 0 4 -> -> 1 `i `uc ]
[; ;UART.h: 23: RCSTAbits.ADDEN=0;
"23
[e = . . _RCSTAbits 0 3 -> -> 0 `i `uc ]
[; ;UART.h: 33: }
"33
[e :UE 219 ]
}
"35
[v _UART_TxChar `(v ~T0 @X0 1 ef1`uc ]
{
[; ;UART.h: 35: void UART_TxChar(char ch){
[e :U _UART_TxChar ]
[v _ch `uc ~T0 @X0 1 r1 ]
[f ]
[; ;UART.h: 36: while (!TXIF);
"36
[e $U 221  ]
[e :U 222 ]
[e :U 221 ]
[e $ ! _TXIF 222  ]
[e :U 223 ]
[; ;UART.h: 37: TXIF = 0;
"37
[e = _TXIF -> -> 0 `i `b ]
[; ;UART.h: 38: TXREG = ch;
"38
[e = _TXREG _ch ]
[; ;UART.h: 39: }
"39
[e :UE 220 ]
}
"41
[v _UART_TxString `(v ~T0 @X0 1 ef1`*Cuc ]
{
[; ;UART.h: 41: void UART_TxString(const char *str){
[e :U _UART_TxString ]
[v _str `*Cuc ~T0 @X0 1 r1 ]
[f ]
[; ;UART.h: 42: while(*str)
"42
[e $U 225  ]
[e :U 226 ]
[; ;UART.h: 43: {
"43
{
[; ;UART.h: 44: UART_TxChar(*str);
"44
[e ( _UART_TxChar (1 *U _str ]
[; ;UART.h: 45: str++;
"45
[e ++ _str * -> -> 1 `i `x -> -> # *U _str `i `x ]
"46
}
[e :U 225 ]
"42
[e $ != -> *U _str `i -> -> -> 0 `i `Cuc `i 226  ]
[e :U 227 ]
[; ;UART.h: 46: }
[; ;UART.h: 47: }
"47
[e :UE 224 ]
}
"50
[v _UART_RxChar `(uc ~T0 @X0 1 ef ]
{
[; ;UART.h: 50: char UART_RxChar(){
[e :U _UART_RxChar ]
[f ]
[; ;UART.h: 52: if(OERR)
"52
[e $ ! _OERR 229  ]
[; ;UART.h: 53: {
"53
{
[; ;UART.h: 54: CREN = 0;
"54
[e = _CREN -> -> 0 `i `b ]
[; ;UART.h: 55: CREN = 1;
"55
[e = _CREN -> -> 1 `i `b ]
"56
}
[e :U 229 ]
[; ;UART.h: 56: }
[; ;UART.h: 58: while(!RCIF);
"58
[e $U 230  ]
[e :U 231 ]
[e :U 230 ]
[e $ ! _RCIF 231  ]
[e :U 232 ]
[; ;UART.h: 59: RCIF=0;
"59
[e = _RCIF -> -> 0 `i `b ]
[; ;UART.h: 60: return RCREG;
"60
[e ) _RCREG ]
[e $UE 228  ]
[; ;UART.h: 62: }
"62
[e :UE 228 ]
}
"64
[v _UART_RxString `(uc ~T0 @X0 1 ef1`*uc ]
{
[; ;UART.h: 64: char UART_RxString(char *stringa){
[e :U _UART_RxString ]
[v _stringa `*uc ~T0 @X0 1 r1 ]
[f ]
"66
[v _ch `uc ~T0 @X0 1 a ]
"67
[v _len `uc ~T0 @X0 1 a ]
[; ;UART.h: 66: char ch;
[; ;UART.h: 67: char len = 0;
[e = _len -> -> 0 `i `uc ]
[; ;UART.h: 69: while(1)
"69
[e :U 235 ]
[; ;UART.h: 70: {
"70
{
[; ;UART.h: 71: ch=UART_RxChar();
"71
[e = _ch ( _UART_RxChar ..  ]
[; ;UART.h: 73: if((ch=='\r') || (ch=='\n'))
"73
[e $ ! || == -> _ch `ui -> 13 `ui == -> _ch `ui -> 10 `ui 237  ]
[; ;UART.h: 74: {
"74
{
[; ;UART.h: 75: stringa[len]='\0';
"75
[e = *U + _stringa * -> _len `ux -> -> # *U _stringa `ui `ux -> -> 0 `ui `uc ]
[; ;UART.h: 76: break;
"76
[e $U 236  ]
"78
}
[; ;UART.h: 78: }
[e $U 238  ]
"79
[e :U 237 ]
[; ;UART.h: 79: else if((ch=='\b') && (len!=0))
[e $ ! && == -> _ch `ui -> 8 `ui != -> _len `i -> 0 `i 239  ]
[; ;UART.h: 80: {
"80
{
[; ;UART.h: 81: len--;
"81
[e -- _len -> -> 1 `i `uc ]
"82
}
[; ;UART.h: 82: }
[e $U 240  ]
"83
[e :U 239 ]
[; ;UART.h: 83: else
[; ;UART.h: 84: {
"84
{
[; ;UART.h: 85: stringa[len]=ch;
"85
[e = *U + _stringa * -> _len `ux -> -> # *U _stringa `ui `ux _ch ]
[; ;UART.h: 86: len++;
"86
[e ++ _len -> -> 1 `i `uc ]
"87
}
[e :U 240 ]
[e :U 238 ]
"89
}
[e :U 234 ]
"69
[e $U 235  ]
[e :U 236 ]
[; ;UART.h: 87: }
[; ;UART.h: 89: }
[; ;UART.h: 91: return len;
"91
[e ) _len ]
[e $UE 233  ]
[; ;UART.h: 92: }
"92
[e :UE 233 ]
}
"95
[v _UART_GotoNewLine `(v ~T0 @X0 1 ef ]
"96
{
[; ;UART.h: 95: void UART_GotoNewLine()
[; ;UART.h: 96: {
[e :U _UART_GotoNewLine ]
[f ]
[; ;UART.h: 97: UART_TxChar('\r');
"97
[e ( _UART_TxChar (1 -> -> 13 `ui `uc ]
[; ;UART.h: 98: UART_TxChar('\n');
"98
[e ( _UART_TxChar (1 -> -> 10 `ui `uc ]
[; ;UART.h: 99: }
"99
[e :UE 241 ]
}
"102
[v _UART_TxInt `(v ~T0 @X0 1 ef1`i ]
"103
{
[; ;UART.h: 102: void UART_TxInt(int val)
[; ;UART.h: 103: {
[e :U _UART_TxInt ]
"102
[v _val `i ~T0 @X0 1 r1 ]
"103
[f ]
"104
[v _sig `uc ~T0 @X0 1 a ]
[; ;UART.h: 104: char sig=0;
[e = _sig -> -> 0 `i `uc ]
[; ;UART.h: 106: if(val<0)
"106
[e $ ! < _val -> 0 `i 243  ]
[; ;UART.h: 107: {
"107
{
[; ;UART.h: 108: sig=1;
"108
[e = _sig -> -> 1 `i `uc ]
[; ;UART.h: 109: val*=-1;
"109
[e =* _val -U -> 1 `i ]
"110
}
[e :U 243 ]
"112
[v _cent `uc ~T0 @X0 1 a ]
[; ;UART.h: 110: }
[; ;UART.h: 112: char cent=0, dec=0, uni=0;
[e = _cent -> -> 0 `i `uc ]
[v _dec `uc ~T0 @X0 1 a ]
[e = _dec -> -> 0 `i `uc ]
[v _uni `uc ~T0 @X0 1 a ]
[e = _uni -> -> 0 `i `uc ]
[; ;UART.h: 116: while (val>=100) {
"116
[e $U 244  ]
[e :U 245 ]
{
[; ;UART.h: 117: val-=100;
"117
[e =- _val -> 100 `i ]
[; ;UART.h: 118: cent++;
"118
[e ++ _cent -> -> 1 `i `uc ]
"119
}
[e :U 244 ]
"116
[e $ >= _val -> 100 `i 245  ]
[e :U 246 ]
[; ;UART.h: 119: }
[; ;UART.h: 120: while (val>=10) {
"120
[e $U 247  ]
[e :U 248 ]
{
[; ;UART.h: 121: val-=10;
"121
[e =- _val -> 10 `i ]
[; ;UART.h: 122: dec++;
"122
[e ++ _dec -> -> 1 `i `uc ]
"123
}
[e :U 247 ]
"120
[e $ >= _val -> 10 `i 248  ]
[e :U 249 ]
[; ;UART.h: 123: }
[; ;UART.h: 124: uni=val;
"124
[e = _uni -> _val `uc ]
[; ;UART.h: 126: if (cent==0 && dec==0) dec=32;
"126
[e $ ! && == -> _cent `i -> 0 `i == -> _dec `i -> 0 `i 250  ]
[e = _dec -> -> 32 `i `uc ]
[e $U 251  ]
"127
[e :U 250 ]
[; ;UART.h: 127: else dec+=48;
[e =+ _dec -> -> 48 `i `uc ]
[e :U 251 ]
[; ;UART.h: 129: if (cent==0) cent=32;
"129
[e $ ! == -> _cent `i -> 0 `i 252  ]
[e = _cent -> -> 32 `i `uc ]
[e $U 253  ]
"130
[e :U 252 ]
[; ;UART.h: 130: else cent+=48;
[e =+ _cent -> -> 48 `i `uc ]
[e :U 253 ]
[; ;UART.h: 132: uni+=48;
"132
[e =+ _uni -> -> 48 `i `uc ]
[; ;UART.h: 134: if (sig==1) UART_TxChar('-');
"134
[e $ ! == -> _sig `i -> 1 `i 254  ]
[e ( _UART_TxChar (1 -> -> 45 `ui `uc ]
[e :U 254 ]
[; ;UART.h: 136: if (cent!=32) UART_TxChar(cent);
"136
[e $ ! != -> _cent `i -> 32 `i 255  ]
[e ( _UART_TxChar (1 _cent ]
[e :U 255 ]
[; ;UART.h: 137: if (dec!=32) UART_TxChar(dec);
"137
[e $ ! != -> _dec `i -> 32 `i 256  ]
[e ( _UART_TxChar (1 _dec ]
[e :U 256 ]
[; ;UART.h: 138: UART_TxChar(uni);
"138
[e ( _UART_TxChar (1 _uni ]
[; ;UART.h: 139: }
"139
[e :UE 242 ]
}
"141
[v _UART_TxDeci `(v ~T0 @X0 1 ef1`l ]
"142
{
[; ;UART.h: 141: void UART_TxDeci(long int val)
[; ;UART.h: 142: {
[e :U _UART_TxDeci ]
"141
[v _val `l ~T0 @X0 1 r1 ]
"142
[f ]
"143
[v _deci `uc ~T0 @X0 1 a ]
[; ;UART.h: 143: char deci=0, cent=0, mill=0;
[e = _deci -> -> 0 `i `uc ]
[v _cent `uc ~T0 @X0 1 a ]
[e = _cent -> -> 0 `i `uc ]
[v _mill `uc ~T0 @X0 1 a ]
[e = _mill -> -> 0 `i `uc ]
[; ;UART.h: 147: while (val>=100) {
"147
[e $U 258  ]
[e :U 259 ]
{
[; ;UART.h: 148: val-=100;
"148
[e =- _val -> -> 100 `i `l ]
[; ;UART.h: 149: deci++;
"149
[e ++ _deci -> -> 1 `i `uc ]
"150
}
[e :U 258 ]
"147
[e $ >= _val -> -> 100 `i `l 259  ]
[e :U 260 ]
[; ;UART.h: 150: }
[; ;UART.h: 151: while (val>=10) {
"151
[e $U 261  ]
[e :U 262 ]
{
[; ;UART.h: 152: val-=10;
"152
[e =- _val -> -> 10 `i `l ]
[; ;UART.h: 153: cent++;
"153
[e ++ _cent -> -> 1 `i `uc ]
"154
}
[e :U 261 ]
"151
[e $ >= _val -> -> 10 `i `l 262  ]
[e :U 263 ]
[; ;UART.h: 154: }
[; ;UART.h: 155: mill=val;
"155
[e = _mill -> _val `uc ]
[; ;UART.h: 157: if (mill==0 && cent==0) cent=32;
"157
[e $ ! && == -> _mill `i -> 0 `i == -> _cent `i -> 0 `i 264  ]
[e = _cent -> -> 32 `i `uc ]
[e $U 265  ]
"158
[e :U 264 ]
[; ;UART.h: 158: else cent+=48;
[e =+ _cent -> -> 48 `i `uc ]
[e :U 265 ]
[; ;UART.h: 160: if (mill==0) mill=32;
"160
[e $ ! == -> _mill `i -> 0 `i 266  ]
[e = _mill -> -> 32 `i `uc ]
[e $U 267  ]
"161
[e :U 266 ]
[; ;UART.h: 161: else mill+=48;
[e =+ _mill -> -> 48 `i `uc ]
[e :U 267 ]
[; ;UART.h: 163: deci+=48;
"163
[e =+ _deci -> -> 48 `i `uc ]
[; ;UART.h: 165: UART_TxChar(deci);
"165
[e ( _UART_TxChar (1 _deci ]
[; ;UART.h: 166: if (cent!=32) UART_TxChar(cent);
"166
[e $ ! != -> _cent `i -> 32 `i 268  ]
[e ( _UART_TxChar (1 _cent ]
[e :U 268 ]
[; ;UART.h: 167: if (mill!=32) UART_TxChar(mill);
"167
[e $ ! != -> _mill `i -> 32 `i 269  ]
[e ( _UART_TxChar (1 _mill ]
[e :U 269 ]
[; ;UART.h: 168: }
"168
[e :UE 257 ]
}
"171
[v _UART_TxFloat `(v ~T0 @X0 1 ef1`f ]
"172
{
[; ;UART.h: 171: void UART_TxFloat(float numb)
[; ;UART.h: 172: {
[e :U _UART_TxFloat ]
"171
[v _numb `f ~T0 @X0 1 r1 ]
"172
[f ]
"173
[v _numbInt `i ~T0 @X0 1 a ]
[; ;UART.h: 173: int numbInt;
[; ;UART.h: 175: numbInt = (int) numb;
"175
[e = _numbInt -> _numb `i ]
[; ;UART.h: 176: UART_TxInt(numbInt);
"176
[e ( _UART_TxInt (1 _numbInt ]
[; ;UART.h: 178: UART_TxChar('.');
"178
[e ( _UART_TxChar (1 -> -> 46 `ui `uc ]
[; ;UART.h: 180: if (numb<0) {
"180
[e $ ! < _numb -> -> 0 `i `f 271  ]
{
[; ;UART.h: 181: numb*=-1;
"181
[e =* _numb -> -U -> 1 `i `f ]
[; ;UART.h: 182: numbInt*=-1;
"182
[e =* _numbInt -U -> 1 `i ]
"183
}
[e :U 271 ]
[; ;UART.h: 183: }
[; ;UART.h: 186: numb = numb - numbInt;
"186
[e = _numb - _numb -> _numbInt `f ]
[; ;UART.h: 187: numb = numb * 1000;
"187
[e = _numb * _numb -> -> 1000 `i `f ]
[; ;UART.h: 189: UART_TxDeci(numb);
"189
[e ( _UART_TxDeci (1 -> _numb `l ]
[; ;UART.h: 190: }
"190
[e :UE 270 ]
}
"33 main.c
[v _MStepX `i ~T0 @X0 1 e ]
[i _MStepX
-> 0 `i
]
[v _MStepY `i ~T0 @X0 1 e ]
[i _MStepY
-> 0 `i
]
[v _MStepZ `i ~T0 @X0 1 e ]
[i _MStepZ
-> 0 `i
]
[; ;main.c: 33: int MStepX = 0, MStepY = 0, MStepZ = 0;
"36
[v _stepX `uc ~T0 @X0 -> 7 `i e ]
[i _stepX
:U ..
-> 48 `c
-> 48 `c
-> 48 `c
-> 0 `c
..
]
[; ;main.c: 36: char stepX[7] = "000";
"37
[v _stepY `uc ~T0 @X0 -> 7 `i e ]
[i _stepY
:U ..
-> 48 `c
-> 48 `c
-> 48 `c
-> 0 `c
..
]
[; ;main.c: 37: char stepY[7] = "000";
"38
[v _stepZ `uc ~T0 @X0 -> 7 `i e ]
[i _stepZ
:U ..
-> 48 `c
-> 48 `c
-> 48 `c
-> 0 `c
..
]
[; ;main.c: 38: char stepZ[7] = "000";
"41
[v _coords `uc ~T0 @X0 -> 9 `i e ]
[v _canvas `uc ~T0 @X0 -> 7 `i e ]
[v _canvasX `uc ~T0 @X0 -> 3 `i e ]
[i _canvasX
:U ..
-> 48 `c
-> 48 `c
-> 48 `c
..
]
[v _canvasY `uc ~T0 @X0 -> 3 `i e ]
[i _canvasY
:U ..
-> 48 `c
-> 48 `c
-> 48 `c
..
]
[; ;main.c: 41: char coords[9], canvas[7], canvasX[3] = "000", canvasY[3] = "000";
"44
[v _limitX0 `uc ~T0 @X0 1 e ]
[i _limitX0
-> -> 0 `i `uc
]
[v _limitX1 `uc ~T0 @X0 1 e ]
[i _limitX1
-> -> 0 `i `uc
]
[v _limitY0 `uc ~T0 @X0 1 e ]
[i _limitY0
-> -> 0 `i `uc
]
[v _limitY1 `uc ~T0 @X0 1 e ]
[i _limitY1
-> -> 0 `i `uc
]
[v _limitZ0 `uc ~T0 @X0 1 e ]
[i _limitZ0
-> -> 0 `i `uc
]
[v _limitZ1 `uc ~T0 @X0 1 e ]
[i _limitZ1
-> -> 0 `i `uc
]
[; ;main.c: 44: char limitX0 = 0,limitX1 = 0,limitY0 = 0,limitY1 = 0,limitZ0 = 0,limitZ1 = 0;
"47
[v _stepx `i ~T0 @X0 1 e ]
[i _stepx
-> 0 `i
]
[v _stepy `i ~T0 @X0 1 e ]
[i _stepy
-> 0 `i
]
[v _stepz `i ~T0 @X0 1 e ]
[i _stepz
-> 0 `i
]
[v _canvasx `i ~T0 @X0 1 e ]
[i _canvasx
-> 0 `i
]
[v _canvasy `i ~T0 @X0 1 e ]
[i _canvasy
-> 0 `i
]
[; ;main.c: 47: int stepx = 0, stepy = 0, stepz = 0, canvasx = 0, canvasy = 0;
"49
[v _stepxTodo `i ~T0 @X0 1 e ]
[i _stepxTodo
-> 0 `i
]
[v _stepyTodo `i ~T0 @X0 1 e ]
[i _stepyTodo
-> 0 `i
]
[v _stepzTodo `i ~T0 @X0 1 e ]
[i _stepzTodo
-> 0 `i
]
[; ;main.c: 49: int stepxTodo = 0, stepyTodo = 0, stepzTodo = 0;
"50
[v _stepXprec `i ~T0 @X0 1 e ]
[i _stepXprec
-> 0 `i
]
[v _stepYprec `i ~T0 @X0 1 e ]
[i _stepYprec
-> 0 `i
]
[v _stepZprec `i ~T0 @X0 1 e ]
[i _stepZprec
-> 0 `i
]
[; ;main.c: 50: int stepXprec = 0, stepYprec = 0, stepZprec = 0;
"53
[v _defaultDirx `uc ~T0 @X0 1 e ]
[i _defaultDirx
-> -> 0 `i `uc
]
[v _defaultDiry `uc ~T0 @X0 1 e ]
[i _defaultDiry
-> -> 0 `i `uc
]
[v _defaultDirz `uc ~T0 @X0 1 e ]
[i _defaultDirz
-> -> 0 `i `uc
]
[; ;main.c: 53: char defaultDirx = 0, defaultDiry = 0, defaultDirz = 0;
"55
[v _end `uc ~T0 @X0 1 e ]
[i _end
-> -> 0 `i `uc
]
[; ;main.c: 55: char end = 0;
[; ;main.c: 58: int getCanvasDim(char canvas[]);
[; ;main.c: 59: int getCoords(char coords[]);
[; ;main.c: 61: int toint(char c[]);
[; ;main.c: 63: int motorXInit();
[; ;main.c: 64: int motorYInit();
[; ;main.c: 65: int motorZInit();
[; ;main.c: 67: void constSpeed(int activeX, int activeY, int activeZ);
[; ;main.c: 68: void contStepX();
[; ;main.c: 69: void contStepY();
[; ;main.c: 70: void contStepZ();
[; ;main.c: 72: int equivVal(int Mcanvas, int Mstep, int canvas);
[; ;main.c: 74: void reset();
"82
[v _motorX `S272 ~T0 @X0 1 e ]
[v _motorY `S272 ~T0 @X0 1 e ]
[v _motorZ `S272 ~T0 @X0 1 e ]
[; ;main.c: 77: struct stepMotor {
[; ;main.c: 78: char dir;
[; ;main.c: 79: char speed;
[; ;main.c: 80: char mod;
[; ;main.c: 81: int stepsToDo;
[; ;main.c: 82: } motorX, motorY, motorZ;
"85
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 85: void main(void) {
[e :U _main ]
[f ]
[; ;main.c: 86: PORTA = 0x00;
"86
[e = _PORTA -> -> 0 `i `uc ]
[; ;main.c: 87: PORTB = 0x00;
"87
[e = _PORTB -> -> 0 `i `uc ]
[; ;main.c: 88: PORTC = 0x00;
"88
[e = _PORTC -> -> 0 `i `uc ]
[; ;main.c: 89: PORTD = 0x00;
"89
[e = _PORTD -> -> 0 `i `uc ]
[; ;main.c: 90: PORTE = 0x00;
"90
[e = _PORTE -> -> 0 `i `uc ]
[; ;main.c: 92: TRISA = 0b00000000;
"92
[e = _TRISA -> -> 0 `i `uc ]
[; ;main.c: 93: TRISB = 0b01100111;
"93
[e = _TRISB -> -> 103 `i `uc ]
[; ;main.c: 94: TRISC = 0b10000000;
"94
[e = _TRISC -> -> 128 `i `uc ]
[; ;main.c: 95: TRISD = 0b00000000;
"95
[e = _TRISD -> -> 0 `i `uc ]
[; ;main.c: 96: TRISE = 0b00000000;
"96
[e = _TRISE -> -> 0 `i `uc ]
[; ;main.c: 98: ANSEL = 0x00;
"98
[e = _ANSEL -> -> 0 `i `uc ]
[; ;main.c: 99: ANSELH = 0x00;
"99
[e = _ANSELH -> -> 0 `i `uc ]
[; ;main.c: 102: UART_Init();
"102
[e ( _UART_Init ..  ]
[; ;main.c: 104: motorX.dir = 1;
"104
[e = . _motorX 0 -> -> 1 `i `uc ]
[; ;main.c: 105: motorX.speed = 1;
"105
[e = . _motorX 1 -> -> 1 `i `uc ]
[; ;main.c: 106: motorX.mod = 1;
"106
[e = . _motorX 2 -> -> 1 `i `uc ]
[; ;main.c: 108: motorY.dir = 1;
"108
[e = . _motorY 0 -> -> 1 `i `uc ]
[; ;main.c: 109: motorY.speed = 1;
"109
[e = . _motorY 1 -> -> 1 `i `uc ]
[; ;main.c: 110: motorY.mod = 1;
"110
[e = . _motorY 2 -> -> 1 `i `uc ]
[; ;main.c: 112: motorZ.dir = 1;
"112
[e = . _motorZ 0 -> -> 1 `i `uc ]
[; ;main.c: 113: motorZ.speed = 1;
"113
[e = . _motorZ 1 -> -> 1 `i `uc ]
[; ;main.c: 114: motorZ.mod = 1;
"114
[e = . _motorZ 2 -> -> 1 `i `uc ]
[; ;main.c: 131: while(1){
"131
[e :U 275 ]
{
[; ;main.c: 133: end = 0;
"133
[e = _end -> -> 0 `i `uc ]
[; ;main.c: 136: getCanvasDim(canvas);
"136
[e ( _getCanvasDim (1 &U _canvas ]
[; ;main.c: 137: canvasx = toint(canvasX);
"137
[e = _canvasx ( _toint (1 &U _canvasX ]
[; ;main.c: 138: UART_TxInt(canvasx);
"138
[e ( _UART_TxInt (1 _canvasx ]
[; ;main.c: 139: canvasy = toint(canvasY);
"139
[e = _canvasy ( _toint (1 &U _canvasY ]
[; ;main.c: 140: UART_TxInt(canvasy);
"140
[e ( _UART_TxInt (1 _canvasy ]
[; ;main.c: 142: do{
"142
[e :U 279 ]
{
[; ;main.c: 143: UART_RxString(coords);
"143
[e ( _UART_RxString (1 &U _coords ]
[; ;main.c: 144: UART_TxString("eco: ");
"144
[e ( _UART_TxString (1 :s 1C ]
[; ;main.c: 145: UART_TxString(coords);
"145
[e ( _UART_TxString (1 -> &U _coords `*Cuc ]
[; ;main.c: 148: if(!strcmp(coords,"ok"))
"148
[e $ ! ! != ( _strcmp (2 , -> &U _coords `*Cuc :s 2C -> 0 `i 280  ]
[; ;main.c: 149: getCoords(coords);
"149
[e ( _getCoords (1 &U _coords ]
[e :U 280 ]
[; ;main.c: 152: if(!strcmp(coords,"end"))
"152
[e $ ! ! != ( _strcmp (2 , -> &U _coords `*Cuc :s 3C -> 0 `i 281  ]
[; ;main.c: 153: end = 1;
"153
[e = _end -> -> 1 `i `uc ]
[e :U 281 ]
[; ;main.c: 155: if(end != 1){
"155
[e $ ! != -> _end `i -> 1 `i 282  ]
{
[; ;main.c: 157: stepx = equivVal( 1, 1,toint(stepX));
"157
[e = _stepx ( _equivVal (3 , , -> 1 `i -> 1 `i ( _toint (1 &U _stepX ]
[; ;main.c: 158: UART_GotoNewLine();
"158
[e ( _UART_GotoNewLine ..  ]
[; ;main.c: 159: UART_TxString("ecoX: ");
"159
[e ( _UART_TxString (1 :s 4C ]
[; ;main.c: 160: UART_TxInt(stepx);
"160
[e ( _UART_TxInt (1 _stepx ]
[; ;main.c: 162: stepy = equivVal( 1, 1,toint(stepY));
"162
[e = _stepy ( _equivVal (3 , , -> 1 `i -> 1 `i ( _toint (1 &U _stepY ]
[; ;main.c: 163: UART_GotoNewLine();
"163
[e ( _UART_GotoNewLine ..  ]
[; ;main.c: 164: UART_TxString("ecoY: ");
"164
[e ( _UART_TxString (1 :s 5C ]
[; ;main.c: 165: UART_TxInt(stepy);
"165
[e ( _UART_TxInt (1 _stepy ]
[; ;main.c: 168: stepz = toint(stepZ);
"168
[e = _stepz ( _toint (1 &U _stepZ ]
[; ;main.c: 169: UART_GotoNewLine();
"169
[e ( _UART_GotoNewLine ..  ]
[; ;main.c: 170: UART_TxString("ecoZ: ");
"170
[e ( _UART_TxString (1 :s 6C ]
[; ;main.c: 171: UART_TxInt(stepz);
"171
[e ( _UART_TxInt (1 _stepz ]
[; ;main.c: 175: contStepX();
"175
[e ( _contStepX ..  ]
[; ;main.c: 176: UART_GotoNewLine();
"176
[e ( _UART_GotoNewLine ..  ]
[; ;main.c: 177: UART_TxString("todo X: ");
"177
[e ( _UART_TxString (1 :s 7C ]
[; ;main.c: 178: UART_TxInt(stepxTodo);
"178
[e ( _UART_TxInt (1 _stepxTodo ]
[; ;main.c: 179: contStepY();
"179
[e ( _contStepY ..  ]
[; ;main.c: 180: UART_GotoNewLine();
"180
[e ( _UART_GotoNewLine ..  ]
[; ;main.c: 181: UART_TxString("todo Y: ");
"181
[e ( _UART_TxString (1 :s 8C ]
[; ;main.c: 182: UART_TxInt(stepyTodo);
"182
[e ( _UART_TxInt (1 _stepyTodo ]
"187
[v _largest `i ~T0 @X0 1 a ]
[; ;main.c: 187: int largest = maxStep(stepxTodo, stepyTodo, stepzTodo);
[e = _largest ( _maxStep (3 , , _stepxTodo _stepyTodo _stepzTodo ]
"188
[v _activeX `i ~T0 @X0 1 a ]
[; ;main.c: 188: int activeX = 0, activeY = 0, activeZ = 0;
[e = _activeX -> 0 `i ]
[v _activeY `i ~T0 @X0 1 a ]
[e = _activeY -> 0 `i ]
[v _activeZ `i ~T0 @X0 1 a ]
[e = _activeZ -> 0 `i ]
[; ;main.c: 191: for(int i = 0; i<= largest ; i++){
"191
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 286  ]
[e :U 283 ]
{
[; ;main.c: 192: activeX = activeMotor(i, stepxTodo);
"192
[e = _activeX ( _activeMotor (2 , _i _stepxTodo ]
[; ;main.c: 193: activeY = activeMotor(i, stepyTodo);
"193
[e = _activeY ( _activeMotor (2 , _i _stepyTodo ]
[; ;main.c: 195: constSpeed(activeX, activeY, activeZ);
"195
[e ( _constSpeed (3 , , _activeX _activeY _activeZ ]
[; ;main.c: 197: if(activeX == 1)
"197
[e $ ! == _activeX -> 1 `i 287  ]
[; ;main.c: 198: stepMotorX(motorX.dir, motorX.speed, motorX.mod);
"198
[e ( _stepMotorX (3 , , . _motorX 0 . _motorX 1 -> . _motorX 2 `i ]
[e :U 287 ]
[; ;main.c: 200: if(activeY == 1)
"200
[e $ ! == _activeY -> 1 `i 288  ]
[; ;main.c: 201: stepMotorY(motorY.dir, motorY.speed, motorY.mod);
"201
[e ( _stepMotorY (3 , , . _motorY 0 . _motorY 1 -> . _motorY 2 `i ]
[e :U 288 ]
"202
}
"191
[e ++ _i -> 1 `i ]
[e :U 286 ]
[e $ <= _i _largest 283  ]
[e :U 284 ]
"202
}
[; ;main.c: 202: }
[; ;main.c: 205: for(int i = 0; i<= stepz; i++){
"205
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 292  ]
[e :U 289 ]
{
[; ;main.c: 206: motorZ.dir = defaultDirz;
"206
[e = . _motorZ 0 _defaultDirz ]
[; ;main.c: 207: stepMotorZ(motorZ.dir, motorZ.speed, motorZ.mod);
"207
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 2 `i ]
"208
}
"205
[e ++ _i -> 1 `i ]
[e :U 292 ]
[e $ <= _i _stepz 289  ]
[e :U 290 ]
"208
}
[; ;main.c: 208: }
[; ;main.c: 209: for(int i = 0; i<= stepz; i++){
"209
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 296  ]
[e :U 293 ]
{
[; ;main.c: 210: if(motorZ.dir == 1) motorZ.dir = 0;
"210
[e $ ! == -> . _motorZ 0 `i -> 1 `i 297  ]
[e = . _motorZ 0 -> -> 0 `i `uc ]
[e $U 298  ]
"211
[e :U 297 ]
[; ;main.c: 211: else motorZ.dir = 1;
[e = . _motorZ 0 -> -> 1 `i `uc ]
[e :U 298 ]
[; ;main.c: 212: stepMotorZ(motorZ.dir, motorZ.speed, motorZ.mod);
"212
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 2 `i ]
"213
}
"209
[e ++ _i -> 1 `i ]
[e :U 296 ]
[e $ <= _i _stepz 293  ]
[e :U 294 ]
"213
}
[; ;main.c: 213: }
[; ;main.c: 218: stepXprec = stepx;
"218
[e = _stepXprec _stepx ]
[; ;main.c: 219: stepYprec = stepy;
"219
[e = _stepYprec _stepy ]
"222
}
[e :U 282 ]
"225
}
[; ;main.c: 222: }
[; ;main.c: 225: }while(end!=1);
[e $ != -> _end `i -> 1 `i 279  ]
[e :U 278 ]
[; ;main.c: 227: PORTBbits.RB3 = 0;
"227
[e = . . _PORTBbits 0 3 -> -> 0 `i `uc ]
"228
}
[e :U 274 ]
"131
[e $U 275  ]
[e :U 276 ]
[; ;main.c: 228: }
[; ;main.c: 230: }
"230
[e :UE 273 ]
}
"231
[v _getCanvasDim `(i ~T0 @X0 1 ef1`*uc ]
{
[; ;main.c: 231: int getCanvasDim(char canvas[]){
[e :U _getCanvasDim ]
[v _canvas `*uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 234: UART_TxString("ready");
"234
[e ( _UART_TxString (1 :s 9C ]
[; ;main.c: 235: UART_RxString(canvas);
"235
[e ( _UART_RxString (1 _canvas ]
[; ;main.c: 237: for(int j = 0; j<3; j++){
"237
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $ < _j -> 3 `i 300  ]
[e $U 301  ]
[e :U 300 ]
{
[; ;main.c: 238: canvasX[j] = canvas[j];
"238
[e = *U + &U _canvasX * -> -> _j `ui `ux -> -> # *U &U _canvasX `ui `ux *U + _canvas * -> _j `x -> -> # *U _canvas `i `x ]
[; ;main.c: 239: canvasY[j] = canvas[3+j];
"239
[e = *U + &U _canvasY * -> -> _j `ui `ux -> -> # *U &U _canvasY `ui `ux *U + _canvas * -> + -> 3 `i _j `x -> -> # *U _canvas `i `x ]
"240
}
"237
[e ++ _j -> 1 `i ]
[e $ < _j -> 3 `i 300  ]
[e :U 301 ]
"240
}
[; ;main.c: 240: }
[; ;main.c: 243: UART_TxString("X: ");
"243
[e ( _UART_TxString (1 :s 10C ]
[; ;main.c: 244: UART_TxString(canvasX);
"244
[e ( _UART_TxString (1 -> &U _canvasX `*Cuc ]
[; ;main.c: 245: UART_TxString("Y: ");
"245
[e ( _UART_TxString (1 :s 11C ]
[; ;main.c: 246: UART_TxString(canvasY);
"246
[e ( _UART_TxString (1 -> &U _canvasY `*Cuc ]
[; ;main.c: 247: }
"247
[e :UE 299 ]
}
"250
[v _getCoords `(i ~T0 @X0 1 ef1`*uc ]
{
[; ;main.c: 250: int getCoords(char coords[]){
[e :U _getCoords ]
[v _coords `*uc ~T0 @X0 1 r1 ]
[f ]
[; ;main.c: 253: _delay((unsigned long)((1000)*(8000000/4000.0)));
"253
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 254: UART_RxString(coords);
"254
[e ( _UART_RxString (1 _coords ]
[; ;main.c: 255: UART_TxString("eco ricezione: ");
"255
[e ( _UART_TxString (1 :s 12C ]
[; ;main.c: 256: UART_TxString(coords);
"256
[e ( _UART_TxString (1 -> _coords `*Cuc ]
[; ;main.c: 259: for(int i = 0; i<3; i++){
"259
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ < _i -> 3 `i 304  ]
[e $U 305  ]
[e :U 304 ]
{
[; ;main.c: 260: stepX[i] = coords[i];
"260
[e = *U + &U _stepX * -> -> _i `ui `ux -> -> # *U &U _stepX `ui `ux *U + _coords * -> _i `x -> -> # *U _coords `i `x ]
[; ;main.c: 261: stepY[i] = coords[3+i];
"261
[e = *U + &U _stepY * -> -> _i `ui `ux -> -> # *U &U _stepY `ui `ux *U + _coords * -> + -> 3 `i _i `x -> -> # *U _coords `i `x ]
[; ;main.c: 262: stepZ[i] = coords[6+i];
"262
[e = *U + &U _stepZ * -> -> _i `ui `ux -> -> # *U &U _stepZ `ui `ux *U + _coords * -> + -> 6 `i _i `x -> -> # *U _coords `i `x ]
"263
}
"259
[e ++ _i -> 1 `i ]
[e $ < _i -> 3 `i 304  ]
[e :U 305 ]
"263
}
[; ;main.c: 263: }
[; ;main.c: 264: }
"264
[e :UE 303 ]
}
"266
[v _equivVal `(i ~T0 @X0 1 ef3`i`i`i ]
{
[; ;main.c: 266: int equivVal(int Mcanvas, int Mstep, int canvas){
[e :U _equivVal ]
[v _Mcanvas `i ~T0 @X0 1 r1 ]
[v _Mstep `i ~T0 @X0 1 r2 ]
[v _canvas `i ~T0 @X0 1 r3 ]
[f ]
[; ;main.c: 273: return (Mstep * canvas) / Mcanvas;
"273
[e ) / * _Mstep _canvas _Mcanvas ]
[e $UE 307  ]
[; ;main.c: 274: }
"274
[e :UE 307 ]
}
"276
[v _toint `(i ~T0 @X0 1 ef1`*uc ]
{
[; ;main.c: 276: int toint(char *c){
[e :U _toint ]
[v _c `*uc ~T0 @X0 1 r1 ]
[f ]
"277
[v _i `i ~T0 @X0 1 a ]
[v _value `i ~T0 @X0 1 a ]
[v _r `i ~T0 @X0 1 a ]
[v _flag `i ~T0 @X0 1 a ]
[; ;main.c: 277: int i, value, r, flag;
[; ;main.c: 279: flag = 1;
"279
[e = _flag -> 1 `i ]
[; ;main.c: 280: i = value = 0;
"280
[e = _i = _value -> 0 `i ]
[; ;main.c: 282: for( i = 0 ; i<strlen(c) ; ++i){
"282
{
[e = _i -> 0 `i ]
[e $U 312  ]
[e :U 309 ]
{
[; ;main.c: 285: if( i==0 && c[i]=='-' ){
"285
[e $ ! && == _i -> 0 `i == -> *U + _c * -> _i `x -> -> # *U _c `i `x `ui -> 45 `ui 313  ]
{
[; ;main.c: 286: flag = -1;
"286
[e = _flag -U -> 1 `i ]
[; ;main.c: 287: continue;
"287
[e $U 311  ]
"288
}
[e :U 313 ]
[; ;main.c: 288: }
[; ;main.c: 290: r = c[i] - '0';
"290
[e = _r -> - -> *U + _c * -> _i `x -> -> # *U _c `i `x `ui -> 48 `ui `i ]
[; ;main.c: 291: value = value * 10 + r;
"291
[e = _value + * _value -> 10 `i _r ]
"292
}
"282
[e :U 311 ]
[e =+ _i -> 1 `i ]
[e :U 312 ]
[e $ < -> _i `ui ( _strlen (1 -> _c `*Cuc 309  ]
[e :U 310 ]
"292
}
[; ;main.c: 292: }
[; ;main.c: 294: value = value * flag;
"294
[e = _value * _value _flag ]
[; ;main.c: 296: return value;
"296
[e ) _value ]
[e $UE 308  ]
[; ;main.c: 298: }
"298
[e :UE 308 ]
}
"301
[v _constSpeed `(v ~T0 @X0 1 ef3`i`i`i ]
{
[; ;main.c: 301: void constSpeed(int activeX, int activeY, int activeZ){
[e :U _constSpeed ]
[v _activeX `i ~T0 @X0 1 r1 ]
[v _activeY `i ~T0 @X0 1 r2 ]
[v _activeZ `i ~T0 @X0 1 r3 ]
[f ]
"303
[v _nMotor `i ~T0 @X0 1 a ]
[; ;main.c: 303: int nMotor = activeX + activeY;
[e = _nMotor + _activeX _activeY ]
[; ;main.c: 307: if(nMotor == 2)
"307
[e $ ! == _nMotor -> 2 `i 315  ]
[; ;main.c: 308: motorX.speed = motorY.speed = motorZ.speed = 1;
"308
[e = . _motorX 1 = . _motorY 1 = . _motorZ 1 -> -> 1 `i `uc ]
[e :U 315 ]
[; ;main.c: 309: if(nMotor == 1)
"309
[e $ ! == _nMotor -> 1 `i 316  ]
[; ;main.c: 310: motorX.speed = motorY.speed = motorZ.speed = 2;
"310
[e = . _motorX 1 = . _motorY 1 = . _motorZ 1 -> -> 2 `i `uc ]
[e :U 316 ]
[; ;main.c: 312: }
"312
[e :UE 314 ]
}
"315
[v _contStepX `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 315: void contStepX(){
[e :U _contStepX ]
[f ]
[; ;main.c: 318: if(stepXprec > stepx){
"318
[e $ ! > _stepXprec _stepx 318  ]
{
[; ;main.c: 319: stepxTodo = stepXprec - stepx;
"319
[e = _stepxTodo - _stepXprec _stepx ]
[; ;main.c: 320: if(motorX.dir == 1) motorX.dir = 0;
"320
[e $ ! == -> . _motorX 0 `i -> 1 `i 319  ]
[e = . _motorX 0 -> -> 0 `i `uc ]
[e $U 320  ]
"321
[e :U 319 ]
[; ;main.c: 321: else motorX.dir = 1;
[e = . _motorX 0 -> -> 1 `i `uc ]
[e :U 320 ]
"322
}
[; ;main.c: 322: } else if (stepXprec < stepx){
[e $U 321  ]
[e :U 318 ]
[e $ ! < _stepXprec _stepx 322  ]
{
[; ;main.c: 323: stepxTodo = stepx - stepXprec;
"323
[e = _stepxTodo - _stepx _stepXprec ]
[; ;main.c: 324: if(motorX.dir != defaultDirx){
"324
[e $ ! != -> . _motorX 0 `i -> _defaultDirx `i 323  ]
{
[; ;main.c: 325: if(motorX.dir == 1) motorX.dir = 0;
"325
[e $ ! == -> . _motorX 0 `i -> 1 `i 324  ]
[e = . _motorX 0 -> -> 0 `i `uc ]
[e $U 325  ]
"326
[e :U 324 ]
[; ;main.c: 326: else motorX.dir = 1;
[e = . _motorX 0 -> -> 1 `i `uc ]
[e :U 325 ]
"327
}
[e :U 323 ]
"328
}
[; ;main.c: 327: }
[; ;main.c: 328: } else if (stepXprec == stepx){
[e $U 326  ]
[e :U 322 ]
[e $ ! == _stepXprec _stepx 327  ]
{
[; ;main.c: 329: stepxTodo = stepx - stepXprec;
"329
[e = _stepxTodo - _stepx _stepXprec ]
"330
}
[e :U 327 ]
"331
[e :U 326 ]
[e :U 321 ]
[; ;main.c: 330: }
[; ;main.c: 331: }
[e :UE 317 ]
}
"334
[v _contStepZ `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 334: void contStepZ(){
[e :U _contStepZ ]
[f ]
[; ;main.c: 338: if(stepZprec > stepz){
"338
[e $ ! > _stepZprec _stepz 329  ]
{
[; ;main.c: 339: stepzTodo = stepZprec - stepz;
"339
[e = _stepzTodo - _stepZprec _stepz ]
[; ;main.c: 340: if(motorZ.dir == 1) motorZ.dir = 0;
"340
[e $ ! == -> . _motorZ 0 `i -> 1 `i 330  ]
[e = . _motorZ 0 -> -> 0 `i `uc ]
[e $U 331  ]
"341
[e :U 330 ]
[; ;main.c: 341: else motorZ.dir = 1;
[e = . _motorZ 0 -> -> 1 `i `uc ]
[e :U 331 ]
"342
}
[; ;main.c: 342: } else if (stepZprec < stepz){
[e $U 332  ]
[e :U 329 ]
[e $ ! < _stepZprec _stepz 333  ]
{
[; ;main.c: 343: stepzTodo = stepz - stepZprec;
"343
[e = _stepzTodo - _stepz _stepZprec ]
[; ;main.c: 344: if(motorZ.dir != defaultDirz){
"344
[e $ ! != -> . _motorZ 0 `i -> _defaultDirz `i 334  ]
{
[; ;main.c: 345: if(motorZ.dir == 1) motorZ.dir = 0;
"345
[e $ ! == -> . _motorZ 0 `i -> 1 `i 335  ]
[e = . _motorZ 0 -> -> 0 `i `uc ]
[e $U 336  ]
"346
[e :U 335 ]
[; ;main.c: 346: else motorZ.dir = 1;
[e = . _motorZ 0 -> -> 1 `i `uc ]
[e :U 336 ]
"347
}
[e :U 334 ]
"348
}
[; ;main.c: 347: }
[; ;main.c: 348: } else if (stepZprec == stepz){
[e $U 337  ]
[e :U 333 ]
[e $ ! == _stepZprec _stepz 338  ]
{
[; ;main.c: 349: stepzTodo = stepz - stepZprec;
"349
[e = _stepzTodo - _stepz _stepZprec ]
"350
}
[e :U 338 ]
"351
[e :U 337 ]
[e :U 332 ]
[; ;main.c: 350: }
[; ;main.c: 351: }
[e :UE 328 ]
}
"354
[v _contStepY `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 354: void contStepY(){
[e :U _contStepY ]
[f ]
[; ;main.c: 358: if(stepYprec > stepy){
"358
[e $ ! > _stepYprec _stepy 340  ]
{
[; ;main.c: 359: stepyTodo = stepYprec - stepy;
"359
[e = _stepyTodo - _stepYprec _stepy ]
[; ;main.c: 360: if(motorY.dir == 1) motorY.dir = 0;
"360
[e $ ! == -> . _motorY 0 `i -> 1 `i 341  ]
[e = . _motorY 0 -> -> 0 `i `uc ]
[e $U 342  ]
"361
[e :U 341 ]
[; ;main.c: 361: else motorY.dir = 1;
[e = . _motorY 0 -> -> 1 `i `uc ]
[e :U 342 ]
"362
}
[; ;main.c: 362: } else if (stepYprec < stepy){
[e $U 343  ]
[e :U 340 ]
[e $ ! < _stepYprec _stepy 344  ]
{
[; ;main.c: 363: stepyTodo = stepy - stepYprec;
"363
[e = _stepyTodo - _stepy _stepYprec ]
[; ;main.c: 364: if(motorY.dir != defaultDiry){
"364
[e $ ! != -> . _motorY 0 `i -> _defaultDiry `i 345  ]
{
[; ;main.c: 365: if(motorY.dir == 1) motorY.dir = 0;
"365
[e $ ! == -> . _motorY 0 `i -> 1 `i 346  ]
[e = . _motorY 0 -> -> 0 `i `uc ]
[e $U 347  ]
"366
[e :U 346 ]
[; ;main.c: 366: else motorY.dir = 1;
[e = . _motorY 0 -> -> 1 `i `uc ]
[e :U 347 ]
"367
}
[e :U 345 ]
"368
}
[; ;main.c: 367: }
[; ;main.c: 368: } else if (stepYprec == stepy){
[e $U 348  ]
[e :U 344 ]
[e $ ! == _stepYprec _stepy 349  ]
{
[; ;main.c: 369: stepyTodo = stepy - stepYprec;
"369
[e = _stepyTodo - _stepy _stepYprec ]
"370
}
[e :U 349 ]
"371
[e :U 348 ]
[e :U 343 ]
[; ;main.c: 370: }
[; ;main.c: 371: }
[e :UE 339 ]
}
"374
[v _motorXInit `(i ~T0 @X0 1 ef ]
{
[; ;main.c: 374: int motorXInit(){
[e :U _motorXInit ]
[f ]
"375
[v _m `i ~T0 @X0 1 a ]
[; ;main.c: 375: int m = 0;
[e = _m -> 0 `i ]
"376
[v _status `i ~T0 @X0 1 a ]
[; ;main.c: 376: int status = 0;
[e = _status -> 0 `i ]
[; ;main.c: 377: for(int i = 0; status != 1; i++){
"377
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ != _status -> 1 `i 351  ]
[e $U 352  ]
[e :U 351 ]
{
[; ;main.c: 378: motorX.dir = 1;
"378
[e = . _motorX 0 -> -> 1 `i `uc ]
[; ;main.c: 379: stepMotorX(motorX.dir, motorX.speed, motorX.mod);
"379
[e ( _stepMotorX (3 , , . _motorX 0 . _motorX 1 -> . _motorX 2 `i ]
[; ;main.c: 381: if(limitz() == 1){
"381
[e $ ! == ( _limitz ..  -> 1 `i 354  ]
{
[; ;main.c: 382: for(int j = 0; limitX1 != 1; j++){
"382
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $U 358  ]
[e :U 355 ]
{
[; ;main.c: 383: motorX.dir = 0;
"383
[e = . _motorX 0 -> -> 0 `i `uc ]
[; ;main.c: 384: stepMotorX(motorX.dir, motorX.speed, motorX.mod);
"384
[e ( _stepMotorX (3 , , . _motorX 0 . _motorX 1 -> . _motorX 2 `i ]
[; ;main.c: 385: if(limitz() == 2){
"385
[e $ ! == ( _limitz ..  -> 2 `i 359  ]
{
[; ;main.c: 386: limitX1 = 1;
"386
[e = _limitX1 -> -> 1 `i `uc ]
[; ;main.c: 387: m = j;
"387
[e = _m _j ]
"388
}
[e :U 359 ]
"389
}
"382
[e ++ _j -> 1 `i ]
[e :U 358 ]
[e $ != -> _limitX1 `i -> 1 `i 355  ]
[e :U 356 ]
"389
}
[; ;main.c: 388: }
[; ;main.c: 389: }
[; ;main.c: 390: _delay((unsigned long)((1000)*(8000000/4000.0)));
"390
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 391: for(int k = 0; k<m; k++){
"391
{
[v _k `i ~T0 @X0 1 a ]
[e = _k -> 0 `i ]
[e $U 363  ]
[e :U 360 ]
{
[; ;main.c: 392: motorX.dir = 1;
"392
[e = . _motorX 0 -> -> 1 `i `uc ]
[; ;main.c: 393: stepMotorX(motorX.dir, motorX.speed, motorX.mod);
"393
[e ( _stepMotorX (3 , , . _motorX 0 . _motorX 1 -> . _motorX 2 `i ]
"394
}
"391
[e ++ _k -> 1 `i ]
[e :U 363 ]
[e $ < _k _m 360  ]
[e :U 361 ]
"394
}
[; ;main.c: 394: }
[; ;main.c: 395: motorX.dir = 0;
"395
[e = . _motorX 0 -> -> 0 `i `uc ]
[; ;main.c: 396: status = 1;
"396
[e = _status -> 1 `i ]
"397
}
[e :U 354 ]
[; ;main.c: 397: }
[; ;main.c: 399: if(limitz() == 2){
"399
[e $ ! == ( _limitz ..  -> 2 `i 364  ]
{
[; ;main.c: 400: for(int j = 0; limitX0 != 1; j++){
"400
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $U 368  ]
[e :U 365 ]
{
[; ;main.c: 401: motorX.dir = 0;
"401
[e = . _motorX 0 -> -> 0 `i `uc ]
[; ;main.c: 402: stepMotorX(motorX.dir, motorX.speed, motorX.mod);
"402
[e ( _stepMotorX (3 , , . _motorX 0 . _motorX 1 -> . _motorX 2 `i ]
[; ;main.c: 403: if(limitz() == 1){
"403
[e $ ! == ( _limitz ..  -> 1 `i 369  ]
{
[; ;main.c: 404: limitX0 = 1;
"404
[e = _limitX0 -> -> 1 `i `uc ]
[; ;main.c: 405: m = j;
"405
[e = _m _j ]
"406
}
[e :U 369 ]
"407
}
"400
[e ++ _j -> 1 `i ]
[e :U 368 ]
[e $ != -> _limitX0 `i -> 1 `i 365  ]
[e :U 366 ]
"407
}
[; ;main.c: 406: }
[; ;main.c: 407: }
[; ;main.c: 408: motorX.dir = 1;
"408
[e = . _motorX 0 -> -> 1 `i `uc ]
[; ;main.c: 409: status = 1;
"409
[e = _status -> 1 `i ]
[; ;main.c: 410: _delay((unsigned long)((1000)*(8000000/4000.0)));
"410
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"411
}
[e :U 364 ]
"412
}
"377
[e ++ _i -> 1 `i ]
[e $ != _status -> 1 `i 351  ]
[e :U 352 ]
"412
}
[; ;main.c: 411: }
[; ;main.c: 412: }
[; ;main.c: 413: return m;
"413
[e ) _m ]
[e $UE 350  ]
[; ;main.c: 414: }
"414
[e :UE 350 ]
}
"416
[v _motorYInit `(i ~T0 @X0 1 ef ]
{
[; ;main.c: 416: int motorYInit(){
[e :U _motorYInit ]
[f ]
"417
[v _m `i ~T0 @X0 1 a ]
[; ;main.c: 417: int m = 0;
[e = _m -> 0 `i ]
"418
[v _status `i ~T0 @X0 1 a ]
[; ;main.c: 418: int status = 0;
[e = _status -> 0 `i ]
[; ;main.c: 419: for(int i = 0; status != 1; i++){
"419
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ != _status -> 1 `i 371  ]
[e $U 372  ]
[e :U 371 ]
{
[; ;main.c: 420: motorY.dir = 1;
"420
[e = . _motorY 0 -> -> 1 `i `uc ]
[; ;main.c: 421: stepMotorY(motorY.dir, motorY.speed, motorY.mod);
"421
[e ( _stepMotorY (3 , , . _motorY 0 . _motorY 1 -> . _motorY 2 `i ]
[; ;main.c: 423: if(limitz() == 1){
"423
[e $ ! == ( _limitz ..  -> 1 `i 374  ]
{
[; ;main.c: 424: for(int j = 0; limitY1 != 1; j++){
"424
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $U 378  ]
[e :U 375 ]
{
[; ;main.c: 425: motorY.dir = 0;
"425
[e = . _motorY 0 -> -> 0 `i `uc ]
[; ;main.c: 426: stepMotorY(motorY.dir, motorY.speed, motorY.mod);
"426
[e ( _stepMotorY (3 , , . _motorY 0 . _motorY 1 -> . _motorY 2 `i ]
[; ;main.c: 427: if(limitz() == 2){
"427
[e $ ! == ( _limitz ..  -> 2 `i 379  ]
{
[; ;main.c: 428: limitY1 = 1;
"428
[e = _limitY1 -> -> 1 `i `uc ]
[; ;main.c: 429: m = j;
"429
[e = _m _j ]
"430
}
[e :U 379 ]
"431
}
"424
[e ++ _j -> 1 `i ]
[e :U 378 ]
[e $ != -> _limitY1 `i -> 1 `i 375  ]
[e :U 376 ]
"431
}
[; ;main.c: 430: }
[; ;main.c: 431: }
[; ;main.c: 432: _delay((unsigned long)((1000)*(8000000/4000.0)));
"432
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 433: for(int k = 0; k<m; k++){
"433
{
[v _k `i ~T0 @X0 1 a ]
[e = _k -> 0 `i ]
[e $U 383  ]
[e :U 380 ]
{
[; ;main.c: 434: motorY.dir = 1;
"434
[e = . _motorY 0 -> -> 1 `i `uc ]
[; ;main.c: 435: stepMotorY(motorY.dir, motorY.speed, motorY.mod);
"435
[e ( _stepMotorY (3 , , . _motorY 0 . _motorY 1 -> . _motorY 2 `i ]
"436
}
"433
[e ++ _k -> 1 `i ]
[e :U 383 ]
[e $ < _k _m 380  ]
[e :U 381 ]
"436
}
[; ;main.c: 436: }
[; ;main.c: 437: motorY.dir = 0;
"437
[e = . _motorY 0 -> -> 0 `i `uc ]
[; ;main.c: 438: status = 1;
"438
[e = _status -> 1 `i ]
"439
}
[e :U 374 ]
[; ;main.c: 439: }
[; ;main.c: 441: if(limitz() == 2){
"441
[e $ ! == ( _limitz ..  -> 2 `i 384  ]
{
[; ;main.c: 442: for(int j = 0; limitY0 != 1; j++){
"442
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $U 388  ]
[e :U 385 ]
{
[; ;main.c: 443: motorY.dir = 0;
"443
[e = . _motorY 0 -> -> 0 `i `uc ]
[; ;main.c: 444: stepMotorY(motorY.dir, motorY.speed, motorY.mod);
"444
[e ( _stepMotorY (3 , , . _motorY 0 . _motorY 1 -> . _motorY 2 `i ]
[; ;main.c: 445: if(limitz() == 1){
"445
[e $ ! == ( _limitz ..  -> 1 `i 389  ]
{
[; ;main.c: 446: limitY0 = 1;
"446
[e = _limitY0 -> -> 1 `i `uc ]
[; ;main.c: 447: m = j;
"447
[e = _m _j ]
"448
}
[e :U 389 ]
"449
}
"442
[e ++ _j -> 1 `i ]
[e :U 388 ]
[e $ != -> _limitY0 `i -> 1 `i 385  ]
[e :U 386 ]
"449
}
[; ;main.c: 448: }
[; ;main.c: 449: }
[; ;main.c: 450: motorY.dir = 1;
"450
[e = . _motorY 0 -> -> 1 `i `uc ]
[; ;main.c: 451: status = 1;
"451
[e = _status -> 1 `i ]
[; ;main.c: 452: _delay((unsigned long)((1000)*(8000000/4000.0)));
"452
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"453
}
[e :U 384 ]
"454
}
"419
[e ++ _i -> 1 `i ]
[e $ != _status -> 1 `i 371  ]
[e :U 372 ]
"454
}
[; ;main.c: 453: }
[; ;main.c: 454: }
[; ;main.c: 455: return m;
"455
[e ) _m ]
[e $UE 370  ]
[; ;main.c: 456: }
"456
[e :UE 370 ]
}
"458
[v _motorZInit `(i ~T0 @X0 1 ef ]
{
[; ;main.c: 458: int motorZInit(){
[e :U _motorZInit ]
[f ]
"459
[v _m `i ~T0 @X0 1 a ]
[; ;main.c: 459: int m = 0;
[e = _m -> 0 `i ]
"460
[v _status `i ~T0 @X0 1 a ]
[; ;main.c: 460: int status = 0;
[e = _status -> 0 `i ]
[; ;main.c: 461: for(int i = 0; status != 1; i++){
"461
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ != _status -> 1 `i 391  ]
[e $U 392  ]
[e :U 391 ]
{
[; ;main.c: 462: motorZ.dir = 1;
"462
[e = . _motorZ 0 -> -> 1 `i `uc ]
[; ;main.c: 464: stepMotorZ(motorZ.dir, motorZ.speed, motorZ.speed);
"464
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 1 `i ]
[; ;main.c: 466: if(limitz() == 1){
"466
[e $ ! == ( _limitz ..  -> 1 `i 394  ]
{
[; ;main.c: 468: for(int j = 0; limitZ1 != 1; j++){
"468
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $U 398  ]
[e :U 395 ]
{
[; ;main.c: 469: motorZ.dir = 0;
"469
[e = . _motorZ 0 -> -> 0 `i `uc ]
[; ;main.c: 470: stepMotorZ(motorZ.dir, motorZ.speed, motorZ.mod);
"470
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 2 `i ]
[; ;main.c: 471: if(limitz() == 2){
"471
[e $ ! == ( _limitz ..  -> 2 `i 399  ]
{
[; ;main.c: 472: limitZ1 = 1;
"472
[e = _limitZ1 -> -> 1 `i `uc ]
[; ;main.c: 473: m = j;
"473
[e = _m _j ]
"474
}
[e :U 399 ]
"475
}
"468
[e ++ _j -> 1 `i ]
[e :U 398 ]
[e $ != -> _limitZ1 `i -> 1 `i 395  ]
[e :U 396 ]
"475
}
[; ;main.c: 474: }
[; ;main.c: 475: }
[; ;main.c: 476: _delay((unsigned long)((1000)*(8000000/4000.0)));
"476
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
[; ;main.c: 477: for(int k = 0; k<m; k++){
"477
{
[v _k `i ~T0 @X0 1 a ]
[e = _k -> 0 `i ]
[e $U 403  ]
[e :U 400 ]
{
[; ;main.c: 478: motorZ.dir = 1;
"478
[e = . _motorZ 0 -> -> 1 `i `uc ]
[; ;main.c: 479: stepMotorZ(motorZ.dir, motorZ.speed, motorZ.mod);
"479
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 2 `i ]
"480
}
"477
[e ++ _k -> 1 `i ]
[e :U 403 ]
[e $ < _k _m 400  ]
[e :U 401 ]
"480
}
[; ;main.c: 480: }
[; ;main.c: 481: motorZ.dir = 0;
"481
[e = . _motorZ 0 -> -> 0 `i `uc ]
[; ;main.c: 482: status = 1;
"482
[e = _status -> 1 `i ]
"484
}
[e :U 394 ]
[; ;main.c: 484: }
[; ;main.c: 486: if(limitz() == 2){
"486
[e $ ! == ( _limitz ..  -> 2 `i 404  ]
{
[; ;main.c: 487: for(int j = 0; limitZ0 != 1; j++){
"487
{
[v _j `i ~T0 @X0 1 a ]
[e = _j -> 0 `i ]
[e $U 408  ]
[e :U 405 ]
{
[; ;main.c: 488: motorZ.dir = 0;
"488
[e = . _motorZ 0 -> -> 0 `i `uc ]
[; ;main.c: 489: stepMotorZ(motorZ.dir, motorZ.speed, motorZ.mod);
"489
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 2 `i ]
[; ;main.c: 490: if(limitz() == 1){
"490
[e $ ! == ( _limitz ..  -> 1 `i 409  ]
{
[; ;main.c: 491: limitZ0 = 1;
"491
[e = _limitZ0 -> -> 1 `i `uc ]
[; ;main.c: 492: m = j;
"492
[e = _m _j ]
"493
}
[e :U 409 ]
"494
}
"487
[e ++ _j -> 1 `i ]
[e :U 408 ]
[e $ != -> _limitZ0 `i -> 1 `i 405  ]
[e :U 406 ]
"494
}
[; ;main.c: 493: }
[; ;main.c: 494: }
[; ;main.c: 495: motorZ.dir = 1;
"495
[e = . _motorZ 0 -> -> 1 `i `uc ]
[; ;main.c: 496: status = 1;
"496
[e = _status -> 1 `i ]
[; ;main.c: 497: _delay((unsigned long)((1000)*(8000000/4000.0)));
"497
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 8000000 `l `d .4000.0 `ul ]
"498
}
[e :U 404 ]
"499
}
"461
[e ++ _i -> 1 `i ]
[e $ != _status -> 1 `i 391  ]
[e :U 392 ]
"499
}
[; ;main.c: 498: }
[; ;main.c: 499: }
[; ;main.c: 500: return m;
"500
[e ) _m ]
[e $UE 390  ]
[; ;main.c: 501: }
"501
[e :UE 390 ]
}
"503
[v _reset `(v ~T0 @X0 1 ef ]
{
[; ;main.c: 503: void reset(){
[e :U _reset ]
[f ]
[; ;main.c: 506: motorX.dir = defaultDirx;
"506
[e = . _motorX 0 _defaultDirx ]
[; ;main.c: 507: motorY.dir = defaultDiry;
"507
[e = . _motorY 0 _defaultDiry ]
[; ;main.c: 508: motorZ.dir = defaultDirz;
"508
[e = . _motorZ 0 _defaultDirz ]
[; ;main.c: 511: if(defaultDirx == 1) motorX.dir = 0;
"511
[e $ ! == -> _defaultDirx `i -> 1 `i 411  ]
[e = . _motorX 0 -> -> 0 `i `uc ]
[e $U 412  ]
"512
[e :U 411 ]
[; ;main.c: 512: else motorX.dir = 1;
[e = . _motorX 0 -> -> 1 `i `uc ]
[e :U 412 ]
[; ;main.c: 513: if(defaultDiry == 1) motorY.dir = 0;
"513
[e $ ! == -> _defaultDiry `i -> 1 `i 413  ]
[e = . _motorY 0 -> -> 0 `i `uc ]
[e $U 414  ]
"514
[e :U 413 ]
[; ;main.c: 514: else motorY.dir = 1;
[e = . _motorY 0 -> -> 1 `i `uc ]
[e :U 414 ]
[; ;main.c: 515: if(defaultDirz == 1) motorZ.dir = 0;
"515
[e $ ! == -> _defaultDirz `i -> 1 `i 415  ]
[e = . _motorZ 0 -> -> 0 `i `uc ]
[e $U 416  ]
"516
[e :U 415 ]
[; ;main.c: 516: else motorZ.dir = 1;
[e = . _motorZ 0 -> -> 1 `i `uc ]
[e :U 416 ]
"518
[v _controllo `i ~T0 @X0 1 a ]
[; ;main.c: 518: int controllo = 0;
[e = _controllo -> 0 `i ]
[; ;main.c: 519: for(int i = 0; controllo != 1; i++){
"519
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $ != _controllo -> 1 `i 417  ]
[e $U 418  ]
[e :U 417 ]
{
[; ;main.c: 520: if(limitx()!= 1) stepMotorX(motorX.dir, motorX.speed, motorX.mod);
"520
[e $ ! != ( _limitx ..  -> 1 `i 420  ]
[e ( _stepMotorX (3 , , . _motorX 0 . _motorX 1 -> . _motorX 2 `i ]
[e :U 420 ]
[; ;main.c: 521: if(limity()!= 1) stepMotorY(motorY.dir, motorY.speed, motorY.mod);
"521
[e $ ! != ( _limity ..  -> 1 `i 421  ]
[e ( _stepMotorY (3 , , . _motorY 0 . _motorY 1 -> . _motorY 2 `i ]
[e :U 421 ]
[; ;main.c: 522: if(limitz()!= 1) stepMotorZ(motorZ.dir, motorZ.speed, motorZ.mod);
"522
[e $ ! != ( _limitz ..  -> 1 `i 422  ]
[e ( _stepMotorZ (3 , , . _motorZ 0 . _motorZ 1 -> . _motorZ 2 `i ]
[e :U 422 ]
[; ;main.c: 524: if(limitx() == 1 && limity() == 1 && limitz() == 1) controllo = 1;
"524
[e $ ! && && == ( _limitx ..  -> 1 `i == ( _limity ..  -> 1 `i == ( _limitz ..  -> 1 `i 423  ]
[e = _controllo -> 1 `i ]
[e :U 423 ]
"525
}
"519
[e ++ _i -> 1 `i ]
[e $ != _controllo -> 1 `i 417  ]
[e :U 418 ]
"525
}
[; ;main.c: 525: }
[; ;main.c: 528: MStepX = 0, MStepY = 0, MStepZ = 0;
"528
[e ; ; = _MStepX -> 0 `i = _MStepY -> 0 `i = _MStepZ -> 0 `i ]
[; ;main.c: 530: limitX0 = 0,limitX1 = 0,limitY0 = 0,limitY1 = 0,limitZ0 = 0,limitZ1 = 0;
"530
[e ; ; ; ; ; = _limitX0 -> -> 0 `i `uc = _limitX1 -> -> 0 `i `uc = _limitY0 -> -> 0 `i `uc = _limitY1 -> -> 0 `i `uc = _limitZ0 -> -> 0 `i `uc = _limitZ1 -> -> 0 `i `uc ]
[; ;main.c: 532: stepx = 0, stepy = 0, stepz = 0;
"532
[e ; ; = _stepx -> 0 `i = _stepy -> 0 `i = _stepz -> 0 `i ]
[; ;main.c: 534: stepxTodo = 0, stepyTodo = 0, stepzTodo = 0;
"534
[e ; ; = _stepxTodo -> 0 `i = _stepyTodo -> 0 `i = _stepzTodo -> 0 `i ]
[; ;main.c: 535: stepXprec = 0, stepYprec = 0, stepZprec = 0;
"535
[e ; ; = _stepXprec -> 0 `i = _stepYprec -> 0 `i = _stepZprec -> 0 `i ]
[; ;main.c: 537: defaultDirx = 0, defaultDiry = 0, defaultDirz = 0;
"537
[e ; ; = _defaultDirx -> -> 0 `i `uc = _defaultDiry -> -> 0 `i `uc = _defaultDirz -> -> 0 `i `uc ]
[; ;main.c: 539: end = 0;
"539
[e = _end -> -> 0 `i `uc ]
[; ;main.c: 541: }
"541
[e :UE 410 ]
}
[a 9C 114 101 97 100 121 0 ]
[a 2C 111 107 0 ]
[a 3C 101 110 100 0 ]
[a 1C 101 99 111 58 32 0 ]
[a 12C 101 99 111 32 114 105 99 101 122 105 111 110 101 58 32 0 ]
[a 6C 101 99 111 90 58 32 0 ]
[a 5C 101 99 111 89 58 32 0 ]
[a 8C 116 111 100 111 32 89 58 32 0 ]
[a 11C 89 58 32 0 ]
[a 4C 101 99 111 88 58 32 0 ]
[a 7C 116 111 100 111 32 88 58 32 0 ]
[a 10C 88 58 32 0 ]
